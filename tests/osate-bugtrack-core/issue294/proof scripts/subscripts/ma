# manage_alarm_ma.impl
#[serial 1047] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
axioms
substitute-both
normalize
axioms
#[serial 1048] Serban's Theorem:  disjunction of execute conditions leaving execution state check_temp, <<M(check_temp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
laws
normalize
cnf
laws
normalize
#[serial 1049] Serban's Theorem:  disjunction of execute conditions leaving execution state check_hyst, <<M(check_hyst)>> -> <<e1 or e2 or . . . en>>
axioms
substitute-pre
#[serial 1050] Serban's Theorem:  disjunction of execute conditions leaving execution state check_mode, <<M(check_mode)>> -> <<e1 or e2 or . . . en>>
axioms
normalize
cnf
normalize
laws
normalize
laws
substitute-post
normalize
replace<=
laws
normalize
#[serial 1051]  <<M(poweron)>> -> <<M(run)>> for maPo:poweron-[ ]->run{};
axioms
#[serial 1052]  <<M(run) and x>> -> <<M(check_mode)>> for maRun:run-[x]->check_mode{};
axioms
#[serial 1053]  <<M(check_mode) and x>> A <<M(run)>> for maFailed:check_mode-[x]->run{A};
axioms
reduce
atomic
dist^
dist^
normalize
axioms
substitute-post
normalize
laws
dist^
normalize
substitute-post
normalize
dist^
normalize
#[serial 1054]  <<M(check_mode) and x>> A <<M(run)>> for maInit:check_mode-[x]->run{A};
axioms
reduce
atomic
normalize
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
substitute-post
normalize
#[serial 1055]  <<M(check_mode) and x>> -> <<M(check_temp)>> for maNormal:check_mode-[x]->check_temp{};
axioms
normalize
remove-axioms-post
laws
split-post
axioms
substitute-post
normalize
#[serial 1056]  <<M(check_temp) and x>> A <<M(run)>> for maOor:check_temp-[x]->run{A};
axioms
reduce
atomic
laws
dist^
normalize
dist^
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
split-post
normalize
axioms
substitute-both
substitute-both
normalize
laws
replace<=
normalize
axioms
#[serial 1057]  <<M(check_temp) and x>> A <<M(run)>> for maIr:check_temp-[x]->run{A};
reduce
atomic
laws
dist^
dist^
normalize
axioms
remove-axioms-post
substitute-post
normalize
laws
dist^
normalize
dist^
normalize
axioms
split-post
axioms
range-exp
normalize
axioms
substitute-both
substitute-pre
substitute-post
normalize
replace<=
laws
normalize
axioms
#[serial 1058]  <<M(check_temp) and x>> -> <<M(check_hyst)>> for maHys:check_temp-[x]->check_hyst{};
substitute-both
normalize
range-exp
normalize
laws
dist^
#[serial 1059]  <<M(check_hyst) and x>> A <<M(run)>> for maHysOn:check_hyst-[x]->run{A};
axioms
reduce
atomic
laws
normalize
axioms
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
substitute-both
normalize
laws
substitute-pre
normalize
laws
normalize
sub-equals
substitute-post
normalize
laws
normalize
replace<=
#[serial 1060]  <<M(check_hyst) and x>> A <<M(run)>> for maHysOff:check_hyst-[x]->run{A};
axioms
reduce
atomic
normalize
laws
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
substitute-both
normalize
laws
sub-equals
#[serial 1061]  <<M(run) and x>> -> <<M(halt)>> for maStop:run-[x]->halt{};
axioms