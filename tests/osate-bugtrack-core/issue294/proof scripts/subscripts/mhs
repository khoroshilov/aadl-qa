#[serial 1003] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
substitute-both
normalize
#[serial 1004] Serban's Theorem:  disjunction of execute conditions leaving execution state check_temp, <<M(check_temp)>> -> <<e1 or e2 or . . . en>>
axioms
normalize
replace<=
cnf
laws
normalize
#[serial 1005] Serban's Theorem:  disjunction of execute conditions leaving execution state check_hyst, <<M(check_hyst)>> -> <<e1 or e2 or . . . en>>
axioms
substitute-pre
#[serial 1006] Serban's Theorem:  disjunction of execute conditions leaving execution state check_mode, <<M(check_mode)>> -> <<e1 or e2 or . . . en>>
axioms
normalize
cnf
normalize
laws
normalize
laws
substitute-post
normalize
replace<=
laws
normalize
#[serial 1007]  <<M(poweron)>> -> <<M(run)>> for mhsPo:poweron-[ ]->run{};
axioms
#[serial 1008]  <<M(run) and x>> -> <<M(check_mode)>> for mhsRun:run-[x]->check_mode{};
axioms
#[serial 1009]  <<M(check_mode) and x>> A <<M(run)>> for mhsFailed:check_mode-[x]->run{A};
axioms
reduce
atomic
dist^
dist^
normalize
axioms
substitute-post
normalize
laws
dist^
normalize
dist^
normalize
axioms
substitute-post
normalize
#[serial 1010]  <<M(check_mode) and x>> A <<M(run)>> for mhsInit:check_mode-[x]->run{A};
axioms
reduce
atomic
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
substitute-post
normalize
#[serial 1011]  <<M(check_mode) and x>> -> <<M(check_temp)>> for mhsNormal:check_mode-[x]->check_temp{};
axioms
normalize
remove-axioms-post
laws
split-post
axioms
substitute-post
normalize
#[serial 1012]  <<M(check_temp) and x>> A <<M(run)>> for mhsBelow:check_temp-[x]->run{A};
axioms
reduce
atomic
laws
dist^
normalize
dist^
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
split-post
axioms
substitute-both
substitute-both
normalize
laws
replace<=
normalize
#[serial 1013]  <<M(check_temp) and x>> A <<M(run)>> for mhsAbove:check_temp-[x]->run{A};
axioms
reduce
atomic
laws
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
split-post
axioms
substitute-both
substitute-pre
substitute-post
normalize
replace<=
laws
normalize
#[serial 1014]  <<M(check_temp) and x>> -> <<M(check_hyst)>> for mhsHys:check_temp-[x]->check_hyst{};
axioms
substitute-both
normalize
laws
dist^
#[serial 1015]  <<M(check_hyst) and x>> A <<M(run)>> for mhsHysOn:check_hyst-[x]->run{A};
axioms
reduce
atomic
laws
normalize
axioms
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
substitute-both
normalize
laws
substitute-pre
normalize
laws
normalize
sub-equals
replace<=
range-exp
replace<=
normalize
laws
cnf
laws
normalize
laws
split-post
normalize
axioms
#[serial 1016]  <<M(check_hyst) and x>> A <<M(run)>> for mhsHysOff:check_hyst-[x]->run{A};
reduce
atomic
normalize
laws
dist^
dist^
normalize
axioms
substitute-post
normalize
dist^
normalize
dist^
normalize
axioms
substitute-both
normalize
laws
normalize
sub-equals
range-exp
normalize
laws
normalize
axioms
#[serial 1017]  <<M(run) and x>> -> <<M(halt)>> for mhsStop:run-[x]->halt{};
axioms