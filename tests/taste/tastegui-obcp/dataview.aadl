--------------------------------------------------------
--! File generated by asn2aadl v1.2252: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0


DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END Simulink_Tunable_Parameter;

DATA TASTE_Directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END TASTE_Directive;


data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA OBCP_Content_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1040; suggested aligned message buffer is...
    Source_Data_Size => 1040 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Content-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END OBCP_Content_T;

DATA OBCP_Content_T_Buffer_Max
END OBCP_Content_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Content_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Content_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1040); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Content_T_Buffer_Max.impl;

DATA OBCP_Content_T_Buffer
END OBCP_Content_T_Buffer;

DATA IMPLEMENTATION OBCP_Content_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Content_T
SUBCOMPONENTS
    Buffer : data OBCP_Content_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Content_T_Buffer.impl;

DATA OBCP_Text_Msg_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1032; suggested aligned message buffer is...
    Source_Data_Size => 1032 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Text-Msg-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END OBCP_Text_Msg_T;

DATA OBCP_Text_Msg_T_Buffer_Max
END OBCP_Text_Msg_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Text_Msg_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Text_Msg_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1032); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Text_Msg_T_Buffer_Max.impl;

DATA OBCP_Text_Msg_T_Buffer
END OBCP_Text_Msg_T_Buffer;

DATA IMPLEMENTATION OBCP_Text_Msg_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Text_Msg_T
SUBCOMPONENTS
    Buffer : data OBCP_Text_Msg_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Text_Msg_T_Buffer.impl;

DATA OBCP_Msg_Kind_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Msg-Kind-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END OBCP_Msg_Kind_T;

DATA OBCP_Msg_Kind_T_Buffer_Max
END OBCP_Msg_Kind_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Msg_Kind_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Msg_Kind_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Msg_Kind_T_Buffer_Max.impl;

DATA OBCP_Msg_Kind_T_Buffer
END OBCP_Msg_Kind_T_Buffer;

DATA IMPLEMENTATION OBCP_Msg_Kind_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Msg_Kind_T
SUBCOMPONENTS
    Buffer : data OBCP_Msg_Kind_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Msg_Kind_T_Buffer.impl;

DATA OBCP_Binary_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1032; suggested aligned message buffer is...
    Source_Data_Size => 1032 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Binary-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END OBCP_Binary_T;

DATA OBCP_Binary_T_Buffer_Max
END OBCP_Binary_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Binary_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Binary_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1032); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Binary_T_Buffer_Max.impl;

DATA OBCP_Binary_T_Buffer
END OBCP_Binary_T_Buffer;

DATA IMPLEMENTATION OBCP_Binary_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Binary_T
SUBCOMPONENTS
    Buffer : data OBCP_Binary_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Binary_T_Buffer.impl;

DATA OBCP_Load_Msg_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 2088; suggested aligned message buffer is...
    Source_Data_Size => 2088 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Load-Msg-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END OBCP_Load_Msg_T;

DATA OBCP_Load_Msg_T_Buffer_Max
END OBCP_Load_Msg_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Load_Msg_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Load_Msg_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (2088); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Load_Msg_T_Buffer_Max.impl;

DATA OBCP_Load_Msg_T_Buffer
END OBCP_Load_Msg_T_Buffer;

DATA IMPLEMENTATION OBCP_Load_Msg_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Load_Msg_T
SUBCOMPONENTS
    Buffer : data OBCP_Load_Msg_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Load_Msg_T_Buffer.impl;

DATA OBCP_CRC_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1032; suggested aligned message buffer is...
    Source_Data_Size => 1032 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-CRC-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END OBCP_CRC_T;

DATA OBCP_CRC_T_Buffer_Max
END OBCP_CRC_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_CRC_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_CRC_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1032); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_CRC_T_Buffer_Max.impl;

DATA OBCP_CRC_T_Buffer
END OBCP_CRC_T_Buffer;

DATA IMPLEMENTATION OBCP_CRC_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_CRC_T
SUBCOMPONENTS
    Buffer : data OBCP_CRC_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_CRC_T_Buffer.impl;

DATA OBCP_Identifier_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Identifier-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END OBCP_Identifier_T;

DATA OBCP_Identifier_T_Buffer_Max
END OBCP_Identifier_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Identifier_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Identifier_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Identifier_T_Buffer_Max.impl;

DATA OBCP_Identifier_T_Buffer
END OBCP_Identifier_T_Buffer;

DATA IMPLEMENTATION OBCP_Identifier_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Identifier_T
SUBCOMPONENTS
    Buffer : data OBCP_Identifier_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Identifier_T_Buffer.impl;

DATA OBCP_Text_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1032; suggested aligned message buffer is...
    Source_Data_Size => 1032 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Text-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END OBCP_Text_T;

DATA OBCP_Text_T_Buffer_Max
END OBCP_Text_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Text_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Text_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1032); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Text_T_Buffer_Max.impl;

DATA OBCP_Text_T_Buffer
END OBCP_Text_T_Buffer;

DATA IMPLEMENTATION OBCP_Text_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Text_T
SUBCOMPONENTS
    Buffer : data OBCP_Text_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Text_T_Buffer.impl;

DATA OBCP_Status_T
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Status-T";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END OBCP_Status_T;

DATA OBCP_Status_T_Buffer_Max
END OBCP_Status_T_Buffer_Max;

DATA IMPLEMENTATION OBCP_Status_T_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Status_T
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Status_T_Buffer_Max.impl;

DATA OBCP_Status_T_Buffer
END OBCP_Status_T_Buffer;

DATA IMPLEMENTATION OBCP_Status_T_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Status_T
SUBCOMPONENTS
    Buffer : data OBCP_Status_T_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Status_T_Buffer.impl;

DATA OBCP_Status_Report
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview.asn");
    TASTE::Ada_Package_Name => "DataView";
    Deployment::ASN1_Module_Name => "DataView";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBCP-Status-Report";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END OBCP_Status_Report;

DATA OBCP_Status_Report_Buffer_Max
END OBCP_Status_Report_Buffer_Max;

DATA IMPLEMENTATION OBCP_Status_Report_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBCP_Status_Report
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END OBCP_Status_Report_Buffer_Max.impl;

DATA OBCP_Status_Report_Buffer
END OBCP_Status_Report_Buffer;

DATA IMPLEMENTATION OBCP_Status_Report_Buffer.impl
    -- Buffer to hold a marshalled data of type OBCP_Status_Report
SUBCOMPONENTS
    Buffer : data OBCP_Status_Report_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OBCP_Status_Report_Buffer.impl;

end DataView;
