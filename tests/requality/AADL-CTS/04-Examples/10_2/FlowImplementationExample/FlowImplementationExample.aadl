
	-- This is an AADL fragement from 10_1

	package GPSLib

	public

	   data signal_data

	   end signal_data;

	  

	   data commands

	   end commands ;

	 

	   data position

	   end position;

	 

	   data implementation position.radial

	   end position.radial;

	 

	   data implementation position.cartesian

	   end position.cartesian;

	end GPSLib;

	 

	package FlowExample

	public

	with  GPSLib;

	process foo 

	features

	   Initcmd: in event port;   

	   Signal: in data port GPSLib::signal_data;

	   Result1: out data port GPSLib::position.radial;

	   Result2: out data port GPSLib::position.cartesian;

	   Status: out data port;

	flows

	   -- two flows split from the same input  

	   Flow1: flow path signal -> result1;

	   Flow2: flow path signal -> result2;

	   -- An input is consumed by process foo through its initcmd port

	   Flow3: flow sink initcmd;

	   -- An output is generated (produced) by process foo and made available

	   -- through its port Status; 

	   Flow4: flow source Status;

	end foo;

	thread bar

	features

	     p1 : in data port GPSLib::signal_data;

	     p2 : out data port GPSLib::position.radial;

	     p3 : out event port;

	     reset : in event port;

	flows

	     fs1 : flow path p1 -> p2;

	     fs2 : flow source p3;

	end bar;

	 

	thread implementation bar.basic

	end bar.basic;

	 

	thread baz

	features

	     p1 : in data port GPSLib::position.radial;

	     p2 : out data port GPSLib::position.cartesian;

	     reset : in event port;

	flows

	     fs1 : flow path p1 -> p2;

	     fsink : flow sink reset;

	end baz;

	 

	thread implementation baz.basic

	end baz.basic;

	 

	-- This is an AADL fragement

	-- process foo is declared in the previous section

	process implementation foo.basic 

	subcomponents

	   A: thread bar.basic;

	   -- bar has a flow path fs1 from port p1 to p2

	   -- bar has a flow source fs2 to p3

	   B: thread baz.basic; 

	   -- baz has a flow path fs1 from port p1 to p2

	   -- baz has a flow sink fsink in port reset

	connections

	   conn1: port signal -> A.p1;

	   conn2: port A.p2 -> B.p1;

	   conn3: port B.p2 -> result2;

	   conn4: port A.p2 -> result1;

	   conn6: port A.p3 -> status;

	   connToThread: port initcmd -> B.reset;

	flows

	   Flow1: flow path 

	            signal -> conn1 -> A.fs1 -> conn4 -> result1;

	   Flow2: flow path 

	            signal -> conn1 -> A.fs1 -> conn2 -> 

	            B.fs1 -> conn3 -> result2;

	   Flow3: flow sink initcmd -> connToThread -> B.reset;

	   -- a flow source may start in a subcomponent, 

	   -- i.e., the first named element is a flow source

	   Flow4: flow source A.fs2 -> conn6 -> status;

	end foo.basic;

	end FlowExample;

