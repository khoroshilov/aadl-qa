<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
<meta content="Microsoft Word 12 (filtered)" name="Generator" />
<title>THROW THIS PAGE AWAY</title>



<style>/*<![CDATA[*/
<!--
 /* Font Definitions */
 @font-face
 {font-family:Helvetica;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Courier;
 panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
 {font-family:"Tms Rmn";
 panose-1:2 2 6 3 4 5 5 2 3 4;}
@font-face
 {font-family:Helv;
 panose-1:2 11 6 4 2 2 2 3 2 4;}
]]><![CDATA[@font-face
 {font-family:"New York";
 panose-1:2 4 5 3 6 5 6 2 3 4;}
@font-face
 {font-family:System;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:Wingdings;
 panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"MS Mincho";
 panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
 {font-family:Bat]]><![CDATA[ang;
 panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:SimSun;
 panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
 {font-family:PMingLiU;
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:"MS Gothic";
 panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
 {font-family:Dotum;
 panose-1:2 11 6 0 0 1 1 1 1]]><![CDATA[ 1;}
@font-face
 {font-family:SimHei;
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:MingLiU;
 panose-1:2 2 5 9 0 0 0 0 0 0;}
@font-face
 {font-family:Mincho;
 panose-1:2 2 6 9 4 3 5 8 3 5;}
@font-face
 {font-family:Gulim;
 panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:Century;
]]><![CDATA[ panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
 {font-family:"Angsana New";
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:"Cordia New";
 panose-1:2 11 3 4 2 2 2 2 2 4;}
@font-face
 {font-family:Mangal;
 panose-1:2 4 5 3 5 2 3 3 2 2;}
@font-face
 {font-family:Latha;
 panose-1:2 11 6 4 2 2 2 2 ]]><![CDATA[2 4;}
@font-face
 {font-family:Sylfaen;
 panose-1:1 10 5 2 5 3 6 3 3 3;}
@font-face
 {font-family:Vrinda;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Raavi;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Shruti;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Sendn]]><![CDATA[ya;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Gautami;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Tunga;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Estrangelo Edessa";
 panose-1:3 8 6 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Cambria Math";
 panose-1:2 4]]><![CDATA[ 5 3 5 4 6 3 2 4;}
@font-face
 {font-family:"Arial Unicode MS";
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Cambria;
 panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
 {font-family:Calibri;
 panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
 {font-family:Tahoma;
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@fon]]><![CDATA[t-face
 {font-family:"Lucida Sans Unicode";
 panose-1:2 11 6 2 3 5 4 2 2 4;}
@font-face
 {font-family:OpenSymbol;}
@font-face
 {font-family:"Calibri \(Vietnamese\)";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Book Antiqua";
 panose-1:2 4 6 2 5 3 5 3 3 4;}
@font-face
 {font-family:"Ari]]><![CDATA[al Black";
 panose-1:2 11 10 4 2 1 2 2 2 4;}
@font-face
 {font-family:Verdana;
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"Century Gothic";
 panose-1:2 11 5 2 2 2 2 2 2 4;}
@font-face
 {font-family:"Arial Bold";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Lucida Grande";]]><![CDATA[}
@font-face
 {font-family:"Arial \(W1\)";}
@font-face
 {font-family:Times;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:Helvetica-Narrow;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Lucida Sans Typewriter";
 panose-1:2 11 5 9 3 5 4 3 2 4;}
@font-face
 {font-family:"Comic S]]><![CDATA[ans MS";
 panose-1:3 15 7 2 3 3 2 2 2 4;}
@font-face
 {font-family:"MSRef SS EOT";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"DejaVu Serif";}
@font-face
 {font-family:Consolas;
 panose-1:2 11 6 9 2 2 4 3 2 4;}
@font-face
 {font-family:Marlett;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-fac]]><![CDATA[e
 {font-family:"\@Batang";
 panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:BatangChe;
 panose-1:2 3 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:"\@BatangChe";
 panose-1:2 3 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:Gungsuh;
 panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:"\@Gungsu]]><![CDATA[h";
 panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:GungsuhChe;
 panose-1:2 3 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:"\@GungsuhChe";
 panose-1:2 3 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:DaunPenh;
 panose-1:1 1 1 1 1 1 1 1 1 1;}
@font-face
 {font-family:DokChampa;
 panose-1:2 11 6 4 ]]><![CDATA[2 2 2 2 2 4;}
@font-face
 {font-family:Euphemia;
 panose-1:2 11 5 3 4 1 2 2 1 4;}
@font-face
 {font-family:Vani;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"\@Gulim";
 panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:GulimChe;
 panose-1:2 11 6 9 0 1 1 1 1 1;}
@font-face
 {font]]><![CDATA[-family:"\@GulimChe";
 panose-1:2 11 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:"\@Dotum";
 panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
 {font-family:DotumChe;
 panose-1:2 11 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:"\@DotumChe";
 panose-1:2 11 6 9 0 1 1 1 1 1;}
@font-face
 {font-family:Impact;
 pa]]><![CDATA[nose-1:2 11 8 6 3 9 2 5 2 4;}
@font-face
 {font-family:"Iskoola Pota";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Kalinga;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Kartika;
 panose-1:2 2 5 3 3 4 4 6 2 3;}
@font-face
 {font-family:"Khmer UI";
 panose-1:2 11 5 2 4 2 4 2]]><![CDATA[ 2 3;}
@font-face
 {font-family:"Lao UI";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Lucida Console";
 panose-1:2 11 6 9 4 5 4 2 2 4;}
@font-face
 {font-family:"Malgun Gothic";
 panose-1:2 11 5 3 2 0 0 2 0 4;}
@font-face
 {font-family:"\@Malgun Gothic";
 panose-1:2 11 5 3 2 0 0 2 0 4]]><![CDATA[;}
@font-face
 {font-family:Meiryo;
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"\@Meiryo";
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"Meiryo UI";
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"\@Meiryo UI";
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font]]><![CDATA[-family:"Microsoft Himalaya";
 panose-1:1 1 1 0 1 1 1 1 1 1;}
@font-face
 {font-family:"Microsoft JhengHei";
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"\@Microsoft JhengHei";
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"Microsoft YaHei";
 panose-1:2 11 5 3 2 2 4 2 2 4;}]]><![CDATA[
@font-face
 {font-family:"\@Microsoft YaHei";
 panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
 {font-family:"\@MingLiU";
 panose-1:2 2 5 9 0 0 0 0 0 0;}
@font-face
 {font-family:"\@PMingLiU";
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:MingLiU_HKSCS;
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-f]]><![CDATA[ace
 {font-family:"\@MingLiU_HKSCS";
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:MingLiU-ExtB;
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:"\@MingLiU-ExtB";
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:PMingLiU-ExtB;
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {]]><![CDATA[font-family:"\@PMingLiU-ExtB";
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:MingLiU_HKSCS-ExtB;
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:"\@MingLiU_HKSCS-ExtB";
 panose-1:2 2 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Mongolian Baiti";
 panose-1:3 0 5 0 0 0 0 0 0 0;}
@fo]]><![CDATA[nt-face
 {font-family:"\@MS Gothic";
 panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
 {font-family:"MS PGothic";
 panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
 {font-family:"\@MS PGothic";
 panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
 {font-family:"MS UI Gothic";
 panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face]]><![CDATA[
 {font-family:"\@MS UI Gothic";
 panose-1:2 11 6 0 7 2 5 8 2 4;}
@font-face
 {font-family:"\@MS Mincho";
 panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
 {font-family:"MS PMincho";
 panose-1:2 2 6 0 4 2 5 8 3 4;}
@font-face
 {font-family:"\@MS PMincho";
 panose-1:2 2 6 0 4 2 5 8 3 4;}
@font-face
 {font-]]><![CDATA[family:"MV Boli";
 panose-1:2 0 5 0 3 2 0 9 0 0;}
@font-face
 {font-family:"Microsoft New Tai Lue";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Nyala;
 panose-1:2 0 5 4 7 3 0 2 0 3;}
@font-face
 {font-family:"Microsoft PhagsPa";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family]]><![CDATA[:"Plantagenet Cherokee";
 panose-1:2 2 6 2 7 1 0 0 0 0;}
@font-face
 {font-family:"Segoe Script";
 panose-1:2 11 5 4 2 0 0 0 0 3;}
@font-face
 {font-family:"Segoe UI";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Segoe UI Semibold";
 panose-1:2 11 7 2 4 2 4 2 2 3;}
@font-face
 {font-fa]]><![CDATA[mily:"Segoe UI Light";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Segoe UI Symbol";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"\@SimSun";
 panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
 {font-family:NSimSun;
 panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
 {font-family:"\@NSim]]><![CDATA[Sun";
 panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
 {font-family:SimSun-ExtB;
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:"\@SimSun-ExtB";
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:"Microsoft Tai Le";
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Shonar Bangla"]]><![CDATA[;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Microsoft Yi Baiti";
 panose-1:3 0 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Microsoft Sans Serif";
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Aparajita;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Ebrima;
 p]]><![CDATA[anose-1:2 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:Gisha;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:Kokila;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Leelawadee;
 panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
 {font-family:"Microsoft Uighur";
 panose-1:2 0 0 0 0 0 0 ]]><![CDATA[0 0 0;}
@font-face
 {font-family:MoolBoran;
 panose-1:2 11 1 0 1 1 1 1 1 1;}
@font-face
 {font-family:Utsaah;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Vijaya;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:Andalus;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:]]><![CDATA["Arabic Typesetting";
 panose-1:3 2 4 2 4 4 6 3 2 3;}
@font-face
 {font-family:"Simplified Arabic";
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:"Simplified Arabic Fixed";
 panose-1:2 7 3 9 2 2 5 2 4 4;}
@font-face
 {font-family:"Sakkal Majalla";
 panose-1:2 0 0 0 0 0 0 0 0 0;}
@font-fac]]><![CDATA[e
 {font-family:"Traditional Arabic";
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:Aharoni;
 panose-1:2 1 8 3 2 1 4 3 2 3;}
@font-face
 {font-family:David;
 panose-1:2 14 5 2 6 4 1 1 1 1;}
@font-face
 {font-family:FrankRuehl;
 panose-1:2 14 5 3 6 1 1 1 1 1;}
@font-face
 {font-family:"Lev]]><![CDATA[enim MT";
 panose-1:2 1 5 2 6 1 1 1 1 1;}
@font-face
 {font-family:Miriam;
 panose-1:2 11 5 2 5 1 1 1 1 1;}
@font-face
 {font-family:"Miriam Fixed";
 panose-1:2 11 5 9 5 1 1 1 1 1;}
@font-face
 {font-family:Narkisim;
 panose-1:2 14 5 2 5 1 1 1 1 1;}
@font-face
 {font-family:Rod;
 panose-1:2 3 5 9 5 ]]><![CDATA[1 1 1 1 1;}
@font-face
 {font-family:FangSong;
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:"\@FangSong";
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:"\@SimHei";
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:KaiTi;
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font]]><![CDATA[-family:"\@KaiTi";
 panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
 {font-family:AngsanaUPC;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:"Browallia New";
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:BrowalliaUPC;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:CordiaUP]]><![CDATA[C;
 panose-1:2 11 3 4 2 2 2 2 2 4;}
@font-face
 {font-family:DilleniaUPC;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:EucrosiaUPC;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:FreesiaUPC;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:IrisUPC;
 panose-1:2 11 6 4 2]]><![CDATA[ 2 2 2 2 4;}
@font-face
 {font-family:JasmineUPC;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:KodchiangUPC;
 panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
 {font-family:LilyUPC;
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:DFKai-SB;
 panose-1:3 0 5 9 0 0 0 0 0 0;}
@font-face
 {]]><![CDATA[font-family:"\@DFKai-SB";
 panose-1:3 0 5 9 0 0 0 0 0 0;}
@font-face
 {font-family:"Franklin Gothic Medium";
 panose-1:2 11 6 3 2 1 2 2 2 4;}
@font-face
 {font-family:Gabriola;
 panose-1:4 4 6 5 5 16 2 2 13 2;}
@font-face
 {font-family:Georgia;
 panose-1:2 4 5 2 5 4 5 2 3 3;}
@font-face
 {font-famil]]><![CDATA[y:"Palatino Linotype";
 panose-1:2 4 5 2 5 5 5 3 3 4;}
@font-face
 {font-family:"Segoe Print";
 panose-1:2 0 6 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Trebuchet MS";
 panose-1:2 11 6 3 2 2 2 2 2 4;}
@font-face
 {font-family:Webdings;
 panose-1:5 3 1 2 1 5 9 6 7 3;}
@font-face
 {font-family:"MT Ext]]><![CDATA[ra";
 panose-1:5 5 1 2 1 2 5 2 2 2;}
@font-face
 {font-family:Haettenschweiler;
 panose-1:2 11 7 6 4 9 2 6 2 4;}
@font-face
 {font-family:Garamond;
 panose-1:2 2 4 4 3 3 1 1 8 3;}
@font-face
 {font-family:"Monotype Corsiva";
 panose-1:3 1 1 1 1 2 1 1 1 1;}
@font-face
 {font-family:"Agency FB";
 pano]]><![CDATA[se-1:2 11 5 3 2 2 2 2 2 4;}
@font-face
 {font-family:"Arial Rounded MT Bold";
 panose-1:2 15 7 4 3 5 4 3 2 4;}
@font-face
 {font-family:"Blackadder ITC";
 panose-1:4 2 5 5 5 16 7 2 13 2;}
@font-face
 {font-family:"Bodoni MT";
 panose-1:2 7 6 3 8 6 6 2 2 3;}
@font-face
 {font-family:"Bodoni MT Black"]]><![CDATA[;
 panose-1:2 7 10 3 8 6 6 2 2 3;}
@font-face
 {font-family:"Bodoni MT Condensed";
 panose-1:2 7 6 6 8 6 6 2 2 3;}
@font-face
 {font-family:"Bookman Old Style";
 panose-1:2 5 6 4 5 5 5 2 2 4;}
@font-face
 {font-family:"Bradley Hand ITC";
 panose-1:3 7 4 2 5 3 2 3 2 3;}
@font-face
 {font-family:"Cali]]><![CDATA[sto MT";
 panose-1:2 4 6 3 5 5 5 3 3 4;}
@font-face
 {font-family:Castellar;
 panose-1:2 10 4 2 6 4 6 1 3 1;}
@font-face
 {font-family:"Century Schoolbook";
 panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
 {font-family:"Copperplate Gothic Bold";
 panose-1:2 14 7 5 2 2 6 2 4 4;}
@font-face
 {font-family:"]]><![CDATA[Copperplate Gothic Light";
 panose-1:2 14 5 7 2 2 6 2 4 4;}
@font-face
 {font-family:"Curlz MT";
 panose-1:4 4 4 4 5 7 2 2 2 2;}
@font-face
 {font-family:"Edwardian Script ITC";
 panose-1:3 3 3 2 4 7 7 13 8 4;}
@font-face
 {font-family:Elephant;
 panose-1:2 2 9 4 9 5 5 2 3 3;}
@font-face
 {font-fami]]><![CDATA[ly:"Engravers MT";
 panose-1:2 9 7 7 8 5 5 2 3 4;}
@font-face
 {font-family:"Eras Bold ITC";
 panose-1:2 11 9 7 3 5 4 2 2 4;}
@font-face
 {font-family:"Eras Demi ITC";
 panose-1:2 11 8 5 3 5 4 2 8 4;}
@font-face
 {font-family:"Eras Light ITC";
 panose-1:2 11 4 2 3 5 4 2 8 4;}
@font-face
 {font-famil]]><![CDATA[y:"Eras Medium ITC";
 panose-1:2 11 6 2 3 5 4 2 8 4;}
@font-face
 {font-family:"Felix Titling";
 panose-1:4 6 5 5 6 2 2 2 10 4;}
@font-face
 {font-family:Forte;
 panose-1:3 6 9 2 4 5 2 7 2 3;}
@font-face
 {font-family:"Franklin Gothic Book";
 panose-1:2 11 5 3 2 1 2 2 2 4;}
@font-face
 {font-family:]]><![CDATA["Franklin Gothic Demi";
 panose-1:2 11 7 3 2 1 2 2 2 4;}
@font-face
 {font-family:"Franklin Gothic Demi Cond";
 panose-1:2 11 7 6 3 4 2 2 2 4;}
@font-face
 {font-family:"Franklin Gothic Heavy";
 panose-1:2 11 9 3 2 1 2 2 2 4;}
@font-face
 {font-family:"Franklin Gothic Medium Cond";
 panose-1:2 11 6 ]]><![CDATA[6 3 4 2 2 2 4;}
@font-face
 {font-family:"French Script MT";
 panose-1:3 2 4 2 4 6 7 4 6 5;}
@font-face
 {font-family:Gigi;
 panose-1:4 4 5 4 6 16 7 2 13 2;}
@font-face
 {font-family:"Gill Sans MT";
 panose-1:2 11 5 2 2 1 4 2 2 3;}
@font-face
 {font-family:"Gill Sans MT Condensed";
 panose-1:2 11 5 ]]><![CDATA[6 2 1 4 2 2 3;}
@font-face
 {font-family:"Gill Sans Ultra Bold";
 panose-1:2 11 10 2 2 1 4 2 2 3;}
@font-face
 {font-family:"Gill Sans Ultra Bold Condensed";
 panose-1:2 11 10 6 2 1 4 2 2 3;}
@font-face
 {font-family:"Gill Sans MT Ext Condensed Bold";
 panose-1:2 11 9 2 2 1 4 2 2 3;}
@font-face
 {fo]]><![CDATA[nt-family:"Gloucester MT Extra Condensed";
 panose-1:2 3 8 8 2 6 1 1 1 1;}
@font-face
 {font-family:"Goudy Old Style";
 panose-1:2 2 5 2 5 3 5 2 3 3;}
@font-face
 {font-family:"Goudy Stout";
 panose-1:2 2 9 4 7 3 11 2 4 1;}
@font-face
 {font-family:"Imprint MT Shadow";
 panose-1:4 2 6 5 6 3 3 3 2 2;]]><![CDATA[}
@font-face
 {font-family:"Lucida Sans";
 panose-1:2 11 6 2 3 5 4 2 2 4;}
@font-face
 {font-family:"Maiandra GD";
 panose-1:2 14 5 2 3 3 8 2 2 4;}
@font-face
 {font-family:"OCR A Extended";
 panose-1:2 1 5 9 2 1 2 1 3 3;}
@font-face
 {font-family:"Palace Script MT";
 panose-1:3 3 3 2 2 6 7 12 11 5;]]><![CDATA[}
@font-face
 {font-family:Papyrus;
 panose-1:3 7 5 2 6 5 2 3 2 5;}
@font-face
 {font-family:Perpetua;
 panose-1:2 2 5 2 6 4 1 2 3 3;}
@font-face
 {font-family:"Perpetua Titling MT";
 panose-1:2 2 5 2 6 5 5 2 8 4;}
@font-face
 {font-family:Pristina;
 panose-1:3 6 4 2 4 4 6 8 2 4;}
@font-face
 {font-family:"Rage Italic";
 panose-1:3 7 5 2 4 5 7 7 3 4;}
@font-face
 {font-family:Rockwell;
 panose-1:2 6 6 3 2 2 5 2 4 3;}
@font-face
 {font-family:"Rockwell Condensed";
 panose-1:2 6 6 3 5 4 5 2 1 4;}
@font-face
 {font-family:"Rockwell Extra Bold";
 panose-1:2 6 9 3 4 5 5 2 4 3;}
@font-face
 {font-family:"Script MT Bold";
 panose-1:3 4 6 2 4 6 7 8 9 4;}
@font-face
 {font-family:"Tw Cen MT";
 panose-1:2 11 6 2 2 1 4 2 6 3;}
@font-face
 {font-family:"Tw Cen MT Condensed";
 panose-1:2 11 6 6 2 1 4 2 2 3;}
@font-face
 {font-family:"Tw Cen MT Condensed Extra Bold";
 panose-1:2 11 8 3 2 2 2 2 2 4;}
@font-face
 {font-family:Algerian;
 panose-1:4 2 7 5 4 10 2 6 7 2;}
@font-face
 {font-family:"Baskerville Old Face";
 panose-1:2 2 6 2 8 5 5 2 3 3;}
@font-face
 {font-family:"Bauhaus 93";
 panose-1:4 3 9 5 2 11 2 2 12 2;}
@font-face
 {font-family:"Bell MT";
 panose-1:2 2 5 3 6 3 5 2 3 3;}
@font-face
 {font-family:"Berlin Sans FB";
 panose-1:2 14 6 2 2 5 2 2 3 6;}
@font-face
 {font-family:"Berlin Sans FB Demi";
 panose-1:2 14 8 2 2 5 2 2 3 6;}
@font-face
 {font-family:"Bernard MT Condensed";
 panose-1:2 5 8 6 6 9 5 2 4 4;}
@font-face
 {font-family:"Bodoni MT Poster Compressed";
 panose-1:2 7 7 6 8 6 1 5 2 4;}
@font-face
 {font-family:"Britannic Bold";
 panose-1:2 11 9 3 6 7 3 2 2 4;}
@font-face
 {font-family:Broadway;
 panose-1:4 4 9 5 8 11 2 2 5 2;}
@font-face
 {font-family:"Brush Script MT";
 panose-1:3 6 8 2 4 4 6 7 3 4;}
@font-face
 {font-family:"Californian FB";
 panose-1:2 7 4 3 6 8 11 3 2 4;}
@font-face
 {font-family:Centaur;
 panose-1:2 3 5 4 5 2 5 2 3 4;}
@font-face
 {font-family:Chiller;
 panose-1:4 2 4 4 3 16 7 2 6 2;}
@font-face
 {font-family:"Colonna MT";
 panose-1:4 2 8 5 6 2 2 3 2 3;}
@font-face
 {font-family:"Cooper Black";
 panose-1:2 8 9 4 4 3 11 2 4 4;}
@font-face
 {font-family:"Footlight MT Light";
 panose-1:2 4 6 2 6 3 10 2 3 4;}
@font-face
 {font-family:"Freestyle Script";
 panose-1:3 8 4 2 3 2 5 11 4 4;}
@font-face
 {font-family:"Harlow Solid Italic";
 panose-1:4 3 6 4 2 15 2 2 13 2;}
@font-face
 {font-family:Harrington;
 panose-1:4 4 5 5 5 10 2 2 7 2;}
@font-face
 {font-family:"High Tower Text";
 panose-1:2 4 5 2 5 5 6 3 3 3;}
@font-face
 {font-family:Jokerman;
 panose-1:4 9 6 5 6 13 6 2 7 2;}
@font-face
 {font-family:"Juice ITC";
 panose-1:4 4 4 3 4 10 2 2 2 2;}
@font-face
 {font-family:"Kristen ITC";
 panose-1:3 5 5 2 4 2 2 3 2 2;}
@font-face
 {font-family:"Kunstler Script";
 panose-1:3 3 4 2 2 6 7 13 13 6;}
@font-face
 {font-family:"Lucida Bright";
 panose-1:2 4 6 2 5 5 5 2 3 4;}
@font-face
 {font-family:"Lucida Calligraphy";
 panose-1:3 1 1 1 1 1 1 1 1 1;}
@font-face
 {font-family:"Lucida Fax";
 panose-1:2 6 6 2 5 5 5 2 2 4;}
@font-face
 {font-family:"Lucida Handwriting";
 panose-1:3 1 1 1 1 1 1 1 1 1;}
@font-face
 {font-family:Magneto;
 panose-1:4 3 8 5 5 8 2 2 13 2;}
@font-face
 {font-family:"Matura MT Script Capitals";
 panose-1:3 2 8 2 6 6 2 7 2 2;}
@font-face
 {font-family:Mistral;
 panose-1:3 9 7 2 3 4 7 2 4 3;}
@font-face
 {font-family:"Modern No\. 20";
 panose-1:2 7 7 4 7 5 5 2 3 3;}
@font-face
 {font-family:"Niagara Engraved";
 panose-1:4 2 5 2 7 7 3 3 2 2;}
@font-face
 {font-family:"Niagara Solid";
 panose-1:4 2 5 2 7 7 2 2 2 2;}
@font-face
 {font-family:"Old English Text MT";
 panose-1:3 4 9 2 4 5 8 3 8 6;}
@font-face
 {font-family:Onyx;
 panose-1:4 5 6 2 8 7 2 2 2 3;}
@font-face
 {font-family:Parchment;
 panose-1:3 4 6 2 4 7 8 4 8 4;}
@font-face
 {font-family:Playbill;
 panose-1:4 5 6 3 10 6 2 2 2 2;}
@font-face
 {font-family:"Poor Richard";
 panose-1:2 8 5 2 5 5 5 2 7 2;}
@font-face
 {font-family:Ravie;
 panose-1:4 4 8 5 5 8 9 2 6 2;}
@font-face
 {font-family:"Informal Roman";
 panose-1:3 6 4 2 3 4 6 11 2 4;}
@font-face
 {font-family:"Showcard Gothic";
 panose-1:4 2 9 4 2 1 2 2 6 4;}
@font-face
 {font-family:"Snap ITC";
 panose-1:4 4 10 7 6 10 2 2 2 2;}
@font-face
 {font-family:Stencil;
 panose-1:4 4 9 5 13 8 2 2 4 4;}
@font-face
 {font-family:"Tempus Sans ITC";
 panose-1:4 2 4 4 3 13 7 2 2 2;}
@font-face
 {font-family:"Viner Hand ITC";
 panose-1:3 7 5 2 3 5 2 2 2 3;}
@font-face
 {font-family:Vivaldi;
 panose-1:3 2 6 2 5 5 6 9 8 4;}
@font-face
 {font-family:"Vladimir Script";
 panose-1:3 5 4 2 4 4 7 7 3 5;}
@font-face
 {font-family:"Wide Latin";
 panose-1:2 10 10 7 5 5 5 2 4 4;}
@font-face
 {font-family:"\@Arial Unicode MS";
 panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
 {font-family:"Arial Narrow";
 panose-1:2 11 6 6 2 2 2 3 2 4;}
@font-face
 {font-family:"Spranq eco sans";
 panose-1:2 11 6 3 3 8 4 2 2 4;}
@font-face
 {font-family:SAPFolioLight;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPFolioMedium;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPFolioBold;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPFolioExtraBold;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPSerifBold;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPSerifRegular;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPSerifRegularItalic;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPFuturaNaDemi;
 panose-1:0 0 0 0 0 0 0 0 0 106;}
@font-face
 {font-family:SAPFuturaNaBook;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAPDings;
 panose-1:0 0 4 9 0 0 0 0 0 0;}
@font-face
 {font-family:SAPIcons;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Arial monospaced for SAP";
 panose-1:2 11 6 9 2 2 2 3 2 4;}
@font-face
 {font-family:"BentonSans Bold";
 panose-1:2 0 8 3 0 0 0 2 0 4;}
@font-face
 {font-family:"BentonSans Regular Italic";
 panose-1:2 0 5 3 0 0 0 9 0 4;}
@font-face
 {font-family:"BentonSans Regular";
 panose-1:2 0 5 3 0 0 0 2 0 4;}
@font-face
 {font-family:"BentonSans Medium";
 panose-1:2 0 6 3 0 0 0 2 0 4;}
@font-face
 {font-family:"BentonSans Light Italic";
 panose-1:2 0 5 3 0 0 0 9 0 4;}
@font-face
 {font-family:"BentonSans Light";
 panose-1:2 0 5 3 0 0 0 2 0 4;}
@font-face
 {font-family:"BentonSans Book Italic";
 panose-1:2 0 5 3 0 0 0 9 0 4;}
@font-face
 {font-family:"BentonSans Book";
 panose-1:2 0 5 3 0 0 0 2 0 4;}
@font-face
 {font-family:"MS Outlook";
 panose-1:5 1 1 0 1 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaNarrow1;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaNarrow2;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaNarrow3;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaRegular1;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaRegular2;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaRegular3;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaWide1;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaWide2;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:Code39AzaleaWide3;
 panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
 {font-family:"Times Roman";
 panose-1:2 0 5 3 8 0 0 9 0 4;}
@font-face
 {font-family:"Bookshelf Symbol 7";
 panose-1:5 1 1 1 1 1 1 1 1 1;}
@font-face
 {font-family:"MS Reference Sans Serif";
 panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
 {font-family:"MS Reference Specialty";
 panose-1:5 0 5 0 0 0 0 0 0 0;}
@font-face
 {font-family:Candara;
 panose-1:2 14 5 2 3 3 3 2 2 4;}
@font-face
 {font-family:Constantia;
 panose-1:2 3 6 2 5 3 6 3 3 3;}
@font-face
 {font-family:Corbel;
 panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
 {font-family:"Wingdings 2";
 panose-1:5 2 1 2 1 5 7 7 7 7;}
@font-face
 {font-family:"Wingdings 3";
 panose-1:5 4 1 2 1 8 7 7 7 7;}
@font-face
 {font-family:"SAP_CLEAR09 Regular Condensed";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP_CLEAR09 Bold Condensed";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP_CLEAR09 Light Condensed";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Serif 2007 Bold";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Sans 2007 Medium";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Sans 2007 Light";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Serif 2007 Regular";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Sans 2007 Extra Bold";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Sans 2007 Extra Bold Cond";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:"SAP Serif 2007 Italic";
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SANS2002-Light;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SANS2002-Medium;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SANS2002-Bold;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SANS2002-ExtraBold;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SANS2002-ExtBolCon;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SANS2002-ExtBolConIta;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SERIF2002-Bold;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SERIF2002-Regular;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
 {font-family:SAP-SERIF2002-RegularItalic;
 panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
 {mso-style-name:"Normal\,paragraph";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
h1
 {mso-style-name:"Heading 1\,h1\,DoNotUse";
 margin-top:13.0pt;
 margin-right:0cm;
 margin-bottom:13.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 line-height:13.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
h2
 {mso-style-name:"Heading 2\,h2";
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:28.8pt;
 text-align:justify;
 text-indent:-28.8pt;
 line-height:12.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
h3
 {mso-style-name:"Heading 3\,h3";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-36.0pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
h4
 {mso-style-name:"Heading 4\,h4";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:43.2pt;
 text-align:justify;
 text-indent:-43.2pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
h5
 {mso-style-name:"Heading 5\,h5";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:50.4pt;
 text-align:justify;
 text-indent:-50.4pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
h6
 {mso-style-name:"Heading 6\,h6";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:57.6pt;
 text-align:justify;
 text-indent:-57.6pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
 {margin-top:12.0pt;
 margin-right:0cm;
 margin-bottom:3.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
 {margin-top:12.0pt;
 margin-right:0cm;
 margin-bottom:3.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
 {margin-top:12.0pt;
 margin-right:0cm;
 margin-bottom:3.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-style:italic;}
p.MsoIndex1, li.MsoIndex1, div.MsoIndex1
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:10.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex2, li.MsoIndex2, div.MsoIndex2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:20.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex3, li.MsoIndex3, div.MsoIndex3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:30.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex4, li.MsoIndex4, div.MsoIndex4
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:40.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex5, li.MsoIndex5, div.MsoIndex5
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:50.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex6, li.MsoIndex6, div.MsoIndex6
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:60.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex7, li.MsoIndex7, div.MsoIndex7
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:70.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex8, li.MsoIndex8, div.MsoIndex8
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:80.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoIndex9, li.MsoIndex9, div.MsoIndex9
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
 {margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:0cm;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 text-transform:uppercase;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:10.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:20.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:30.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 text-transform:uppercase;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:40.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-weight:bold;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:50.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-weight:bold;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:60.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Times New Roman","serif";
 color:black;}
p.MsoToc8, li.MsoToc8, div.MsoToc8
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:70.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Times New Roman","serif";
 color:black;}
p.MsoToc9, li.MsoToc9, div.MsoToc9
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:80.0pt;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Times New Roman","serif";
 color:black;}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
 {mso-style-link:"Comment Text Char";
 margin:0cm;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.MsoIndexHeading, li.MsoIndexHeading, div.MsoIndexHeading
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Cambria","serif";
 color:black;
 font-weight:bold;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
 {margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.MsoTof, li.MsoTof, div.MsoTof
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:20.0pt;
 text-indent:-20.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.MsoEnvelopeAddress, li.MsoEnvelopeAddress, div.MsoEnvelopeAddress
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:144.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Cambria","serif";
 color:black;}
p.MsoEnvelopeReturn, li.MsoEnvelopeReturn, div.MsoEnvelopeReturn
 {margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Cambria","serif";
 color:black;}
span.MsoFootnoteReference
 {font-family:"Helvetica","sans-serif";
 position:relative;
 top:-3.0pt;
 vertical-align:baseline;}
p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText
 {mso-style-link:"Endnote Text Char";
 margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoToa, li.MsoToa, div.MsoToa
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:10.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoMacroText, li.MsoMacroText, div.MsoMacroText
 {mso-style-link:"Macro Text Char";
 margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:Consolas;
 color:black;}
p.MsoToaHeading, li.MsoToaHeading, div.MsoToaHeading
 {margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Cambria","serif";
 color:black;
 font-weight:bold;}
p.MsoList, li.MsoList, div.MsoList
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListCxSpFirst, li.MsoListCxSpFirst, div.MsoListCxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:18.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListCxSpMiddle, li.MsoListCxSpMiddle, div.MsoListCxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:18.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListCxSpLast, li.MsoListCxSpLast, div.MsoListCxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet, li.MsoListBullet, div.MsoListBullet
 {margin-top:0cm;
 margin-right:0cm;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber, li.MsoListNumber, div.MsoListNumber
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumberCxSpFirst, li.MsoListNumberCxSpFirst, div.MsoListNumberCxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:18.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumberCxSpMiddle, li.MsoListNumberCxSpMiddle, div.MsoListNumberCxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:18.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumberCxSpLast, li.MsoListNumberCxSpLast, div.MsoListNumberCxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList2, li.MsoList2, div.MsoList2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList2CxSpFirst, li.MsoList2CxSpFirst, div.MsoList2CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList2CxSpMiddle, li.MsoList2CxSpMiddle, div.MsoList2CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList2CxSpLast, li.MsoList2CxSpLast, div.MsoList2CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList3, li.MsoList3, div.MsoList3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:54.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList3CxSpFirst, li.MsoList3CxSpFirst, div.MsoList3CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList3CxSpMiddle, li.MsoList3CxSpMiddle, div.MsoList3CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList3CxSpLast, li.MsoList3CxSpLast, div.MsoList3CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:54.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList4, li.MsoList4, div.MsoList4
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:72.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList4CxSpFirst, li.MsoList4CxSpFirst, div.MsoList4CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList4CxSpMiddle, li.MsoList4CxSpMiddle, div.MsoList4CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList4CxSpLast, li.MsoList4CxSpLast, div.MsoList4CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:72.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList5, li.MsoList5, div.MsoList5
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:90.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList5CxSpFirst, li.MsoList5CxSpFirst, div.MsoList5CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList5CxSpMiddle, li.MsoList5CxSpMiddle, div.MsoList5CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoList5CxSpLast, li.MsoList5CxSpLast, div.MsoList5CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:90.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet2, li.MsoListBullet2, div.MsoListBullet2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet2CxSpFirst, li.MsoListBullet2CxSpFirst, div.MsoListBullet2CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet2CxSpMiddle, li.MsoListBullet2CxSpMiddle, div.MsoListBullet2CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet2CxSpLast, li.MsoListBullet2CxSpLast, div.MsoListBullet2CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet3, li.MsoListBullet3, div.MsoListBullet3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:54.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet3CxSpFirst, li.MsoListBullet3CxSpFirst, div.MsoListBullet3CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet3CxSpMiddle, li.MsoListBullet3CxSpMiddle, div.MsoListBullet3CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet3CxSpLast, li.MsoListBullet3CxSpLast, div.MsoListBullet3CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:54.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet4, li.MsoListBullet4, div.MsoListBullet4
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:72.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet4CxSpFirst, li.MsoListBullet4CxSpFirst, div.MsoListBullet4CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet4CxSpMiddle, li.MsoListBullet4CxSpMiddle, div.MsoListBullet4CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet4CxSpLast, li.MsoListBullet4CxSpLast, div.MsoListBullet4CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:72.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet5, li.MsoListBullet5, div.MsoListBullet5
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:90.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet5CxSpFirst, li.MsoListBullet5CxSpFirst, div.MsoListBullet5CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet5CxSpMiddle, li.MsoListBullet5CxSpMiddle, div.MsoListBullet5CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListBullet5CxSpLast, li.MsoListBullet5CxSpLast, div.MsoListBullet5CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:90.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber2, li.MsoListNumber2, div.MsoListNumber2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber2CxSpFirst, li.MsoListNumber2CxSpFirst, div.MsoListNumber2CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber2CxSpMiddle, li.MsoListNumber2CxSpMiddle, div.MsoListNumber2CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber2CxSpLast, li.MsoListNumber2CxSpLast, div.MsoListNumber2CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber3, li.MsoListNumber3, div.MsoListNumber3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:54.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber3CxSpFirst, li.MsoListNumber3CxSpFirst, div.MsoListNumber3CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber3CxSpMiddle, li.MsoListNumber3CxSpMiddle, div.MsoListNumber3CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber3CxSpLast, li.MsoListNumber3CxSpLast, div.MsoListNumber3CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:54.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber4, li.MsoListNumber4, div.MsoListNumber4
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:72.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber4CxSpFirst, li.MsoListNumber4CxSpFirst, div.MsoListNumber4CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber4CxSpMiddle, li.MsoListNumber4CxSpMiddle, div.MsoListNumber4CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber4CxSpLast, li.MsoListNumber4CxSpLast, div.MsoListNumber4CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:72.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber5, li.MsoListNumber5, div.MsoListNumber5
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:90.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber5CxSpFirst, li.MsoListNumber5CxSpFirst, div.MsoListNumber5CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber5CxSpMiddle, li.MsoListNumber5CxSpMiddle, div.MsoListNumber5CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListNumber5CxSpLast, li.MsoListNumber5CxSpLast, div.MsoListNumber5CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:90.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:center;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:25.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;
 font-weight:bold;}
p.MsoClosing, li.MsoClosing, div.MsoClosing
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:212.6pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoSignature, li.MsoSignature, div.MsoSignature
 {mso-style-link:"Signature Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:216.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
 {mso-style-link:"Body Text Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
 {mso-style-link:"Body Text Indent Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:27.0pt;
 text-align:justify;
 text-indent:-27.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
p.MsoListContinue, li.MsoListContinue, div.MsoListContinue
 {mso-style-name:"List Continue\,list-1";
 mso-style-link:"List Continue Char\,list-1 Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:36.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue2, li.MsoListContinue2, div.MsoListContinue2
 {mso-style-name:"List Continue 2\,list-2";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:40.3pt;
 text-align:justify;
 text-indent:-20.15pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue3, li.MsoListContinue3, div.MsoListContinue3
 {mso-style-name:"List Continue 3\,list-3";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:60.1pt;
 text-align:justify;
 text-indent:-20.15pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue4, li.MsoListContinue4, div.MsoListContinue4
 {mso-style-name:"List Continue 4\,list-4";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:80.25pt;
 text-align:justify;
 text-indent:-20.15pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue5, li.MsoListContinue5, div.MsoListContinue5
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:90.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue5CxSpFirst, li.MsoListContinue5CxSpFirst, div.MsoListContinue5CxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue5CxSpMiddle, li.MsoListContinue5CxSpMiddle, div.MsoListContinue5CxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:90.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListContinue5CxSpLast, li.MsoListContinue5CxSpLast, div.MsoListContinue5CxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:90.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoMessageHeader, li.MsoMessageHeader, div.MsoMessageHeader
 {mso-style-link:"Message Header Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:54.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-54.0pt;
 background:#CCCCCC;
 punctuation-wrap:simple;
 text-autospace:none;
 border:none;
 padding:0cm;
 font-size:12.0pt;
 font-family:"Cambria","serif";
 color:black;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
 {mso-style-link:"Subtitle Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Cambria","serif";
 color:#4F81BD;
 letter-spacing:.75pt;
 font-style:italic;}
p.MsoSalutation, li.MsoSalutation, div.MsoSalutation
 {mso-style-link:"Salutation Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoDate, li.MsoDate, div.MsoDate
 {mso-style-link:"Date Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoBodyTextFirstIndent, li.MsoBodyTextFirstIndent, div.MsoBodyTextFirstIndent
 {mso-style-link:"Body Text First Indent Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 text-indent:18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoBodyTextFirstIndent2, li.MsoBodyTextFirstIndent2, div.MsoBodyTextFirstIndent2
 {mso-style-link:"Body Text First Indent 2 Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoNoteHeading, li.MsoNoteHeading, div.MsoNoteHeading
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
p.MsoBodyTextIndent2, li.MsoBodyTextIndent2, div.MsoBodyTextIndent2
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:9.0pt;
 text-indent:-9.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:27.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
p.MsoBlockText, li.MsoBlockText, div.MsoBlockText
 {margin-top:0cm;
 margin-right:-22.5pt;
 margin-bottom:11.0pt;
 margin-left:0cm;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
a:link, span.MsoHyperlink
 {color:blue;
 text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
 {color:purple;
 text-decoration:underline;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 background:navy;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Tahoma","sans-serif";
 color:black;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
 {margin:0cm;
 margin-bottom:.0001pt;
 font-size:10.0pt;
 font-family:"Courier New";}
p.MsoAutoSig, li.MsoAutoSig, div.MsoAutoSig
 {mso-style-link:"E-mail Signature Char";
 margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p
 {margin-right:0cm;
 margin-left:0cm;
 font-size:12.0pt;
 font-family:"Times New Roman","serif";}
address
 {mso-style-link:"HTML Address Char";
 margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-style:italic;}
code
 {font-family:"Courier New";}
pre
 {mso-style-link:"HTML Preformatted Char5";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:0cm;
 font-size:10.0pt;
 font-family:"Courier New";}
tt
 {font-family:"Courier New";}
p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject
 {margin:0cm;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-weight:bold;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:8.0pt;
 font-family:"Tahoma","sans-serif";
 color:black;}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
 {margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoRMPane, li.MsoRMPane, div.MsoRMPane
 {margin:0cm;
 margin-bottom:.0001pt;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:36.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
 {mso-style-link:"Quote Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
 {mso-style-link:"Intense Quote Char";
 margin-top:10.0pt;
 margin-right:46.8pt;
 margin-bottom:14.0pt;
 margin-left:46.8pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 border:none;
 padding:0cm;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:#4F81BD;
 font-weight:bold;
 font-style:italic;}
p.MsoBibliography, li.MsoBibliography, div.MsoBibliography
 {margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
 {margin-top:24.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:14.0pt;
 font-family:"Cambria","serif";
 color:#365F91;
 font-weight:bold;}
p.Definition, li.Definition, div.Definition
 {mso-style-name:Definition;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:13.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.annex2, li.annex2, div.annex2
 {mso-style-name:annex2;
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:28.8pt;
 text-align:justify;
 text-indent:-28.8pt;
 line-height:12.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.a3, li.a3, div.a3
 {mso-style-name:a3;
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:36.0pt;
 text-align:justify;
 text-indent:-36.0pt;
 line-height:12.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.a4, li.a4, div.a4
 {mso-style-name:a4;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:43.2pt;
 text-align:justify;
 text-indent:-43.2pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.a5, li.a5, div.a5
 {mso-style-name:a5;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:50.4pt;
 text-align:justify;
 text-indent:-50.4pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.a6, li.a6, div.a6
 {mso-style-name:a6;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:50.4pt;
 text-align:justify;
 text-indent:-50.4pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.ANNEX, li.ANNEX, div.ANNEX
 {mso-style-name:ANNEX;
 margin-top:13.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:18.0pt;
 text-align:center;
 text-indent:-18.0pt;
 line-height:13.0pt;
 page-break-before:always;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:14.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.artist, li.artist, div.artist
 {mso-style-name:artist;
 margin:0cm;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Times New Roman","serif";}
span.CODE
 {mso-style-name:CODE;
 font-family:"Courier New";}
p.Introduction, li.Introduction, div.Introduction
 {mso-style-name:Introduction;
 margin-top:24.0pt;
 margin-right:0cm;
 margin-bottom:13.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:13.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.Doubleindentedpara, li.Doubleindentedpara, div.Doubleindentedpara
 {mso-style-name:"Double indented para";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:1.0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";}
p.Figurefootnote, li.Figurefootnote, div.Figurefootnote
 {mso-style-name:"Figure footnote";
 margin-top:10.0pt;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:10.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.Figuretitle, li.Figuretitle, div.Figuretitle
 {mso-style-name:"Figure title";
 margin-top:11.0pt;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:center;
 line-height:11.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.FlagPic, li.FlagPic, div.FlagPic
 {mso-style-name:FlagPic;
 margin:0cm;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:1638.0pt;
 font-family:"Tms Rmn","serif";}
p.Formula, li.Formula, div.Formula
 {mso-style-name:Formula;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:20.0pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.IsolibMLS, li.IsolibMLS, div.IsolibMLS
 {mso-style-name:IsolibMLS;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.ISOLogo, li.ISOLogo, div.ISOLogo
 {mso-style-name:ISOLogo;
 margin-top:9.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.ISOlogo0, li.ISOlogo0, div.ISOlogo0
 {mso-style-name:ISOlogo;
 margin:0cm;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:1638.0pt;
 font-family:"Tms Rmn","serif";}
p.ISOLogo1, li.ISOLogo1, div.ISOLogo1
 {mso-style-name:ISOLogo1;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.Note, li.Note, div.Note
 {mso-style-name:Note;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:0cm;
 text-align:justify;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.p1, li.p1, div.p1
 {mso-style-name:p1;
 margin-top:9.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.p2, li.p2, div.p2
 {mso-style-name:p2;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.p3, li.p3, div.p3
 {mso-style-name:p3;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.p4, li.p4, div.p4
 {mso-style-name:p4;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.p5, li.p5, div.p5
 {mso-style-name:p5;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.p6, li.p6, div.p6
 {mso-style-name:p6;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.panel2hintE, li.panel2hintE, div.panel2hintE
 {mso-style-name:panel2hintE;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.renfonc, li.renfonc, div.renfonc
 {mso-style-name:renfonc;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:10.0pt;
 margin-left:17.0pt;
 text-indent:-17.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";}
p.section, li.section, div.section
 {mso-style-name:section;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:19.0pt;
 margin-left:0cm;
 text-align:justify;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.Special, li.Special, div.Special
 {mso-style-name:Special;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.Tablefootnote, li.Tablefootnote, div.Tablefootnote
 {mso-style-name:"Table footnote";
 margin-top:5.0pt;
 margin-right:0cm;
 margin-bottom:5.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:10.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:9.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.Tabletitle, li.Tabletitle, div.Tabletitle
 {mso-style-name:"Table title";
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:5.5pt;
 margin-left:0cm;
 text-align:center;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 font-weight:bold;}
span.TableFootNoteXref
 {mso-style-name:TableFootNoteXref;
 position:relative;
 top:-3.0pt;}
p.Terms, li.Terms, div.Terms
 {mso-style-name:"Term\(s\)";
 margin:0cm;
 margin-bottom:.0001pt;
 line-height:11.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.zzContents, li.zzContents, div.zzContents
 {mso-style-name:zzContents;
 margin-top:24.0pt;
 margin-right:0cm;
 margin-bottom:13.0pt;
 margin-left:0cm;
 line-height:13.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.zzCover, li.zzCover, div.zzCover
 {mso-style-name:zzCover;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:right;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.zzForeword, li.zzForeword, div.zzForeword
 {mso-style-name:zzForeword;
 margin-top:24.0pt;
 margin-right:0cm;
 margin-bottom:13.0pt;
 margin-left:0cm;
 line-height:13.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.zzHelp, li.zzHelp, div.zzHelp
 {mso-style-name:zzHelp;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:11.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Comic Sans MS";
 color:green;
 font-style:italic;}
span.zzISOSTDAutomation
 {mso-style-name:zzISOSTDAutomation;
 font-weight:bold;}
span.zzNormalFont
 {mso-style-name:zzNormalFont;}
p.zzSTDTitle, li.zzSTDTitle, div.zzSTDTitle
 {mso-style-name:zzSTDTitle;
 margin-top:48.0pt;
 margin-right:0cm;
 margin-bottom:38.0pt;
 margin-left:0cm;
 line-height:17.0pt;
 page-break-before:always;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:16.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.Heading1unnumbered, li.Heading1unnumbered, div.Heading1unnumbered
 {mso-style-name:"Heading 1 unnumbered";
 margin-top:13.0pt;
 margin-right:0cm;
 margin-bottom:13.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:13.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
p.codeexample, li.codeexample, div.codeexample
 {mso-style-name:"code example";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:3.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Courier New";
 color:black;
 font-weight:bold;}
p.Rationale, li.Rationale, div.Rationale
 {mso-style-name:Rationale;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 letter-spacing:-.1pt;
 font-style:italic;}
p.EditingComment, li.EditingComment, div.EditingComment
 {mso-style-name:EditingComment;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Comic Sans MS";
 color:blue;
 font-style:italic;}
p.MetaHNote, li.MetaHNote, div.MetaHNote
 {mso-style-name:MetaHNote;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:11.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Comic Sans MS";
 color:fuchsia;
 font-style:italic;}
p.Attributes, li.Attributes, div.Attributes
 {mso-style-name:Attributes;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Century Gothic","sans-serif";
 color:black;}
p.DescriptionHeading, li.DescriptionHeading, div.DescriptionHeading
 {mso-style-name:DescriptionHeading;
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:center;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-style:italic;}
span.HTMLPreformattedChar
 {mso-style-name:"HTML Preformatted Char";
 font-family:"Courier New";}
span.HTMLPreformattedChar1
 {mso-style-name:"HTML Preformatted Char1";
 font-family:"Courier New";}
span.HTMLPreformattedChar2
 {mso-style-name:"HTML Preformatted Char2";
 font-family:"Courier New";}
span.HTMLPreformattedChar3
 {mso-style-name:"HTML Preformatted Char3";
 font-family:"Courier New";}
p.BalloonText1, li.BalloonText1, div.BalloonText1
 {mso-style-name:"Balloon Text1";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:8.0pt;
 font-family:"Tahoma","sans-serif";
 color:black;}
p.CommentSubject1, li.CommentSubject1, div.CommentSubject1
 {mso-style-name:"Comment Subject1";
 margin:0cm;
 margin-bottom:.0001pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-weight:bold;}
span.Term
 {mso-style-name:Term;
 font-style:italic;}
p.Appendix, li.Appendix, div.Appendix
 {mso-style-name:Appendix;
 margin-top:13.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:0cm;
 text-align:center;
 text-indent:0cm;
 line-height:13.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:14.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
span.HTMLPreformattedChar4
 {mso-style-name:"HTML Preformatted Char4";
 font-family:"Courier New";}
span.HTMLPreformattedChar4Char
 {mso-style-name:"HTML Preformatted Char4 Char";
 font-family:"Courier New";}
p.bullet, li.bullet, div.bullet
 {mso-style-name:bullet;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:2.0pt;
 margin-left:27.0pt;
 text-indent:-18.0pt;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";}
p.table, li.table, div.table
 {mso-style-name:table;
 margin:0cm;
 margin-bottom:.0001pt;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";}
p.table-indent, li.table-indent, div.table-indent
 {mso-style-name:table-indent;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:36.0pt;
 margin-bottom:.0001pt;
 text-indent:-18.0pt;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";}
p.appendix2, li.appendix2, div.appendix2
 {mso-style-name:appendix2;
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:28.8pt;
 text-align:justify;
 text-indent:-28.8pt;
 line-height:12.0pt;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
span.resultbody1
 {mso-style-name:resultbody1;
 font-family:"MSRef SS EOT";
 color:#333333;
 font-weight:normal;}
p.InformNorm, li.InformNorm, div.InformNorm
 {mso-style-name:InformNorm;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:24.0pt;
 margin-left:0cm;
 text-align:center;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:14.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.IntroductionAllcaps, li.IntroductionAllcaps, div.IntroductionAllcaps
 {mso-style-name:"Introduction + All caps";
 margin-top:6.0pt;
 margin-right:0cm;
 margin-bottom:12.0pt;
 margin-left:0cm;
 text-align:justify;
 line-height:12.0pt;
 page-break-before:always;
 page-break-after:avoid;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:11.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 text-transform:uppercase;
 letter-spacing:-.1pt;
 font-weight:bold;}
span.Heading2Char
 {mso-style-name:"Heading 2 Char\,h2 Char";
 font-family:"Helvetica","sans-serif";
 color:black;
 font-weight:bold;}
span.IntroductionAllcapsChar
 {mso-style-name:"Introduction + All caps Char";
 font-family:"Helvetica","sans-serif";
 color:black;
 text-transform:uppercase;
 letter-spacing:-.1pt;
 font-weight:bold;}
p.NumberedParagraph, li.NumberedParagraph, div.NumberedParagraph
 {mso-style-name:"Numbered Paragraph";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:28.8pt;
 text-align:justify;
 text-indent:-28.8pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.StyleHeading1unnumberedAfter36pt, li.StyleHeading1unnumberedAfter36pt, div.StyleHeading1unnumberedAfter36pt
 {mso-style-name:"Style Heading 1 unnumbered + After\:  36 pt";
 margin-top:18.0pt;
 margin-right:0cm;
 margin-bottom:24.0pt;
 margin-left:0cm;
 text-align:center;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 text-transform:uppercase;
 font-weight:bold;}
span.cald-definition1
 {mso-style-name:cald-definition1;
 font-family:"Verdana","sans-serif";
 color:#003399;
 font-style:normal;}
span.fieldvalue1
 {mso-style-name:fieldvalue1;
 font-family:"Arial","sans-serif";
 color:black;}
span.sans
 {mso-style-name:sans;}
span.def-classification1
 {mso-style-name:def-classification1;
 font-family:"Verdana","sans-serif";
 color:#333333;}
span.def-grammar1
 {mso-style-name:def-grammar1;
 font-family:"Verdana","sans-serif";
 color:#333333;
 font-style:normal;}
span.def-contents1
 {mso-style-name:def-contents1;}
span.def-definition1
 {mso-style-name:def-definition1;
 font-family:"Verdana","sans-serif";
 color:#003399;}
p.AERO, li.AERO, div.AERO
 {mso-style-name:AERO;
 margin:0cm;
 margin-bottom:.0001pt;
 font-size:18.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-weight:bold;}
p.OrigDate, li.OrigDate, div.OrigDate
 {mso-style-name:OrigDate;
 margin-top:0cm;
 margin-right:18.0pt;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-indent:-72.0pt;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.ExampleText, li.ExampleText, div.ExampleText
 {mso-style-name:"Example Text";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:6.0pt;
 margin-left:0cm;
 font-size:10.0pt;
 font-family:"Courier New";}
p.TableofContents, li.TableofContents, div.TableofContents
 {mso-style-name:"Table of Contents";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:0cm;
 text-align:center;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;
 text-transform:uppercase;
 font-weight:bold;}
p.Legalityrule, li.Legalityrule, div.Legalityrule
 {mso-style-name:Legalityrule;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:28.8pt;
 text-align:justify;
 text-indent:-28.8pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.Namingrule, li.Namingrule, div.Namingrule
 {mso-style-name:Namingrule;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:28.8pt;
 text-align:justify;
 text-indent:-28.8pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.ConsistencyRule, li.ConsistencyRule, div.ConsistencyRule
 {mso-style-name:ConsistencyRule;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:18.0pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.Comptence, li.Comptence, div.Comptence
 {mso-style-name:Comp\00E9tence;
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:11.0pt;
 margin-left:32.2pt;
 text-align:justify;
 text-indent:-18.0pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Helvetica","sans-serif";
 color:black;}
p.TableCode, li.TableCode, div.TableCode
 {mso-style-name:"Table Code";
 mso-style-link:"Table Code Char";
 margin:0cm;
 margin-bottom:.0001pt;
 font-size:9.0pt;
 font-family:"Courier New";
 color:black;
 font-weight:bold;}
span.TableCodeChar
 {mso-style-name:"Table Code Char";
 mso-style-link:"Table Code";
 font-family:"Courier New";
 color:black;
 font-weight:bold;}
p.prgmlanglexample, li.prgmlanglexample, div.prgmlanglexample
 {mso-style-name:"prgm langl example";
 mso-style-link:"prgm langl example Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:3.0pt;
 margin-left:14.4pt;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Times New Roman","serif";
 color:black;}
span.prgmlanglexampleChar
 {mso-style-name:"prgm langl example Char";
 mso-style-link:"prgm langl example";
 color:black;}
span.AADLExample
 {mso-style-name:AADLExample;
 font-family:"Courier New";}
p.aadlexample0, li.aadlexample0, div.aadlexample0
 {mso-style-name:"aadl example";
 mso-style-link:"aadl example Char";
 margin-top:0cm;
 margin-right:0cm;
 margin-bottom:3.0pt;
 margin-left:0cm;
 text-align:justify;
 punctuation-wrap:simple;
 text-autospace:none;
 font-size:10.0pt;
 font-family:"Courier New";
 color:black;}
span.aadlexampleChar
 {mso-style-name:"aadl example Char";
 mso-style-link:"aadl example";
 font-family:"Courier New";
 color:black;}
p.Body, li.Body, div.Body
 {mso-style-name:Body;
 mso-style-link:"Body Char";
 margin:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
span.BodyChar
 {mso-style-name:"Body Char";
 mso-style-link:Body;
 font-family:"Arial","sans-serif";
 color:black;}
p.Body1, li.Body1, div.Body1
 {mso-style-name:Body1;
 mso-style-link:"Body1 Char";
 margin-top:13.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:18.0pt;
 margin-bottom:.0001pt;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
span.Body1Char
 {mso-style-name:"Body1 Char";
 mso-style-link:Body1;
 font-family:"Arial","sans-serif";
 color:black;}
p.Body1N, li.Body1N, div.Body1N
 {mso-style-name:Body1N;
 mso-style-link:"Body1N Char Char";
 margin-top:13.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:0cm;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-28.8pt;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";}
span.Body1NCharChar
 {mso-style-name:"Body1N Char Char";
 mso-style-link:Body1N;
 font-family:"Arial","sans-serif";}
p.Default, li.Default, div.Default
 {mso-style-name:Default;
 margin:0cm;
 margin-bottom:.0001pt;
 text-autospace:none;
 font-size:12.0pt;
 font-family:"DejaVu Serif","serif";
 color:black;}
span.HTMLPreformattedChar5
 {mso-style-name:"HTML Preformatted Char5";
 mso-style-link:"HTML Preformatted";
 font-family:"Courier New";}
span.ListContinueChar
 {mso-style-name:"List Continue Char\,list-1 Char";
 mso-style-link:"List Continue\,list-1";
 font-family:"Helvetica","sans-serif";
 color:black;}
span.Highlight
 {mso-style-name:Highlight;
 font-style:italic;}
span.CommentTextChar
 {mso-style-name:"Comment Text Char";
 mso-style-link:"Comment Text";
 font-family:"Arial","sans-serif";
 color:black;}
p.Foreword, li.Foreword, div.Foreword
 {mso-style-name:Foreword;
 margin-top:12.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:0cm;
 margin-bottom:.0001pt;
 text-align:center;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 text-transform:uppercase;}
p.LastDate, li.LastDate, div.LastDate
 {mso-style-name:LastDate;
 margin-top:0cm;
 margin-right:18.0pt;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-indent:-72.0pt;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
p.SAEPubNo, li.SAEPubNo, div.SAEPubNo
 {mso-style-name:SAEPubNo;
 margin-top:13.0pt;
 margin-right:18.0pt;
 margin-bottom:13.0pt;
 margin-left:0cm;
 text-align:center;
 font-size:11.0pt;
 font-family:"Arial","sans-serif";
 color:black;
 font-weight:bold;}
p.SupersedeStmt, li.SupersedeStmt, div.SupersedeStmt
 {mso-style-name:SupersedeStmt;
 margin-top:12.0pt;
 margin-right:0cm;
 margin-bottom:0cm;
 margin-left:72.0pt;
 margin-bottom:.0001pt;
 text-align:justify;
 text-indent:-72.0pt;
 font-size:10.0pt;
 font-family:"Arial","sans-serif";
 color:black;}
span.BodyTextChar
 {mso-style-name:"Body Text Char";
 mso-style-link:"Body Text";
 font-family:"Arial","sans-serif";
 color:black;}
span.BodyTextFirstIndentChar
 {mso-style-name:"Body Text First Indent Char";
 mso-style-link:"Body Text First Indent";
 font-family:"Arial","sans-serif";
 color:black;}
span.BodyTextIndentChar
 {mso-style-name:"Body Text Indent Char";
 mso-style-link:"Body Text Indent";
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
span.BodyTextFirstIndent2Char
 {mso-style-name:"Body Text First Indent 2 Char";
 mso-style-link:"Body Text First Indent 2";
 font-family:"Arial","sans-serif";
 color:black;
 layout-grid-mode:line;}
span.DateChar
 {mso-style-name:"Date Char";
 mso-style-link:Date;
 font-family:"Helvetica","sans-serif";
 color:black;}
span.E-mailSignatureChar
 {mso-style-name:"E-mail Signature Char";
 mso-style-link:"E-mail Signature";
 font-family:"Helvetica","sans-serif";
 color:black;}
span.EndnoteTextChar
 {mso-style-name:"Endnote Text Char";
 mso-style-link:"Endnote Text";
 font-family:"Helvetica","sans-serif";
 color:black;}
span.HTMLAddressChar
 {mso-style-name:"HTML Address Char";
 mso-style-link:"HTML Address";
 font-family:"Helvetica","sans-serif";
 color:black;
 font-style:italic;}
span.IntenseQuoteChar
 {mso-style-name:"Intense Quote Char";
 mso-style-link:"Intense Quote";
 font-family:"Helvetica","sans-serif";
 color:#4F81BD;
 font-weight:bold;
 font-style:italic;}
span.MacroTextChar
 {mso-style-name:"Macro Text Char";
 mso-style-link:"Macro Text";
 font-family:Consolas;
 color:black;}
span.MessageHeaderChar
 {mso-style-name:"Message Header Char";
 mso-style-link:"Message Header";
 font-family:"Cambria","serif";
 color:black;
 background:#CCCCCC;}
span.QuoteChar
 {mso-style-name:"Quote Char";
 mso-style-link:Quote;
 font-family:"Helvetica","sans-serif";
 color:black;
 font-style:italic;}
span.SalutationChar
 {mso-style-name:"Salutation Char";
 mso-style-link:Salutation;
 font-family:"Helvetica","sans-serif";
 color:black;}
span.SignatureChar
 {mso-style-name:"Signature Char";
 mso-style-link:Signature;
 font-family:"Helvetica","sans-serif";
 color:black;}
span.SubtitleChar
 {mso-style-name:"Subtitle Char";
 mso-style-link:Subtitle;
 font-family:"Cambria","serif";
 color:#4F81BD;
 letter-spacing:.75pt;
 font-style:italic;}
span.msoIns
 {mso-style-name:"";
 text-decoration:underline;
 color:teal;}
span.msoDel
 {mso-style-name:"";
 text-decoration:line-through;
 color:red;}
.MsoChpDefault
 {font-size:10.0pt;}
 /* Page Definitions */
 @page WordSection1
 {size:612.0pt 792.0pt;
 margin:36.0pt 36.0pt 36.0pt 36.0pt;}
div.WordSection1
 {page:WordSection1;}
 /* List Definitions */
 ol
 {margin-bottom:0cm;}
ul
 {margin-bottom:0cm;}
-->
/*]]>*/</style>



</head>
<body vlink="purple" link="blue" lang="RU">



<div class="WordSection1">

<table width="736" cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="width: 551.95pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="250" valign="top" rowspan="2" style="width: 187.2pt; border-width: 1pt medium medium 1pt; border-style: solid none none solid; border-color: windowtext -moz-use-text-color -moz-use-text-color windowtext; padding: 0cm 5.4pt;">
  <p class="Foreword"><img width="204" hspace="12" height="41" align="left" alt="SAE Aerospace bw" src="imgs/image001.jpg" /></p>
  <p class="AERO"><span lang="EN-US">                                      AEROSPACE</span></p>
  </td>
  <td width="250" valign="top" rowspan="2" style="width: 187.2pt; border-width: 1pt 1pt medium medium; border-style: solid solid none none; border-color: windowtext windowtext -moz-use-text-color -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="AERO"><span lang="EN-US">AEROSPACE</span></p>
  <p class="AERO"><span lang="EN-US">STANDARD</span></p>
  <p class="AERO"><span lang="EN-US"> </span></p>
  </td>
  <td width="237" valign="top" style="width: 177.55pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="SAEPubNo" style="text-align: left;"><span style="position: absolute; z-index: 14; margin-left: 0px; margin-top: 19px; width: 33px; height: 17px;"><img width="33" height="17" src="imgs/image002.png" /></span><span lang="EN-US">          AS5506B</span></p>
  </td>
 </tr>
 <tr>
  <td width="237" valign="top" style="width: 177.55pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="OrigDate"><span lang="EN-US">Issued     2009-01</span></p>
  <p class="LastDate"><span lang="EN-US">Revised     Proposed Revision<br />
  2012-03-05<a name="_GoBack"></a></span></p>
  <p class="SupersedeStmt"><span lang="EN-US">Superseding AS5506A</span></p>
  </td>
 </tr>
 <tr>
  <td width="736" valign="top" colspan="3" style="width: 551.95pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="MsoTitle" style="margin: 6pt 0cm;"><span lang="EN-US" style="font-size: 11pt; font-weight: normal;">Architecture Analysis &amp; Design Language (AADL)</span></p>
  </td>
 </tr>
</tbody></table>

<p align="center" class="Rationale" style="text-align: center;"><span lang="EN-US"> </span></p>

<p align="center" class="Rationale" style="text-align: center;"><span lang="EN-US" style="font-style: normal;">RATIONALE</span></p>

<p class="MsoBodyText"><span lang="EN-US">The language defined in SAE AS5506 has
been refined and extended based on industrial experience with version 1.0 over
the last 4 years.  The improvements focus on better support for architecture templates
and modeling of layered and partitioned architectures. The AS5506B is a revision
of AS5506A that addresses a number of errata that have been reported and agreed
upon by the committee.</span></p>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="MsoBodyText"><span lang="EN-US">This Architecture Analysis &amp; Design
Language (AADL) standard document was prepared by the SAE AS-2C Architecture
Description Language Subcommittee, Embedded Computing Systems Committee,
Aerospace Avionics Systems Division.  </span></p>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<i><span lang="EN-US" style="font-size: 10pt; font-family: &quot;Comic Sans MS&quot;; color: blue;"><br clear="all" style="page-break-before: always;" />
</span></i>

<p class="EditingComment"><span lang="EN-US"> </span></p>

<p class="TableofContents"><a name="TOC"></a><span lang="EN-US">Table of Contents</span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320277">1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Scope<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">10</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320278">1.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Purpose/Extent<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">10</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320279">1.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Field of Application<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">11</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320280">1.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Structure of Document<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">11</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320281">1.3.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>A Reader’s Guide<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">11</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320282">1.3.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Structure of Clauses and Subclauses<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">13</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320283">1.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Error, Exception, Anomaly and Compliance<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">14</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320284">1.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Method of Description and Syntax Notation<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">16</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320285">1.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Method of Description for Discrete and
Temporal Semantics<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">17</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320286">2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>References<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">22</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320287">2.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Normative References<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">22</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320288">2.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Informative References<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">22</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320289">2.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Terms and Definitions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">22</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320290">3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Architecture Analysis
&amp; Design Language Summary<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">23</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320291">4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Components, Packages,
and Annexes<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">28</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320292">4.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>AADL Specifications<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">28</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320293">4.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Packages<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">30</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320294">4.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Component Types<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">34</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320295">4.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Component Implementations<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">39</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320296">4.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Subcomponents<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">45</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320297">4.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Abstract Components<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">53</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320298">4.7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Prototypes<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">55</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320299">4.8<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Annex Subclauses and Annex Libraries<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">60</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320300">5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Software Components<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">62</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320301">5.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Data<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">62</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320302">5.1.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Runtime Support For Shared Data Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">65</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320303">5.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Subprograms and Subprogram Calls<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">68</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320304">5.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Subprogram Groups and Subprogram Group
Types<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">75</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320305">5.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Threads<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">77</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320306">5.4.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Thread States and Actions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">81</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320307">5.4.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Thread Dispatching<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">84</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320308">5.4.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Thread Scheduling and Execution<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">87</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320309">5.4.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Execution Fault Handling<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">89</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320310">5.4.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Thread Internal Modes and Mode Transitions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">91</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320311">5.4.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>System Synchronization Requirements<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">91</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320312">5.4.7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Asynchronous Systems<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">92</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320313">5.4.8<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Runtime Support For Threads<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">93</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320314">5.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Thread Groups<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">95</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320315">5.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Processes<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">98</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320316">6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Execution Platform
Components<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">102</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320317">6.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Processors<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">102</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320318">6.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Virtual Processors<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">107</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320319">6.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Memory<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">110</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320320">6.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Buses<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">112</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320321">6.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Virtual Buses<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">115</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320322">6.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Devices<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">117</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320323">7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>System Composition<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">122</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320324">7.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Systems<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">122</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320325">8<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Features and Shared
Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">125</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320326">8.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Abstract Features<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">127</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320327">8.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Feature Groups and Feature Group Types<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">128</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320328">8.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Ports<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">133</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320329">8.3.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Port Categories<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">135</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320330">8.3.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Port Input and Output Timing<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">136</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320331">8.3.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Port Queue Processing<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">138</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320332">8.3.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Events and Subprograms<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">139</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320333">8.3.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Runtime Support For Ports<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">140</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320334">8.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Subprogram and Subprogram Group Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">143</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320335">8.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Subprogram Parameters<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">149</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320336">8.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Data Component Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">150</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320337">8.7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Bus Component Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">153</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320338">9<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">       </span>Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">156</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320339">9.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Feature Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">157</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320340">9.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Port Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">159</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320341">9.2.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Port Connection Characteristics<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">163</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320342">9.2.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Port Connection Topology<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">164</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320343">9.2.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Connection Patterns for Component Arrays
and Feature Arrays<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">165</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320344">9.2.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Port Communication Timing<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">167</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320345">9.2.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span>Sampled, Immediate, and Delayed Data Port
Communication<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">167</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320346"><span lang="FR">9.2.6</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">        </span><span lang="FR">Semantic Port Connections
and Port Queues</span><span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">169</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320347">9.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Parameter Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">171</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320348">9.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Access Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">173</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320349">9.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Feature Group Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">176</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320350">10<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Flows<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">182</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320351">10.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Flow Specifications<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">183</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320352">10.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Flow Implementations<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">187</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320353">10.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>End-To-End Flows<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">190</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320354">11<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">194</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320355">11.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Property Sets<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">194</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320356">11.1.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Property Types<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">195</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320357">11.1.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Property Definitions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">199</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320358">11.1.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Property Constants<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">201</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320359">11.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Predeclared Property Sets<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">202</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320360">11.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Property Associations<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">203</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320361">11.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Property Expressions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">209</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320362">12<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Modes and Mode
Transitions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">216</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320363">13<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Operational System<span style="color: black; display: none; text-decoration: none;">.. </span><span style="color: black; display: none; text-decoration: none;">224</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320364">13.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>System Instances<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">224</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320365">13.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>System Binding<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">225</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320366">13.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>System Startup<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">229</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320367">13.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Normal System Operation<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">230</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320368">13.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>System Operation Modes<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">230</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320369">13.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>System Operation Mode Transitions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">231</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320370">13.7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>System-wide Fault Handling, Shutdown,
and Restart<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">233</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320371">14<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Layered System
Architectures<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">236</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320372">15<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Lexical Elements<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">238</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320373">15.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Character Set<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">238</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320374">15.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Lexical Elements, Separators, and
Delimiters<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">239</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320375">15.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Identifiers<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">240</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320376">15.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Numerical Literals<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">241</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320377">15.4.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Decimal Literals<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">241</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"><a href="#_Toc318320378">15.4.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Based Literals<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">242</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320379">15.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>String Literals<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">242</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320380">15.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Comments<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">243</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320381">15.7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">          </span>Reserved Words<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">243</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320382"><span style="">Appendix A</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Predeclared Property Sets<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">245</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320383">A.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Deployment Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">245</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320384">A.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Thread Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">252</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320385">A.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Timing Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">255</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320386">A.4<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Communication Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">261</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320387">A.5<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Memory Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">265</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320388">A.6<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Programming Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">268</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320389">A.7<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Modeling Properties<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">274</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320390">A.8<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Project-Specific Property Set<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">275</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320391">A.9<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Predeclared Runtime Services<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">279</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320392"><span style="">Appendix B</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Glossary<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">285</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320393"><span style="">Appendix C</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Syntax Summary<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">289</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320394">C.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>Constraints on Component Containment<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">289</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320395">C.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>AADL Core Language Syntax Rules<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">292</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320396">C.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">       </span>AADL Core Language Meta Model Element
Identifiers<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">319</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320397"><span style="">Appendix D</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Graphical AADL Notation<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">323</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320398">D.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Scope<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">323</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320399">D.2<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>AADL Graphical Symbols<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">323</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320400">D.3<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Implementation Suggestions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">330</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320401"><span style="">Appendix E</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>AADL Meta Model and XML Specification<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">333</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320402"><span style="">Appendix F</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Unified Modeling Language (UML) Profile<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">333</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320403"><span style="">Appendix G</span><span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">         </span>Profiles and Extensions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">334</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320404">Annex Document A<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">      </span>Code Generation<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">335</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320405">Annex Document B<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">      </span>Data Modeling<span style="color: black; display: none; text-decoration: none;">.. </span><span style="color: black; display: none; text-decoration: none;">335</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320406">Annex Document C<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">      </span>Error Model<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">335</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320407">Annex Document D<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">      </span>Behavior Model<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">335</span></a></span></p>

<p class="MsoToc1"><span lang="EN-US"><a href="#_Toc318320408">Annex Document E<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-transform: none; text-decoration: none;">      </span>Mini Annexes<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">335</span></a></span></p>

<p class="MsoToc2"><span lang="EN-US"><a href="#_Toc318320409">Annex E.1<span style="font-size: 11pt; font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; color: windowtext; text-decoration: none;">      </span>Data Sets<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">335</span></a></span></p>

<p class="MsoToc3"><span lang="EN-US"> </span></p>

<b><span lang="EN-US" style="font-size: 10pt; font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;"><br clear="all" style="page-break-before: always;" />
</span></b>

<p class="Tabletitle"><span lang="EN-US">Table of Figures</span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320410">Figure 1 Example
Semantic Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">26</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320411">Figure 2 Component
Type Extension Hierarchy<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">35</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320412">Figure 3 Extension
Hierarchy of Component Types and Implementations<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">40</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320413">Figure 4 Component
Containment Hierarchy<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">45</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320414">Figure 5 Thread
States and Actions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">84</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320415">Figure 6 Thread
Scheduling and Execution States<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">89</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320416">Figure 7 Performing
Thread Execution with Recovery<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">90</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320417">Figure 8 Process
States and Actions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">101</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320418">Figure 9 Processor
States and Actions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">106</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320419">Figure 10 Virtual
Processor States and Actions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">110</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320420">Figure 11 Port Array
in a Voting Pattern<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">127</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320421">Figure 12 Containment
Hierarchy and Shared Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">150</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320422">Figure 13 Shared Bus
Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">153</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320423">Figure 14 Semantic
Port Connection<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">159</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320424">Figure 15 Connection
Patterns in 2-Dimensional Component Array<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">166</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320425">Figure 16 Sampling
Data Port Connection<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">168</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320426">Figure 17 Timing of
Immediate &amp; Delayed Data Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">169</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320427">Figure 18 Parameter
Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">171</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320428">Figure 19 Semantic
Access Connection For Data Components<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">174</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320429">Figure 20 Flow
Specification &amp; Flow Implementation<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">182</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320430">Figure 21 Property
Value Determination<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">208</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320431">Figure 22 System
Instance States, Transitions, and Actions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">230</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320432">Figure 23 System Mode
Transition Semantics<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">233</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320433">Figure 24 AADL
Components Graphical Symbols<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">323</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320434">Figure 25 Decorators
on Threads<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">324</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320435">Figure 26 Component
Types and Implementations<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">324</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320436">Figure 27
Subcomponents<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">325</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320437">Figure 28 Component
Implementation Content with Text Box<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">325</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320438">Figure 29 Components
and Prototypes<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">325</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320439">Figure 30 Abstract
Features, Ports and Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">326</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320440">Figure 31 Connections
&amp; Branch Points<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">326</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320441">Figure 32 Feature
Groups &amp; Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">327</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320442">Figure 33 Expanded
Port Group Type Symbol<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">327</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320443">Figure 34 Feature
Group Composition and Connections<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">327</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320444">Figure 35 Shared Data
Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">328</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320445">Figure 36 Shared Bus
Access<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">328</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320446">Figure 37 Subprogram
Calls and Parameter Passing<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">328</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320447">Figure 38 Subprogram
Access Features<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">329</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320448">Figure 39 Modes and
Mode Transitions<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">329</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320449">Figure 40 Flow
Specifications<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">330</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320450">Figure 41 Flow
Implementation Selection<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">330</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320451">Figure 42 Packages,
Property Sets, and Annex Libraries<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">330</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320452">Figure 43 A Component
Library View<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">331</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320453">Figure 44
Tree-Structured Graphical Instance Hierarchy<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">331</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320454">Figure 45 Nested
Graphical Instance Hierarchy<span style="color: black; display: none; text-decoration: none;">. </span><span style="color: black; display: none; text-decoration: none;">332</span></a></span></p>

<p class="MsoTof"><span lang="EN-US"><a href="#_Toc318320455">Figure 46 Instance
Navigation &amp; Graphical Viewer<span style="color: black; display: none; text-decoration: none;"> </span><span style="color: black; display: none; text-decoration: none;">332</span></a></span></p>

<p class="Introduction"><span lang="EN-US">Foreword</span></p>

<p class="NumberedParagraph"><a name="_Ref200001026"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">  
</span></span><span lang="EN-US">The AADL standard was prepared by the SAE
Avionics Systems Division (ASD) Embedded Computing Systems Committee (AS-2) <span style="letter-spacing: -0.1pt;">Architecture Description Language (AS-2C)
subcommittee.</span></span></a><span lang="EN-US" style="letter-spacing: -0.1pt;"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This standard addresses the requirements defined in SAE ARD 5296,
Requirements for the Avionics Architecture Description Language</span><a href="#_ftn1" name="_ftnref1" title=""><span class="MsoFootnoteReference"><i><span lang="EN-US" style="font-size: 8pt;"><span class="MsoFootnoteReference"><b><span lang="EN-US" style="font-size: 8pt; color: black;">[1]</span></b></span></span></i></span></a><span lang="EN-US">.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard consists of a core language standard that is
defined in this document and a collection of standardized property sets and/or
sublanguages that are defined in annex documents.  The core language standard
provides full support for modeling the application task and communication
architecture, the hardware platform, and the physical environment of embedded
software-intensive systems, including standardized predeclared properties to
characterize task execution and communication timing, as well as deployment of
the application on the hardware platform.  The standardized extensions allow
core AADL models to be annotated with information that is not represented by
the core language to meet specific embedded system analysis needs such as
security analysis, dependability analysis, and behavioral analysis, and support
for automated generation and integration of systems. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The starting point for the AADL standard development was MetaH, an
architecture description language and supporting toolset, developed <span style="letter-spacing: -0.1pt;">at Honeywell Technology Laboratories</span> under
DARPA and Army AMCOM sponsorship.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard has been designed to be compatible with real-time
operating system standards such as POSIX and ARINC 653.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard is aligned with Object Management Group (OMG)
Unified Modeling Language (UML) and Modeling and Analysis of Real-Time Embedded
systems (MARTE) through a standardized profile for AADL.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard includes a specification of an AADL-specific XML
interchange format. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard provides guidelines for users to transition between
AADL models and program source text written in Ada (ISO/IEC 8652/2007 (E) Ed.3)
and C (ISO/IEC 9899:1999).</span></p>

<p class="Introduction" style="margin-top: 12pt;"><span lang="EN-US">Introduction</span></p>

<p class="NumberedParagraph" style="margin-left: 27.35pt; text-indent: -27.35pt;"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The SAE Architecture Analysis &amp; Design Language (referred to in
this document as AADL) is a textual and graphical language used to design and
analyze the software and hardware architecture of performance-critical
real-time systems.  These are systems whose operation strongly depends on
meeting non-functional system requirements such as reliability, availability,
timing, responsiveness, throughput, safety, and security.  AADL is used to
describe the structure of such systems as an assembly of software components
mapped onto an execution platform.  It can be used to describe functional
interfaces to components (such as data inputs and outputs) and
performance-critical aspects of components (such as timing).  AADL can also be
used to describe how components interact, such as how data inputs and outputs
are connected or how application software components are allocated to execution
platform components.  The language can also be used to describe the dynamic
behavior of the runtime architecture by providing support to model operational
modes and mode transitions.  The language is designed to be extensible to
accommodate analyses of the runtime architectures that the core language does
not completely support.  Extensions can take the form of new properties and
analysis specific notations that can be associated with components and are
standardized themselves.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL was developed to meet the special needs of performance-critical
real-time systems, including embedded real-time systems such as avionics,
automotive electronics, or robotics systems.  The language can describe
important performance-critical aspects such as timing requirements, fault and
error behaviors, time and space partitioning, and safety and certification
properties. Such a description allows a system designer to perform analyses of
the composed components and systems such as system schedulability, sizing
analysis, and safety analysis.  From these analyses, the designer can evaluate
architectural tradeoffs and changes.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Since AADL supports multiple and extensible analysis approaches, it
provides the ability to analyze the cross cutting impacts of change in the
architecture in one specification using a variety of analysis tools.  AADL is
designed to be used with analysis tools that support the automatic generation
of the source code needed to integrate the system components and build a system
executive.  Since the models and the architecture specification drive the
design and implementation, they can be maintained to permit model driven
architecture based changes throughout the system lifecycle. </span></p>

<p class="Introduction" style="margin-top: 12pt;"><span lang="EN-US">Information
and Feedback</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The website at http://www.aadl.info is an information source regarding
the SAE AADL standard. It makes available papers on AADL, its benefits, and its
use. Also available are papers on MetaH, the technology that demonstrated the
practicality of a model-based system engineering approach based on architecture
description languages for embedded real-time systems.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The website provides links to three SAE AADL related discussion
forums: </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The SAE AADL User Forum to ask questions and
share experiences about modeling with SAE AADL, </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The AADL Toolset User Forum to ask questions and
share experiences with the Open Source AADL Tool Environment,(OSATE) and</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The SAE Standard Document Corrections &amp;
Improvements Forum that records errata, corrections, and improvements to the
current release of the SAE AADL standard. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The website provides information and a download site for the Open
Source AADL Tool Environment.  It also provides links to other resources
regarding the AADL standard and its use.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Questions and inquiries regarding working versions of annexes and
future versions of the standard can be addressed to info@aadl.info.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Informal comments on this standard may be sent via e-mail to
errata@aadl.info. If appropriate, the defect correction procedure will be
initiated. Comments should use the following format: </span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!topic Title summarizing comment</span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!reference AADL-ss.ss(pp)</span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!from Author Name yy-mm-dd</span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!keywords keywords related to topic</span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!discussion</span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
text of discussion</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">where ss.ss is the section, clause or subclause number, pp is the paragraph
or line number where applicable, and yy-mm-dd is the date the comment was sent.
The date is optional, as is the !keywords line. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Multiple comments per e-mail message are acceptable. Please use a
descriptive “Subject” in your e-mail message. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">When correcting typographical errors or making minor wording
suggestions, please put the correction directly as the topic of the comment;
use square brackets [ ] to indicate text to be omitted and curly braces { } to
indicate text to be added, and provide enough context to make the nature of the
suggestion self-evident or put additional information in the body of the
comment, for example: </span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!topic [c]{C}haracter</span></p>

<p class="MsoListContinue2" style="margin-bottom: 6pt;"><span lang="EN-US">         
!topic it[']s meaning is not defined</span></p>

<h1><a name="_Toc318320277"></a><a name="_Toc169684053"></a><a name="_Toc167033702"></a><a name="_Toc168661820"></a><a name="_Toc86725634"></a><a name="_Toc86220671"></a><a name="_Toc86220141"></a><a name="_Toc86219826"></a><a name="_Toc86219721"></a><a name="_Toc79294954"></a><a name="_Toc27797733"></a><a name="_Toc27449561"></a><a name="_Toc8550324"></a><a name="_Toc2492726"></a><a name="_Toc535736300"></a><a name="_Toc535735980"></a><a name="_Toc535729795"></a><a name="_Toc532013532"></a><a name="_Ref532011414"><span lang="EN-US">1<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Scope</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This standard defines a language for describing both the software
architecture and the execution platform architectures of performance-critical,
embedded, real-time systems; the language is known as the SAE Architecture
Analysis &amp; Design Language (AADL).  An AADL model describes a system as a hierarchy
of components with their interfaces and their interconnections. Properties are
associated to these constructions.  AADL components fall into two major
categories:  those that represent the physical hardware and those representing
the application software.  The former is typified by processors, buses, memory,
and devices, the latter by application software functions, data, threads, and
processes.  The model describes how these components interact and are
integrated to form complete systems.  It describes both functional interfaces
and aspects critical for performance of individual components and assemblies of
components.  The changes to the runtime architecture are modeled as operational
modes and mode transitions. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The language is applicable to systems that are:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">real-time, </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">resource-constrained, </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">safety-critical systems,</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="color: windowtext;">and</span><span lang="EN-US"> those that may include specialized device hardware.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This standard defines the core AADL that is designed to be
extensible.  While the core language provides a number of modeling concepts
with precise semantics including the mapping to execution platforms and the
specification of execution time behavior, it is not possible to foresee all
possible architecture analyses.  Extensions to accommodate new analyses and
unique hardware attributes take the form of new properties and analysis
specific notations that can be associated with components.  Users or tool vendors
may define these extensions.  Extensions may be proposed as annex documents for
inclusion in the AADL standard.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This standard does not specify how the detailed design or
implementation details of software and hardware components are to be specified. 
Those details can be specified by a variety of software programming and
hardware description languages.  The standard specifies relevant
characteristics of the detailed design and implementation descriptions, such as
source text written in a programming language or hardware description language,
from an external (black box) perspective.  These relevant characteristics are
specified as AADL component properties, and as rules of conformance between the
properties and the described components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This standard does not prescribe any particular system integration
technologies, such as operating system or middleware application program
interfaces or bus technologies or topologies.  However, specific system
architecture topologies, such as the ARINC 653 executives, can be modeled
through software and execution platform components.  AADL can be used to
describe a variety of hardware architectures and software infrastructures. 
Integration technologies can be used to implement a specified system.  The
standard specifies rules of conformance between AADL system architecture
specifications and actual system implementations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The standard was not designed around a particular set of tools.  It
is anticipated that systems and software tools will be provided to support the
use of AADL.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320278"></a><a name="_Toc169684054"></a><a name="_Toc167033703"></a><a name="_Toc168661821"></a><a name="_Toc86725635"></a><a name="_Toc86220672"></a><a name="_Toc86220212"></a><a name="_Toc86219827"></a><a name="_Toc86219722"></a><a name="_Toc79294955"></a><a name="_Toc27797734"></a><a name="_Toc27449562"></a><a name="_Toc8550325"></a><a name="_Toc2492727"></a><a name="_Toc535736301"></a><a name="_Toc535735981"></a><a name="_Toc535729796"></a><a name="_Toc532013533"></a><a name="_Toc430445121"><span lang="EN-US">1.1<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Purpose</span></a><span lang="EN-US">/Extent</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The purpose of AADL is to provide a standard and sufficiently
precise (machine-processable) way of modeling the architecture of an embedded,
real-time system, such as an avionics system or automotive control system, to
permit analysis of its properties, and to support the predictable integration
of its implementation.  Defining a standard way to describe system components,
interfaces, and assemblies of components facilitates the exchange of
engineering data between the multiple organizations and technical disciplines
that are invariably involved in an embedded real-time system development
effort.  A precise and machine-processable way to describe conceptual and
runtime architectures provides a framework for system modeling and analysis;
facilitates the automation of code generation, system build, and other
development activities; and significantly reduces design and implementation
defects.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL describes application software and execution platform
components of a system, and the way in which components are assembled to form a
complete system or subsystem.  The language addresses the needs of system
developers in that it can describe common functional (control and data flow)
interfacing idioms as well as performance-critical aspects relating to timing,
resource allocation, fault-tolerance, safety and certification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL describes functional interfaces and non-functional properties
of application software and execution platform components.  The language is not
suited for detailed design or implementation of components. AADL may be used in
conjunction with existing standard languages in these areas.  AADL describes
interfaces and properties of execution platform components including processor,
memory, communication channels, and devices interfacing with the external
environment.  Detailed designs for such hardware components may be specified by
associating source text written in a hardware description language such as VHDL</span><a href="#_ftn2" name="_ftnref2" title=""><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt;"><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt; color: black;">[2]</span></span></span></span></a><span lang="EN-US">.  AADL can describe interfaces and properties of application software
components implemented in source text, such as threads, processes, and runtime
configurations.  Detailed designs and implementations of algorithms for such
components may be specified by associating source text written in a software
programming language such as Ada or C, or domain-specific modeling languages
such as MatLab<sup>®</sup>/Simulink<sup>®</sup></span><a href="#_ftn3" name="_ftnref3" title=""><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt;"><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt; color: black;">[3]</span></span></span></span></a><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL describes how components are composed together and how they
interact to form complete system architectures.  Runtime semantics of these
components are specified in this standard.  Various mechanisms are available to
exchange control and data between components, including message passing, event
passing, synchronized access to shared components, and remote procedure calls. 
Thread scheduling protocols and timing requirements may be specified.  Dynamic
reconfiguration of the runtime architecture may be specified through
operational modes and mode transitions.  The language does not require the use
of any specific hardware architecture or any specific runtime software infrastructure.
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Rules of conformance are specified between specifications written in
AADL, source text and physical components described by those specifications,
and physical systems constructed from those specifications.  The AADL is not
intended to describe all possible aspects of any possible component or system;
selected syntactic and semantic requirements are imposed on components and
systems.  Many of the attributes of an AADL component are represented in an
AADL model as properties of that component.  The conformance rules of the
language include the characteristics described by these properties as well as
the syntactic and semantic requirements imposed on components and systems. 
Compliance between AADL specifications and items described by specifications is
determined through analysis, e.g., by tools for source text processing and
system integration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL can be used for multiple activities in multiple development
phases, beginning with preliminary system design.  The language can be used by
multiple tools to automate various levels of modeling, analysis,
implementation, integration, verification and certification.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320279"></a><a name="_Toc169684055"></a><a name="_Toc167033704"></a><a name="_Toc168661822"></a><a name="_Toc86725636"></a><a name="_Toc86220673"></a><a name="_Toc86220213"></a><a name="_Toc86219828"></a><a name="_Toc86219723"></a><a name="_Toc79294956"></a><a name="_Toc27797735"></a><a name="_Toc27449563"></a><a name="_Toc8550326"></a><a name="_Toc2492728"></a><a name="_Toc535736302"></a><a name="_Toc535735982"></a><a name="_Toc535729797"></a><a name="_Toc532013534"><span lang="EN-US">1.2<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Field of Application</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL was developed to model embedded systems that have challenging
resource (size, weight, power) constraints and strict real-time response
requirements.  Such systems should tolerate faults and may utilize specialized
hardware such as I/O devices.  These systems are often certified to high levels
of assurance.  Intended fields of application include avionics systems, automotive
systems, flight management systems, engine and power train control systems,
medical devices, industrial process control equipment, robotics, and space
applications.  AADL may be extended to support other applications as the need
arises.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320280"></a><a name="_Toc169684056"></a><a name="_Toc167033705"></a><a name="_Toc168661823"></a><a name="_Toc86725637"></a><a name="_Toc86220674"></a><a name="_Toc86220214"></a><a name="_Toc86219829"></a><a name="_Toc86219724"></a><a name="_Toc79294957"></a><a name="_Toc27797736"></a><a name="_Toc27449564"></a><a name="_Toc8550327"></a><a name="_Toc2492729"></a><a name="_Toc535736303"></a><a name="_Toc535735983"></a><a name="_Toc535729798"></a><a name="_Toc532013535"><span lang="EN-US">1.3<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Structure of Document</span></a></h2>

<h3 style="margin-bottom: 12pt; line-height: 12pt;"><a name="_Toc318320281"></a><a name="_Toc169684057"></a><a name="_Toc167033706"></a><a name="_Toc168661824"></a><a name="_Toc86725638"></a><a name="_Toc86220675"></a><a name="_Toc86220215"></a><a name="_Toc86219830"></a><a name="_Toc86219725"></a><a name="_Toc79294958"></a><a name="_Toc27797737"></a><a name="_Toc27449565"></a><a name="_Toc8550328"></a><a name="_Toc2492730"></a><a name="_Toc535736304"></a><a name="_Toc535735984"></a><a name="_Toc535729799"></a><a name="_Toc532013536"><span lang="EN-US">1.3.1<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">A Reader’s Guide</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">As necessary, the term AADL V2 will be used to refer to the revised
version of AADL defined in this document. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard consists of this core language document and a set
of annex documents of standardized extensions.  This core language document contains
a number of sections and appendices. The sections define the core AADL. The
appendices provide additional information, both normative and informative about
the core language. Annex documents introduce additional standardized properties
and possibly language extensions in the form of specialized notations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL concepts are introduced in section 3, Architecture Analysis
&amp; Design Language Summary. They are defined with full syntactic and
semantic descriptions as well as naming and legality rules in succeeding
sections. The vocabulary and symbols of AADL are defined in Section </span><span lang="EN-US">15</span><span lang="EN-US">.  </span><span lang="EN-US">Appendix B </span><span lang="EN-US">, </span><span lang="EN-US">Glossary</span><span lang="EN-US">, provides informative definitions
of terms used in this document. Other appendices include a </span><span lang="EN-US">Syntax Summary</span><span lang="EN-US"> and </span><span lang="EN-US">Predeclared Property Sets</span><span lang="EN-US">. The remainder of
this section introduces notations used in this document and discusses standard
conformance. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This core AADL document consists of the following: </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 2, References, provides normative and
applicable references as well as terms and definitions.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 3, Architecture Analysis &amp; Design
Language Summary, introduces and defines the concepts of the language.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 4, Components, Packages, and Annexes, defines
the common aspects of components, which are the design elements of AADL, as
well as component template parameterization. It also introduces the package,
which allows organization of the design elements in the design space.  This
section closes with a description of annex subclauses and libraries as
annex-specific notational extensions to the core AADL.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The next sections introduce the language elements for modeling
application and execution platform components in modeled systems or systems of
systems.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 5, Software Components, defines those
modeling elements of AADL that represent application system software
components, i.e., data, subprogram, subprogram group, thread, thread group, and
process.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 6, Execution Platform Components,
defines those modeling elements of AADL that model execution platform
components, i.e., processor, virtual processor, memory, bus, virtual bus, and
device.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 7, System Composition, defines system as
a compositional modeling element that combines execution platform and
application system software components. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section </span><span lang="EN-US">8</span><span lang="EN-US">, </span><span lang="EN-US">Features and Shared Access</span><span lang="EN-US">, defines the
features of components that are connection points with other components. These
consist of ports, subprogram parameters, provided and required access to data,
subprograms, and buses, as well as grouping of features into feature groups.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 9, </span><span lang="EN-US">Connections </span><span lang="EN-US">, defines the constructs to
express interaction between components in terms of connections between
component features.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section </span><span lang="EN-US">10</span><span lang="EN-US">, </span><span lang="EN-US">Flows</span><span lang="EN-US">, defines the constructs to express
flows through a sequence of components, and connections.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 11, Properties, defines the AADL concept
of properties including property sets, property value association, property
type, and property declaration.  Property associations and property expressions
are used to specify values.  Property set, property type, and property name
declarations are used to extend AADL with new properties.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 12, Modes, defines modes and mode
transitions to support modeling of operational modes with mode-specific system
configurations and property values.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section 13, Operational System, defines the
concepts of system instance and binding of application software to execution
platforms.  This section defines the execution semantics of the operational
system including the semantics of system-wide mode switches.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Section </span><span lang="EN-US">14</span><span lang="EN-US">, </span><span lang="EN-US">Layered System Architectures</span><span lang="EN-US">, defines
support for modeling layered architectures.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Section 15, Lexical Elements, defines the basic vocabulary of the
language.  As defined in this section, identifiers in AADL are case
insensitive.  Identifiers differing only in the use of corresponding upper and
lower case letters are considered as the same.  Similarly, reserved words in
AADL are case insensitive.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following Appendix sections complete the definition of the core
AADL.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix A </span><span lang="EN-US">Predeclared Property Sets</span><span lang="EN-US">, contains the standard
AADL set of predeclared properties, property types, and property constants.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix B </span><span lang="EN-US">Glossary</span><span lang="EN-US">, contains a glossary of terms.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix C </span><span lang="EN-US">Syntax Summary</span><span lang="EN-US">, contains a summary of the
syntax as defined in the sections of this document. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix D </span><span lang="EN-US"> </span><span lang="EN-US">Graphical AADL Notation</span><span lang="EN-US">, defines a graphical
representation of AADL.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix E </span><span lang="EN-US">AADL Meta Model and XML Specification</span><span lang="EN-US">,
defines an XML-based interchange format in form of an XMI meta model and an XML
schema.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix F </span><span lang="EN-US">Unified Modeling Language (UML) Profile</span><span lang="EN-US">,
defines a profile for UML that extends and tailors UML to support modeling in
terms of AADL concepts.  This profile is defined in the context of the Object
Management Group (OMG) Modeling and Analysis of Real-Time Embedded systems
(MARTE).</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix G </span><span lang="EN-US">Profiles and Extensions</span><span lang="EN-US">, contains profiles
and extensions that have been approved by the standards body.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The annex documents introduce additions and extensions to the core
AADL.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Annex Document A Code Generation, provides
guidance for automatic generation and integration of runtime systems and application
code in different implementation languages.  It defines a standardized set of
properties for recording mappings from the AADL model to source text and for
automatic code generation.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Annex Document B</span><span lang="EN-US"> </span><span lang="EN-US">Data Modeling</span><span lang="EN-US">, provides guidance on data
modeling and how to map relevant data modeling information into an AADL model
if desirable.  It defines a standardized set of properties and basic data types
in support of data modeling.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Annex Document C</span><span lang="EN-US"> </span><span lang="EN-US">Error Model</span><span lang="EN-US">, defines a standardized core
language extension in the form of a sublanguage notation and properties the
component to support annotating AADL models with safety-criticality and dependability
related information of a system.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Annex Document D</span><span lang="EN-US"> </span><span lang="EN-US">Behavior Model</span><span lang="EN-US">, defines a standardized core
language extension in the form of a sublanguage notation to specify the
behavior of AADL components as AADL model annotations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The core language and the annex documents are <i>normative</i>,
except that the material in each of the items listed below is informative: </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Text under a NOTES or Examples heading. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Each clause or subclause whose title starts with
the word “Example'' or “Examples''. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">All
implementations shall conform to the core language.  In addition, an
implementation may conform separately to one or more Annexes that represent
extensions to the core language. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
following appendices and annexes are informative and do not form a part of the
formal specification of AADL:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix B </span><span lang="EN-US">Glossary</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix C </span><span lang="EN-US">Syntax Summary</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Appendix G </span><span lang="EN-US">Profiles and Extensions</span></p>

<h3 style="margin-bottom: 12pt; line-height: 12pt;"><a name="_Toc318320282"></a><a name="_Toc169684058"></a><a name="_Toc167033707"></a><a name="_Toc168661825"></a><a name="_Toc86725639"></a><a name="_Toc86220676"></a><a name="_Toc86220216"></a><a name="_Toc86219831"></a><a name="_Toc86219726"></a><a name="_Toc79294959"></a><a name="_Toc27797738"></a><a name="_Toc27449566"></a><a name="_Toc8550329"></a><a name="_Toc2492731"></a><a name="_Toc535736305"></a><a name="_Toc535735985"></a><a name="_Toc535729800"></a><a name="_Toc532013537"><span lang="EN-US">1.3.2<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Structure of Clauses and Subclauses</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Each section of the core standard is divided into clauses and
subclauses that have a common structure.  Each section, clause, and subclause
first introduces its subject and then presents the remaining text in the
following format.  Not all headings are required in a particular clause or
subclause.  Headings will be centered and formatted as shown below.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">All paragraphs are numbered with numbering restarting with each
section.  Naming rules, legality rules, and consistency rules have their own
paragraph numbering also restarting with each section.  They can be identified
by section number and paragraph number.</span></p>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt; page-break-after: auto;"><span lang="EN-US">Syntax</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Syntax rules, concerned with the organization of the symbols in the
AADL expressions, are given in a variant of Backus-Naur-Form (BNF) that is
described in detail in Section 1.5. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm; page-break-after: auto;"><span lang="EN-US">Naming Rules</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Naming rules</span></i><span lang="EN-US"> define rules for names that
represent defining identifiers and references to previously defined
identifiers.  Each rule is labeled by (N#), where # is a natural number
restarting with 1 for each section.</span></p>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt; page-break-after: auto;"><span lang="EN-US">Legality Rules</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Legality rules</span></i><span lang="EN-US"> define semantic restrictions
on AADL specifications.  Legality rules must be validated by AADL processing
tools when a model is loaded into the tool.  Each rule is labeled by (L#),
where # is a natural number restarting with 1 for each section.</span></p>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt; page-break-after: auto;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Consistency rules</span></i><span lang="EN-US"> define consistency
restrictions on system instances.  A consistency rule must be validated by AADL
processing tools upon a user request or when an analysis method that relies on
the rule is invoked.  Each rule is labeled by (C#), where # is a natural number
restarting with 1 for each section.</span></p>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt; page-break-after: auto;"><span lang="EN-US">Standard
Properties</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Standard properties</span></i><span lang="EN-US"> define the
properties that are defined within this standard for various categories of
components.  The listed properties are fully described in </span><span lang="EN-US">Appendix A </span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm; page-break-after: auto;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Semantics</span></i><span lang="EN-US"> describes the static and
dynamic meanings of different AADL constructs with respect to the system they
model.  The semantics are concerned with the effects of the execution of the
constructs, not how they would be specifically executed in a computational
tool.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm; page-break-after: auto;"><span lang="EN-US">Runtime Support</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL concepts may require runtime support through an operating
system or other runtime system on a processor. Such service calls may be
programmed explicitly in the application source code, or may be part of a
runtime system generated from an AADL specification. The Code Generation Annex
provides guidance on the use of these runtime services by application code or
the runtime system.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm; page-break-after: auto;"><span lang="EN-US">Processing Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
specifications may be processed manually or by tools for analysis and
generation.  This section documents additional requirements and permissions for
determining compliance.  Providers of processing method implementations must
document a list of those capabilities they support and those they do not
support.</span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US" style="font-size: 10pt;">Notes emphasize
consequences of the rules described in the (sub)clause or elsewhere.  This
material is informative. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><em><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;; font-style: normal;">Examples
illustrate the possible forms of the constructs described.  This material is
informative. </span></em></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320283"></a><a name="_Toc169684059"></a><a name="_Toc167033708"></a><a name="_Toc168661826"></a><a name="_Toc86725640"></a><a name="_Toc86220677"></a><a name="_Toc86220217"></a><a name="_Toc86219832"></a><a name="_Toc86219727"></a><a name="_Toc79294960"><span lang="EN-US">1.4<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Error, Exception, Anomaly and Compliance</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL can be used to specify dependable systems.  A system can be
compliant with its specification and this standard even when that system
contains failed components that no longer satisfy their specifications.  This
section defines the terms fault, error, exception, anomaly and noncompliance
[IFIP WG10.4-1992]; and defines how those terms apply to AADL specifications,
physical components (implementations), models of components, and tools that
accept AADL specifications as inputs.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>fault</i> is defined to be an anomalous undesired change in
execution behavior, possibly resulting from an anomalous undesired change in
data being accessed by a thread or from violation of a </span><span lang="EN-US">compute
time</span><span lang="EN-US"> or </span><span lang="EN-US">deadline</span><span lang="EN-US"> constraint.  A fault in a physical component is a root cause that
may eventually lead to a component error or failure.  A fault is often a
specific event such as a transistor burning out or a programmer making a coding
mistake.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <i>error </i>in a physical component occurs when an existing
fault causes the internal state of the component to deviate from its nominal or
desired operation.  For example, a component error may occur when an add
instruction produces an incorrect result because a transistor in the adding
circuitry is faulty.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>failure</i> in a physical component occurs when an error
manifests itself at the component interface.  A component fails when it does
not perform its nominal function for the other parts of the system that depend
on that component for their nominal operation.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component failure may be a fault within a system that contains
that component.  Thus, the sequence of fault, error, failure may repeat itself
within a hierarchically structured system.  <i>Error propagation</i> occurs
when a failed component causes the containing system or another dependent
component to become erroneous.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component may persist in a faulty state for some period of time
before an error occurs. This is called <i>fault latency</i>.  A component may
persist in an erroneous state for some period of time before a failure occurs.
This is called <i>error latency</i>.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <i>exception</i> represents a kind of exceptional situation; it
may occur for an erroneous or failed component when that error or failure is
detected, either by the component itself or another component with which it
interfaces.  For example, a fault in a software component that eventually
results in a divide-by-zero may be detected by the processor component on which
it depends.  An exception is always associated with a specific component.  This
document defines a standard model for exceptions for certain kinds of components
(e.g., defines standard recovery sequences and standard exception events).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <i>anomaly</i> occurs when a component is in an erroneous or
failed state that does not result in a standard exception.  Undetected errors
may occur in systems.  A detected error may be handled using mechanisms other
than the standard exception mechanisms.  For example, an error may propagate to
multiple components before it is detected and mitigated.  This standard defines
nominal and exceptional behaviors for components.  Anomalies are any other
undefined erroneous component behaviors, which are nevertheless considered
compliant with this standard.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An AADL specification is <i>compliant</i> with the AADL core
language standard if it satisfies all the syntactic and legality rules defined in
Sections </span><span lang="EN-US">4</span><span lang="EN-US"> - </span><span lang="EN-US">15</span><span lang="EN-US">.  An AADL specification is compliant with
an AADL Annex standard if it satisfies all the syntactic and legality rules
defined in the respective normative Annex.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component or system is <i>compliant</i> with an AADL specification of that
component or system if the nominal and exceptional behaviors of that component
or system satisfy the applicable semantics of the AADL specification, as
defined by the semantic rules in this standard.  A component or system may be a
physical implementation (e.g., a piece of hardware), or may be a model (e.g., a
simulation or analytic model).  A model component or system may exhibit only
partial semantics (e.g., a schedulability model only exhibits temporal
semantics).  Physical components and systems must exhibit all specified
semantics, except as permitted by this standard.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Noncompliance</span></i><span lang="EN-US"> of a component with its specification is a kind of design fault.
This may be handled by run-time fault-tolerance in an implemented actual system. 
A developer is permitted to classify such components as anomalous rather than
noncompliant.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
tool that operates on AADL specifications is <i>compliant</i> with the core
language standard if the tool checks for compliance of input specifications
with the syntactic and legality rules defined herein, except where explicit
permission is given to omit a check; and if all physical or model components or
systems generated by the tool are compliant with the specifications used to
generate those components or systems.  The AADL standard allows profiles of
language subsets to be defined and requires a minimum subset of the language to
be supported (see </span><span lang="EN-US">Appendix G </span><span lang="EN-US">). 
A tool must clearly specify any portion of the language not supported and warn
the user if a specification contains unsupported language constructs, when
appropriate.  A tool is compliant with the XMI interchange format if it
supports saving and reading of AADL model in the XMI interchange format.  A
tool is compliant with a language extension annex if the tool checks for
compliance of input specifications with the syntactic and legality rules
defined in the respective annex document.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Compliance
of an AADL specification with the syntactic and legality rules can be
automatically checked, with the exception of a few legality rules that are not
in general tractably checkable for all specifications.  Compliance of a
component or system with its specification, and compliance of a tool with this
standard, cannot in general be fully automatically checked.  A verification
process that assures compliance to the degree required for a particular purpose
must be used to perform the latter two kinds of compliance checking.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320284"></a><a name="_Toc169684060"></a><a name="_Toc167033709"></a><a name="_Toc168661827"></a><a name="_Toc86725641"></a><a name="_Toc86220678"></a><a name="_Toc86220218"></a><a name="_Toc86219833"></a><a name="_Toc86219728"></a><a name="_Toc79294961"></a><a name="_Toc27797740"></a><a name="_Toc27449568"></a><a name="_Toc8550331"></a><a name="_Ref3691600"></a><a name="_Toc2492733"></a><a name="_Toc535736307"></a><a name="_Toc535735987"></a><a name="_Toc535729802"></a><a name="_Toc532013539"></a><a name="_Toc66980913"></a><span lang="EN-US">1.5<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Method of Description and Syntax Notation</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The language is described by means of a context-free syntax together
with context-dependent requirements expressed by narrative rules.  The meaning
of a construct in the language is defined by means of narrative rules.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The context-free syntax of the language is described using the
variant Backus-Naur Form (BNF) [BNF 1960] as defined herein.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Lower case words in </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">courier new </span><span lang="EN-US">font,
some containing embedded underlines, are used to denote syntactic categories. A
syntactic category is a nonterminal in the grammar. For example: </span></p>

<pre style="margin-bottom: 12pt; page-break-after: avoid;"><span lang="EN-US">        component_feature_list</span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Boldface words are used to denote reserved
words, for example: </span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        <b>implementation</b></span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A vertical line separates alternative items.</span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        software_category ::= <b>thread </b>| <b>process</b></span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Square brackets enclose optional items.  Thus
the two following rules are equivalent. </span></p>

<pre style="margin-bottom: 12pt; text-align: justify; vertical-align: baseline;"><span lang="EN-US">        property_association ::= property_name <b>=&gt; </b>[ <b>constant</b> ] expression </span></pre><pre style="margin-bottom: 12pt; text-align: justify; vertical-align: baseline;"><span lang="EN-US">        property_association ::= </span></pre><pre style="margin-bottom: 12pt; text-align: justify; vertical-align: baseline;"><span lang="EN-US">            property_name <b>=&gt;</b> expression </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">          | property_name <b>=&gt;</b> <b>constant</b> expression </span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Curly brackets with a * symbol enclose a
repeated item.  The item may appear zero or more times; the repetitions occur
from left to right as with an equivalent left-recursive rule.  Thus the two
following rules are equivalent. </span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        declaration_list ::= declaration { declaration }<sup>*</sup></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">        declaration_list ::= declaration </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">                         | declaration declaration_list</span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Curly brackets with a + symbol specify a repeated
item with one or more occurrences. Thus the two following rules are equivalent.
</span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">       declaration_list ::= { declaration }<sup>+</sup></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">       declaration_list ::= declaration { declaration }<sup>*</sup> </span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Parentheses (round brackets) enclose several
items to group terms. This capability reduces the number of extra rules to be
introduced.  Thus, the first rule is equivalent with the latter two.</span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        property_association ::= <b>identifier</b> ( <b>=&gt;</b>|<b> +=&gt;</b>) property_expression </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">        property_association ::= <b>identifier</b> assign property_expression</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">        assign ::= <b>=&gt; </b>|<b> +=&gt;</b></span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Square brackets, curly brackets, and parentheses
may appear as delimiters in the language as well as meta-characters in the
grammar.  Square, curly, and parentheses that are delimiters in the language
will be written in bold face in grammar rules, for example:</span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        property_association_list ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">            <b>{ </b>property_association { <b>;</b> property_association }<sup>* </sup> <b>}</b></span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The syntax rules may preface the name of a
nonterminal with an italicized name to add semantic information.  These
italicized prefaces are to be treated as comments and not a part of the grammar
definition.  Thus the two following rules are equivalent.</span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        component ::= identifier : component_classifier ;</span></pre><pre style="margin-bottom: 12pt;"><span lang="FR">        component ::= <i>component</i>_identifier : component_classifier ;</span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A construct is a piece of text (explicit or
implicit) that is an instance of a syntactic category, for example:</span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US">        My_GPS: <b>thread</b> GPS.dualmode ;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The syntax description has been developed with an emphasis on an
abstract syntax representation to provide clarity to the reader.  </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc27797741"></a><a name="_Toc27449569"></a><a name="_Toc8550332"></a><a name="_Toc2492734"></a><a name="_Toc535736308"></a><a name="_Toc535735988"></a><a name="_Toc535729803"></a><a name="_Toc532013540"></a><a name="_Ref521816596"></a><a name="_Toc318320285"></a><a name="_Toc169684061"></a><a name="_Toc167033710"></a><a name="_Toc168661828"></a><a name="_Toc86725642"></a><a name="_Toc86220679"></a><a name="_Toc86220219"></a><a name="_Toc86219834"></a><a name="_Toc86219729"></a><a name="_Toc79294962"></a><a name="_Ref62113318"><span lang="EN-US">1.6<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Method of Description for Discrete and Temporal
Semantics</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Discrete and temporal semantics of the language are defined in
sections that define AADL concepts using a concurrent hierarchical hybrid
automata notation, together with additional narrative rules about those diagrams. 
This notation consists of a hierarchical finite state machine notation,
augmented with real-valued variables to denote time and time-varying values,
and with edge guard and state invariant predicates over those variables to
define temporal constraints on when discrete state transitions may occur.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A semantic diagram defines the nominal scheduling and
reconfiguration behavior for a modeled system as well as scheduling and
reconfiguration behavior when failures are detected.  A physical realization of
a specification may violate this definition, for example due to runtime
errors.  A violation of the defined semantics is called an anomalous behavior. 
Certain kinds of anomalous behaviors are permitted by this standard.  Legal
anomalous behaviors are defined in the narrative rules.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Semantics for individual components are defined using a sequential
hierarchical hybrid automaton.  System semantics are defined as the concurrent
composition of the hybrid automata of the system components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Ovals labeled with lower case phrases are used to denote discrete
states.  A component may remain in one of its discrete states for an interval
of time whose duration may be zero or greater.  Every semantic automaton for a
component has a unique initial discrete state, indicated by a heavy border. 
For example,</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="501" height="65" alt="hyb1" id="Picture 1" src="imgs/image003.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Directed edges labeled with one or more comma-separated, lower case
phrases are used to denote possible transitions between the discrete states of
a component.  Transitions over an edge are logically instantaneous, i.e., the
time interval in which a transition from a discrete state (called the source
discrete state) to a discrete state (called the destination discrete state) has
duration 0.  For example,</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="501" height="56" alt="hyb2" id="Picture 2" src="imgs/image004.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Permissions that allow a runtime implementation of a transition to
occur over an interval of time are expressed as narrative rules. However, all
implemented transitions must be atomic with respect to each other, all
observable serializations must be admitted by the logical semantics, and all
temporal predicates as defined in subsequent paragraphs must be satisfied. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Hybrid automaton can have hierarchical states. Oblong boxes labeled
with lower case phrases denote abstract discrete states, for which another
hybrid semantics diagram with an identically labeled oblong box for which
another hybrid semantics diagram with an identically labeled oblong box
specifies the discrete states and edges that make up that abstract discrete
state.  For example,</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="535" height="200" alt="hyb3" id="Picture 3" src="imgs/image005.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Abstract discrete states are reusable, i.e., a hybrid semantics
diagram can contain several oblong boxes with the same label  An abstract state
label or an edge label may include italicized letters that are not a part of
the formal name but are used to distinguish multiple instances.  For example,
both abstract discrete states below will be defined by a single diagram labeled
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">executing</span><span lang="EN-US">.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;"><img width="373" height="243" alt="hyb4" src="imgs/image006.png" /></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If there is an external edge that enters or exits an abstract discrete
state in the defining diagram for, and there are no edges within that
definition that connect any internal discrete state with that external edge,
then there implicitly exist edges from every contained discrete state in the
defining diagram to or from that external edge.  In that case, a transition
into or out of an abstract discrete state represents transitions into or out any
of its internal states.  For example, in the following diagram there is an
implicitly defined </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">halt</span><span lang="EN-US"> edge out of both the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ready</span><span lang="EN-US"> and the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">running</span><span lang="EN-US"> discrete
states.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="333" height="210" alt="hyb5" id="Picture 5" src="imgs/image007.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Real-valued
variables whose values are time-varying may appear in expressions that annotate
discrete states and edges of hybrid semantic diagrams.  Specific forms of
annotation are defined in subsequent paragraphs.  The set of real-valued
variables associated with a semantic diagram are those that appear in any
expression in that diagram, or in any of the defining diagrams for abstract
discrete states that appear in that diagram.  Real-valued time-varying
variables will be named using an italicized front.  The initial values for the
real-valued time-varying variables of a hybrid semantic diagram are undefined
whenever they are not explicitly defined in narrative rules.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
addition to standard rational literals and arithmetic operators, expressions
may also contain functions of discrete variables.  The names of functions and
discrete variables will begin with upper case letters.  The semantics for
function symbols and discrete variables will be defined using narrative rules. 
For example, the subexpression </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Max(Compute_Time)</span><span lang="EN-US"> may appear in a semantic diagram, together with a narrative rule
stating that the value is the maximum value of a range-valued component
property named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Time</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Edges
may be annotated with assignments of values to variables associated with the
semantic diagram.  When a transition occurs over an edge, the values of the
variables are set to the assigned values.  For example, in the following
diagram, the values of the variables <i>c</i> and <i>t</i> are set to 0 when
the component transitions into the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ready</span><span lang="EN-US"> discrete state.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="145" height="109" alt="hyb6" id="Picture 6" src="imgs/image008.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Discrete
states may be annotated with expressions that define the possible rates of
change for real-valued variables during the duration of time a component is in
that discrete state.  The rate of a variable is denoted using the symbol </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">δ</span><span lang="EN-US">,
for example </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">δ</span><i><span lang="EN-US">x</span></i><span lang="EN-US">=[0,1] (the rate of the variable <i>x</i>
may be any real value in the range of 0 to 1).  If, rates of change are not
explicitly shown within a discrete state for a time-varying variable, then the
rate of change of that variable in that state is defined to be 1.  For example,
in the following diagram the rate of change for the variable <i>c</i> is 1
while the component is in the discrete state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">running</span><span lang="EN-US">, but its
value remains fixed while the component is in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ready</span><span lang="EN-US"> state, equal to
the value that existed when the component transitioned into the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ready</span><span lang="EN-US">
state.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="171" height="143" alt="hyb7" id="Picture 7" src="imgs/image009.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
discrete state may be annotated with Boolean-valued expressions called
invariants of that discrete state.  In this standard, all semantic diagrams are
defined so that the values of the variables will always satisfy the invariants
of a discrete state for every possible transition into that discrete state.  A
transition must occur out of a discrete state before the values of any
time-varying variables cause any invariant of that discrete state to become
false.  Invariants are used to define bounds on the duration of time that a
component can remain in a discrete state.  For example, in the following
diagram the component must transition out of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">running</span><span lang="EN-US"> state before
the value of the variable <i>c</i> exceeds 10.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="158" height="140" alt="hyb8" id="Picture 8" src="imgs/image010.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
edge may be annotated with Boolean-valued expressions called guards of that
edge.  A transition may occur from a source discrete state to a destination
discrete state only when the values of the variables satisfy all guards for an
edge between those discrete states. A guard on an edge is evaluated before any
assignments on that edge are performed.  For example, in the following diagram
the component may only </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">complete</span><span lang="EN-US"> when the value of the variable <i>c</i> is 5 or greater (but must </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">complete</span><span lang="EN-US">
before <i>c</i> exceeds 10 because of the invariant).</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="137" height="127" alt="hyb9" id="Picture 9" src="imgs/image011.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
sequential semantic automaton defines semantics for a single component. A
system may contain multiple components.  The semantics of a system are defined
to be the concurrent composition of the sequential semantic automata for each
component.  Except as described below, every component is represented by a copy
of its defined semantic automaton. All discrete states and labels, all edges
and labels, and all variables, are local to a component. The set of discrete
states of the system is the cross-product of the sets of discrete states for
each of its cross product components.  The set of transitions that may occur
for a system at any point in time is the union of the transitions that may
occur at that instant for any of its components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
an edge label appears in boldface, then a transition may occur over that edge
only when a transition occurs over all edges having that same boldface label
within the synchronization scope for that label. The synchronization scope for
a boldface label is indicated in parentheses.  For example, if a transition
occurs over an edge having a boldface label with a synchronization scope of
process, then every thread contained in that process in which that boldface
label appears anywhere in its hybrid semantic diagram must transition over some
edge having that label. That is, transitions over edges with boldface labels
occur synchronously with all similarly labeled edge transitions in all
components associated with the component with the specified synchronization
scope as described in the narrative.  Furthermore, every component in that
synchronization scope that might participate in such a transition in any of its
discrete states must be in one of those discrete states and participate in that
transition.  For example, when the synchronization scope for the edge label <b>s</b>
is the same for all three of the following concurrent semantic automata, a
transition over the edge labeled <b>s</b> may only occur when all three
components are in their discrete states labeled </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">a,</span><span lang="EN-US"> and all three
components simultaneously transition to their discrete states labeled </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c</span><span lang="EN-US">.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="526" height="110" alt="hyb10" id="Picture 10" src="imgs/image012.png" /></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If a
variable appears in boldface, then there is a single instance of that variable
that is shared by all components in the synchronization scope of the variable. 
The synchronization scope for a boldface variable will be defined in narrative
rules.</span></p>

<h1><a name="_Toc318320286"></a><a name="_Toc169684062"></a><a name="_Toc167033711"></a><a name="_Toc168661829"></a><a name="_Toc86725643"></a><a name="_Toc86220680"></a><a name="_Toc86220142"></a><a name="_Toc86219835"></a><a name="_Toc86219730"></a><a name="_Toc79294963"></a><a name="_Ref37122961"></a><a name="_Ref37122960"><span lang="EN-US">2<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">References</span></a></h1>

<h2><a name="_Toc318320287"></a><a name="_Toc169684063"></a><a name="_Toc167033712"></a><a name="_Toc168661830"></a><a name="_Toc86725644"></a><a name="_Toc86220681"></a><a name="_Toc86220220"></a><a name="_Toc86219836"></a><a name="_Toc86219731"></a><a name="_Toc79294964"></a><a name="_Toc27797742"></a><a name="_Toc27449570"></a><a name="_Toc8550333"></a><a name="_Toc2492735"></a><a name="_Toc535736309"></a><a name="_Toc535735989"></a><a name="_Toc535729804"></a><a name="_Toc532013541"><span lang="EN-US">2.1<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Normative References</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following normative documents contain provisions that, through
reference in this text, constitute provisions of this standard.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">IEEE/ANSI 610.12-1990 [IEEE/ANSI 610.12-1990], IEEE Standard
Glossary of Software Engineering Terminology.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">ISO/IEC 9945-1:1996 [IEEE/ANSI Std 1003.1, 1996 Edition],<b> </b>Information
Technology – Portable Operating System Interface (POSIX) – Part 1: System
Application Program Interface (API) [C Language].</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">ISO/IEC 14519:1999 [IEEE/ANSI Std 1003.5b-1999], Information
Technology – POSIX Ada Language Interfaces – Binding for System Application
Program Interface (API) – Real-time Extensions. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">ISO/IEC 8652:2007 Ed.3, Information Technology – Programming
Languages – Ada Reference Manual.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">ISO/IEC 9899:1999, Information Technology – Programming Languages –
C.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Unified Modeling Language Specification [UML 2007, version 2.1.1], August
2007, version 2.1.1.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">SAE AS-5506:2004, Architecture Analysis &amp; Design Language
(AADL), November 2004.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">SAE AS-5506/1:2006, Architecture Analysis &amp; Design Language
(AADL) Annex Volume 1, June 2006.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc27797744"></a><a name="_Toc27449572"></a><a name="_Toc8550335"></a><a name="_Toc2492737"></a><a name="_Toc535736311"></a><a name="_Toc535735991"></a><a name="_Toc535729806"></a><a name="_Toc532013543"></a><a name="_Toc318320288"></a><a name="_Toc169684064"></a><a name="_Toc167033713"></a><a name="_Toc168661831"></a><a name="_Toc86725645"></a><a name="_Toc86220682"></a><a name="_Toc86220221"></a><a name="_Toc86219837"></a><a name="_Toc86219732"></a><a name="_Toc79294966"></a><a name="_Toc75448388"></a><a name="_Toc75533781"></a><a name="_Toc76274878"></a><a name="_Toc76276857"></a><a name="_Toc76276985"></a><a name="_Toc76277234"></a><a name="_Toc76278273"></a><a name="_Toc76278385"></a><a name="_Toc76279309"></a><a name="_Toc76373996"></a><a name="_Toc77408937"></a><a name="_Toc77657481"></a><a name="_Toc79227414"></a><a name="_Toc79244045"></a><a name="_Toc79245362"></a><a name="_Toc79294965"></a><span lang="EN-US">2.2<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Informative References</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following informative references contain background information
about the items with the citation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">[BNF 1960] NAUR, Peter (ed.), "Revised Report on the
Algorithmic Language ALGOL 60," <i>Communications of the ACM</i>, Vol. 3
No. 5, pp. 299-314, May 1960.</span></p>

<p class="NumberedParagraph"><i><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span></i><span lang="EN-US">[IFIP WG10.4-1992] IFIP WG10.4 on Dependable Computing and Fault
Tolerance, 1992, J.-C. Laprie, editor, “Dependability: Basic Concepts and
Terminology,” <i>Dependable Computing and Fault Tolerance</i>, volume 5,
Springer-Verlag, Wien, New York, 1992.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">[Henz 96] “Theory of Hybrid Automata”, Thomas A. Henzinger,
Electrical Engineering and Computer Science, University of California at
Berkley, <i>Proceedings of the 11th Annual Symposium on Logic in Computer
Science</i> (LICS), IEEE Computer Society Press, 1996, pp. 278-292</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320289"></a><a name="_Toc169684065"></a><a name="_Toc167033714"></a><a name="_Toc168661832"></a><a name="_Toc86725646"></a><a name="_Toc86220683"></a><a name="_Toc86220222"></a><a name="_Toc86219838"></a><a name="_Toc86219733"></a><a name="_Toc79294967"><span lang="EN-US">2.3<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Terms and Definitions</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Terms are introduced throughout this standard, indicated by <i>italic</i>
type.  Informational definitions of terms are given in Appendix B , Glossary. 
Definitions of terms used from other standards, such as the IEEE <i>Standard
Glossary of Software Engineering Terminology</i> [IEEE Std. 610.12-1990],
ISO/IEC 9945-1:1996 [IEEE/ANSI Std 1003.1, 1996 Edition],<b> </b><i>Information
Technology – Portable Operating System Interface (POSIX)</i></span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">, </span><span lang="EN-US">or
IFIP WG10.4 <i>Dependability: Basic Concepts and Terminology </i>[IFIP
WG10.4-1992], are so marked.  Terms not defined in this standard are to be
interpreted according to the Webster's Third New International Dictionary of the
English Language.  Terms explicitly defined in this standard are not to be
presumed to refer implicitly to similar terms defined elsewhere.  A full
description of the syntax and semantics of the concept represented by the terms
is found in the respective document sections, clauses, and subclauses.</span></p>

<h1 style="margin-left: 22.5pt; text-indent: -22.5pt;"><a name="_Toc504445221"></a><a name="_Ref503900519"></a><a name="_Toc318320290"></a><a name="_Toc169684066"></a><a name="_Toc167033715"></a><a name="_Toc168661833"></a><a name="_Toc86725647"></a><a name="_Toc86220684"></a><a name="_Toc86220143"></a><a name="_Toc86219839"></a><a name="_Toc86219734"></a><a name="_Toc79294968"></a><a name="_Ref57450388"></a><a name="_Ref57450383"><span lang="EN-US">3<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">Architecture Analysis &amp; Design Language
Summary</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This section provides an informative overview of AADL concepts,
structure, and use.  In this section the first appearance of a term that has a
specific meaning in this standard will be italicized.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An AADL specification represent s a component model of a computer
system runtime architecture that consists of  the <i>application software
(typically embedded, safety-critical, mission-critical, or
performance-critical)</i>, and the <i>execution platform</i>, i.e., the
computing hardware and the physical system.  A <i>component</i> represents a
part of a system and interacts with other components. A <i>system</i> is
hierarchically composed of interacting components. An AADL specification
consists of <i>package</i> declarations and <i>property set</i> declarations. 
AADL packages contain component specifications, i.e., AADL <i>component types</i>
and <i>component implementations</i>, as well as <i>feature group types</i>,
and <i>annex libraries</i>.  This standard defines <i>data</i>, <i>subprogram</i>,
<i>subprogram group</i>, <i>thread</i>, <i>thread group</i>, and <i>process </i>as
application software component categories, <i>memory</i>, <i>bus</i>, <i>virtual
bus</i>, <i>processor</i>, <i>virtual processor</i>, and <i>device</i> as
execution platform component categories, and <i>system </i>and <i>abstract</i>
as general compositional components.  <i>Abstract</i> is a generic component category
that can be refined into any of the other categories.  They form the core of
the AADL modeling vocabulary.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>component type</i> specifies an external interface that other
components can operate against in terms of <i>features</i>, i.e., interaction
points with other components,<i> flow specifications</i> from component inputs
to component outputs,<i> modes</i> as operational states,<i> </i>and<i>
properties</i> to characterize a component.  Implementations of the component
are required to satisfy this specification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="color: windowtext;">A <i>feature</i> describes an interface of
a component through which control and data may be provided to or required from</span><span lang="EN-US"> other components.  Features can be <i>ports</i> to support
directional flow of control and data, <i>subprograms</i> to represent procedure
calls, and shared <i>access</i> to data, subprograms, subprogram groups, and
bus components.    Features can be grouped together into <i>feature groups</i>.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>component implementation</i> specifies a realization of the
component in terms of <i>subcomponents</i>, <i>connections</i> between the
features of those subcomponents, <i>flows</i> across a sequence of
subcomponents,<i> </i>modes<i>,</i> and properties.  AADL allows multiple
component implementations to associated with a component type to represent
component variants. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>subcomponent</i> declares a component instance that is
contained in another component by naming its <i>component classifier</i>, i.e.,
a component type or component implementation.  The component hierarchy of a
system instance is determined by recursively instantiating the subcomponents of
a top-level system. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Any namable model element, e.g., components, features, modes,
connections, flows, and subprogram calls, can have properties. Properties are
used to represent attributes and other characteristics, such as the period and
deadline of threads.  When properties are associated with declarations of
component types, component implementations, features, subcomponents,
connections, flows, and modes, they apply to all respective instances within a
system instance.  The AADL also supports the specification of instance specific
values of any unit in the containment hierarchy of a system instance.  AADL
tools may record these values for use in the analysis of the system instance or
for use in the construction of new system instances.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Property sets </span></i><span lang="EN-US">are used to define <i>properties</i>,
<i>property constants</i>, and <i>property types</i>. This standard defines a
set of predeclared properties and property types.  Additional properties and
property types to support new forms of system analysis can be introduced through
property sets.  For example, a predeclared property is used to specify the
period of a thread. An example of a user-defined property in a property set is
a security level property. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL packages provide a library-like structure for organizing component
classifiers, and feature group types, and annex libraries into separate
namespaces, similar to Java packages that are used to organize Java class
declarations.  Packages can have a nested naming hierarchy, but this hierarchy
does not impose any restrictions on whether a package is accessible by other
packages.  A component classifier in a package is referenced by qualifying its
name with the package name.  Only those classifiers that have been placed in
the <i>public</i> section of a package are accessible to other packages. 
Furthermore, the packages being named in the reference must be listed in the <i>with</i>
clause of the referencing package, i.e., a <i>with </i>clause limits the use of
other packages in a given package. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
support the specification of partial models such as models of the application
software only, the hardware only, specification of a top-level architecture in
terms of its subsystems without their realizations, and specification of component
templates.  Component templates are incompletely specified component
classifiers that may be parameterized by component classifier, feature, and
feature group type <i>prototypes</i>. These component templates may be later
refined through component classifier <i>extension</i> declarations.  Component classifier
extensions can complete the component specification by supplying an actual for
a prototype and by completing partial declaration through <i>refinement</i>.
Component extension declarations can also specify new component classifiers by
adding features, subcomponents, connections, flows, and properties.  This
allows conceptual and reference architectures to be specified and to be refined
into fully specified runtime architectures, and partial system specifications
to evolve into fully specified and configured systems including the deployment
of application software on the computing hardware</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Application
software components model</span><i><span lang="EN-US"> source text, virtual
address spaces,</span></i><span lang="EN-US"> <i>concurrent tasks</i> and their
interactions<i>.</i>  <i>Source text</i> can be written in a programming
language such as Ada, C, or Java, or domain-specific modeling languages such as
Simulink, SDL, ESTEREL, LUSTRE, and UML, for which executable code may be
generated.  The source text modeled by a software component may represent a
partial application program or model (e.g., they form one or more independent
compilation units as defined by the applicable programming language standard). 
Rules and permissions governing the mapping between AADL specification and
source text depend on the applicable programming or modeling language
standard.  Predeclared component properties identify the source text container
and the mapping of AADL concepts to source text declarations and statements. 
These properties also specify memory and execution times requirements and other
known characteristics of the component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>data</i> components represent static data in source text.  These data
components can be accessed by one or more threads and processes; they do so by
indicating that they require access to the external data component.  Concurrent
access to data is managed by the appropriate concurrency control protocol as
specified by a property.  Realizations of such protocols can be documented through
an appropriate annex declaration, for example, expressed in a Behavior Annex
subclause (see </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">).
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
types in the source text are modeled by the declarations: data component type
and data component implementation.  Thus, a data component classifier
represents the data type of data components, ports, and subprogram parameters.
The Data Modeling Annex (see </span><span lang="EN-US">Annex Document B</span><span lang="EN-US">) provides guidance on how to approach data modeling with AADL.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The <i>subprogram</i>
component models source text that is executed sequentially.  Subprograms are
callable from within threads and subprograms.  Subprograms may require access
to data components and may contain data subcomponents to represent local
variables.  Subprogram groups represent source code libraries.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>thread</i> components model concurrent tasks or active objects, i.e.,
concurrent logical threads.  Each logical thread represents an execution
sequence through source text (or more exactly, through binary images produced
from the compilation, linking and loading of source text).  A scheduler manages
the execution of a thread.  Logical threads may be executed by separate
operating system (OS) threads, or they may be combined into a single operating
system thread.  The dynamic semantics for a thread are defined in this standard
using hybrid automata.  The threads can be in states such as suspended, ready,
and running.  State transitions occur as a result of dispatch requests, faults,
and runtime service calls.  They can also occur if time constraints are
exceeded.  Error detection and recovery semantics are specified.  Dispatch
semantics are given for standard dispatch protocols such as periodic, sporadic,
aperiodic, timed, hybrid, and background threads. Additional dispatch protocols
may be defined.  Threads can contain subprogram and data components, and
provide or require access to data components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>thread groups</i> support structural grouping of threads within a process. 
A thread group may contain data, thread, and thread group subcomponents.  A
thread group may require and provide access to data components.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>process</i> components model space partitions in terms of virtual address
spaces containing source text that forms complete programs as defined in the
applicable programming language standard.  Access protection of the virtual
address space is by default enforced at runtime, but can be disabled if
specified by the property </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Runtime_Protection</span><span lang="EN-US">. The binary image produced by compiling and linking this source
text must execute properly when loaded into a unique virtual address space.  As
processes do not represent concurrent tasks, they must contain at least one
thread.  Processes can contain thread groups, threads, and data components, and
can access or share data components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Execution
platform components represent computing hardware components that are capable of
scheduling threads, of enforcing specified address space protection at runtime,
of storing source text code and data and of performing communication for
application system connections. The device component represents elements of the
physical environment that an embedded system interacts with, such as sensors,
actuators, or engines. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>processor</i> components are an abstraction of hardware and software that is
responsible for scheduling and executing threads. In other words, a processor
may include functionality provided by operating systems.  Alternatively,
operating systems can be modeled like application components.  Processors can
contain memory and require access to buses.  Processors can support different
scheduling protocols. Threads are bound to processors for scheduling and
execution.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>virtual processors</i> represent virtual machines or hierarchical
schedulers. Threads can be bound to them.  Virtual processors can be used in
two ways.  Processors and virtual processors can be subdivided into virtual
processors by declaring virtual processor subcomponents. Virtual processors can
also be declared separately and explicitly bound to processors and virtual
processors. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>memory</i> components model randomly accessible physical storage such as RAM
or ROM.  Memories have properties such as the number and size of addressable
storage locations.  Binary images of source text are bound to memory. Memory
can contain nested memory components. Memory components require access to
buses.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>bus</i> components model communication channels that can exchange control
and data between processors, memories, and devices.  A bus is typically
hardware that supports specific communication protocols, possibly implemented
through software.  Processors, memories, and devices communicate by accessing a
shared bus.  Buses can be directly connected to other buses.  Logical
connections between threads that are bound to different processors transmit
their information across buses that provide the physical connection between the
processors. Buses can require access to other buses.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>virtual bus</i> components represent virtual channels or communication
protocols that perform transmission within processors or across buses.  Virtual
buses can be subcomponents of buses and virtual buses, or virtual buses can be
declared separately and explicitly bound to buses and virtual buses.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>device</i> components model physical entities in the external environment,
e.g., a GPS system, or  entities that interface with an external environment, e.g.,
sensors and actuators as interface between a physical plant and a control
system. Devices may represent a physical entity of the modeled system or its
(simulated) software equivalent.  Examples of devices are timers, which exhibit
simple behavior, or a camera or GPS, which exhibit complex behavior.  Devices
are logically connected to application software components and physically
connected to processors via buses. They cannot store nor execute external application
software source text themselves, but may include driver software executed on a
connected processor.  A device requires access to buses.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>system</i> components model hierarchical compositions of software and
execution platform components.  A system may directly contain data, subprogram,
subprogram groups, process, memory, processor, virtual processor, bus, virtual
bus, device, system as well as abstract subcomponents.  Thread and thread group
subcomponents must be declared in processes and are indirectly part of a system
that contains these processes.  A system component may require and provide
access to data and bus components.  Execution platform component can be system
components in their own right and be modeled using system implementations.  For
example, a system implementation can be associated with a device that models a
camera.  This system implementation describes the internal of the camera in
terms of the CCD sensor a device, a DSP processor, a general purpose processor as
well a software that implements the image processing and download capability of
the camera.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
<i>modes</i> represent the operational states of software, execution platform,
and compositional components in the modeled physical system.  A component can
have mode-specific property values. A component can also have mode-specific
configurations of different subsets of subcomponents and connections.  In other
words, a mode change can change the set of active components and connections.
Mode transitions model dynamic operational behavior that represents switching
between configurations and changes in component-internal characteristics, such
as conditional execution source text sequences or operational states of a
device, that are reflected in property values. Other examples of mode-specific
property values include the period or the worst-case execution time of a
thread.  A change in operating mode can have the effect of activating and
deactivating threads for execution and changing the pattern of connections
between threads.  A mode subclause in a component implementation specifies the
mode states and mode change behavior in terms of transitions; it specifies the
events as transition triggers. Subcomponent and connection declarations as well
as property associations declare their applicability (participation) in
specific modes.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">This
standard defines several categories of features: <i>data port</i>, <i>event
port</i>, <i>event data port</i>, <i>feature group</i>, <i>subprogram parameter</i>,
and <i>provided</i> and <i>required</i> <i>access</i> to data, subprograms, and
buses.  Data ports represent connection points for transfer of state data such
as sensor data.  Event ports represent connection points for transfer of
control through raised events that can trigger thread dispatch or mode
transition. Event data ports represent connection points for transfer of events
with data, i.e., messages that may be queued.  Feature groups support grouping
of ports and other features, such that they can be connected to other
components through a single connection.  Provided subprogram access features
represent entrypoints to code sequences in source text that is associated with
a data type or a thread that can be called locally or remotely.  Subprogram
parameters represent in and out parameters of a subprogram. Data component
access represents provided and required access to shared data.  Bus component
access represents provided and required access to buses for processors, memory,
and devices.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL <i>connections</i> specify interaction between components at
runtime.   A semantic connection is represented by a set of one or more
connection declarations that follow the component hierarchy from the ultimate
connection source to the ultimate connection destination.  For example, in Figure
1 there is a connection declaration from a thread out port in Thread1 to a
containing process out port in Process3.  This connection is continued with a
connection declaration within System1 from Process3’s out port to Process4’s in
port.  The connection declaration continues within Process4 to the thread in
port contained in Thread2. Collectively, this sequence of connections defines a
single semantic connection between Thread1 and Thread2.  </span><span lang="EN-US" style="color: windowtext;">Threads, processes, systems, and ports are
shown in graphical AADL notation.  For a full description of the graphical AADL
notation see </span><span lang="EN-US" style="color: windowtext;">Appendix D </span><span lang="EN-US" style="color: windowtext;">.</span></p>

<p align="center" class="MsoNormal" style="text-align: center; page-break-after: avoid;"><img width="451" height="170" alt="figure1" id="Picture 11" src="imgs/image013.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320410"></a><a name="_Toc167033802"></a><a name="_Toc86591123"></a><a name="_Toc79295050"></a><a name="_Ref55812834"><span lang="EN-US">Figure </span></a><span lang="EN-US">1</span><span lang="EN-US"> Example
Semantic Connections</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Flow
specifications</span></i><span lang="EN-US"> describe externally observable flow
of information in terms of application logic through a component. Such logical
flows may be realized through ports and connections of different data types and
a combination of data, event, and event data ports, as well as through data
components.  Flow specifications represent <i>flow sources</i>, i.e., flows
originating from within a component, <i>flow sinks</i>, i.e., flows ending
within a component, and <i>flow paths</i>, i.e., flows through a component from
its incoming ports to its outgoing ports. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Flow
implementations</span></i><span lang="EN-US"> describe actual flow sequences representing
flow specifications through components and sets of components across one or
more connections. They are declared in component implementations.  An <i>end-to-end
flow</i> specifies a flow that starts within one subcomponent and ends within
another subcomponent.  Flow specifications, flow implementations, and
end-to-end flows can have expected and actual values for flow related
properties, e.g., latency or rounding error accumulation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An actual
embedded system is represented by an instance of an AADL system implementation
that consists of subcomponents representing the application software, the
computing platform, and the physical environment.    </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(32)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
AADL specification may be used in a variety of ways by a variety of tools
during a broad range of life- cycle activities, e.g., for documentation during
preliminary specification, for schedulability or reliability analysis during
design studies and during verification, for generation of system integration
code during implementation.  Note that application software components must be
bound to execution platform components - ultimately threads to processors and
binary images to memory in order for the system to be analyzable for runtime
properties and the actual system to be constructed from the AADL
specification.  Many uses of an AADL specification need not be fully automated,
e.g., some implementation steps may be performed by hand.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(33)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
AADL core language is extensible through property sets, <i>annex subclauses </i>and
<i>annex libraries </i>that can be standardized or user-defined. Examples of
standardized extensions are the Error Model Annex (see </span><span lang="EN-US">Annex Document C</span><span lang="EN-US">) and the Behavior Annex (</span><span lang="EN-US">Annex Document D</span><span lang="EN-US">).  Property sets extend AADL
by introducing additional properties that can be associated with elements of a
model, while annexes introduce sublanguages that can be used to annotate a
model.  <i>Annex subclauses</i> consist of annex-specific sublanguages whose
constructs can be added to component types and component implementations. <i>Annex
libraries</i> are declarations of reusable annex-specific sublanguage elements
that are placed in AADL packages and can be referenced in annex subclauses. </span></p>

<h1 style="margin-top: 12pt; line-height: 12pt;"><a name="_Ref27449720"></a><a name="_Toc318320291"></a><a name="_Toc169684067"></a><a name="_Toc167033716"></a><a name="_Toc168661834"></a><a name="_Toc86725648"></a><a name="_Toc86220685"></a><a name="_Toc86220144"></a><a name="_Toc86219840"></a><a name="_Toc86219735"></a><a name="_Toc79294969"></a><a name="_Ref77296839"></a><a name="_Toc27797746"></a><a name="_Ref27449968"><span lang="EN-US">4<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">Components, Packages</span></a><span lang="EN-US">,
and Annexes</span></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL defines the following <i>categories</i> of components: <i>data,</i>
<i>subprogram</i>, <i>subprogram group</i>, <i>thread, thread group, process,
memory, bus,</i> <i>virtual bus</i>, <i>processor, virtual</i> <i>processor, device,
system</i>, and <i>abstract</i>.  The category <i>abstract </i>can be refined
into any of the other categories.  This section describes those aspects of
components that are common to all AADL component categories.  This section also
describes packages as an organizing mechanism for component types and implementations. 
This section closes with the definition of annex subclauses and annex
libraries.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component represents some hardware or software entity that is part
of a system being modeled in AADL.  A component has a <i>component type</i>, which
defines a functional interface.  The component type acts as the specification
of a component that other components can operate against. It consists of
features, flows, and property associations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A feature models a characteristic of a component that is visible to
other components.  Features are named, externally visible parts of the
component type, and are used to exchange control and data via connections with
other components.  Features include ports to support directional flow of data
and control, and subprograms including support for remote procedure call
interactions.  Features define parameters that represent the data values that
can be passed into and out of subprograms.  Features specify component access
requirements for external data and bus components. Component access
requirements for external subprograms support remote procedure call
interactions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component has zero or more <i>component implementations.  </i>Component
implementations represent variants of a component that adhere to the same
interface, but may have different property values.  A component implementation
specifies the realization of a component variant, i.e., an internal structure
for a component as an assembly of subcomponents.  Subcomponents are
instantiations of <i>component classifiers</i>, i.e., component types and
implementations. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Components are named and have properties.  These properties have
associated values that represent attributes and characteristics of a component</span><span lang="EN-US">.   </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Components can be declared in terms of other components by refining
and extending existing component types and component implementations.  This
permits partially complete component type and implementation declarations to
act as templates that may have explicit parameter (<i>prototype</i>)
specifications.  Such templates can represent a common basis for the evolution
of a family of related component types and implementations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This standard defines basic concepts and requirements for
determining compliance between a component specification and a physical
component.  Within this framework, annexes to this standard will specify
detailed compliance requirements for specific software programming, application
modeling, and hardware description languages.  This standard does not restrict
the lower-level representation(s) used for software components, e.g., binary
images, conventional programming languages, application modeling languages, nor
does it restrict the lower-level representation(s) used for physical hardware
component designs, e.g., circuit diagrams, hardware behavioral descriptions.  </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320292"></a><a name="_Toc169684068"></a><a name="_Toc167033717"></a><a name="_Toc168661835"></a><a name="_Toc86725649"></a><a name="_Toc86220686"></a><a name="_Toc86220223"></a><a name="_Toc86219841"></a><a name="_Toc86219736"></a><a name="_Toc79294970"></a><a name="_Toc27797747"></a><a name="_Toc27449575"></a><a name="_Toc8550338"></a><a name="_Toc2492740"></a><a name="_Toc535736316"></a><a name="_Toc535735996"></a><a name="_Toc535729820"></a><a name="_Toc532013558"><span lang="EN-US">4.1<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">AADL Specification</span></a><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An AADL specification consists of package and property set
declarations that are considered to be global declarations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Packages provide a way for organizing collections of component type
and implementation, feature group type, annex library declarations along with
relevant property associations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Property sets provide extensions to the core AADL in the form of new
properties and property types in support of additional modeling and analysis
capabilities.  Similarly annex libraries and annex subclauses provide extension
to the core AADL to annotate the base model through the use of sublanguages.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The content of packages, e.g., classifiers, can be referenced from
anywhere by qualifying the classifier reference with the package name.  The
content of property sets, i.e., property type, property constant and property
definitions, can be referenced by qualifying the property type, constant, or
property reference with the property set name.  References to predeclared
properties do not require qualification by property set.  Classifiers in other
packages and properties in property sets can only be referenced with those
packages and property sets are listed in the <b>with</b> declaration of a
package or property set.       </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">System instances are identified to processing tools and
methodologies by referencing a system implementation component as the root of
the system instance (see Section </span><span lang="EN-US">13.1</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><a name="placekeeper"><span lang="EN-US">Syntax</span></a></p>

<pre style="page-break-after: avoid;"><a name="AADLSpecification"><span class="HTMLPreformattedChar1"><span lang="EN-US">AADL_specification ::= </span></span></a></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    ( package_spec | property_set )<sup>+</sup></span></span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Naming Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5"><a name="a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5" id="id_a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5">       
</span></span></span><span lang="EN-US"><span class="requality_text id_a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5">An AADL specification has one </span><i><span class="requality_text id_a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5">global </span></i><span class="requality_text id_a7b1e923-a2ec-4e42-af40-3ec2fac1c7f5">namespace. 
The package and property set identifiers reside in this space and must be
unique.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">These package and property set identifiers
qualify the names of individual elements contained in them when they are
referenced.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_69d16513-f2d7-4b9c-9ff7-7ce423008094"><a name="69d16513-f2d7-4b9c-9ff7-7ce423008094" id="id_69d16513-f2d7-4b9c-9ff7-7ce423008094" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_69d16513-f2d7-4b9c-9ff7-7ce423008094">       
</span></span></span><span lang="EN-US"><span class="requality_text id_69d16513-f2d7-4b9c-9ff7-7ce423008094">Package declarations represent labeled
namespaces for component type, component implementation, feature group type,
and annex library declarations. </span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_74f42ca0-c424-4bda-8eb8-51758869eef8"><a name="74f42ca0-c424-4bda-8eb8-51758869eef8" id="id_74f42ca0-c424-4bda-8eb8-51758869eef8" class="requality_id"></a>(N4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_74f42ca0-c424-4bda-8eb8-51758869eef8">       
</span></span></span><span lang="EN-US"><span class="requality_text id_74f42ca0-c424-4bda-8eb8-51758869eef8">Property set declarations represent labeled
namespaces for property type and property definition declarations.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Packages and property sets may be separately
stored. Those packages and property sets are considered to be part of the global
namespace.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Defining identifiers in AADL must not be one of
the reserved words of the language (see Section 15.7).</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The AADL identifiers and reserved words can be
in upper or lower case (or a mixture of the two) (see Section 15).</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N8)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The AADL does not require that an identifier be
declared before it is referenced.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;"><span class="requality_text id_f44fb391-8942-4cc2-97fa-bbfe8001e491"><a name="f44fb391-8942-4cc2-97fa-bbfe8001e491" id="id_f44fb391-8942-4cc2-97fa-bbfe8001e491" class="requality_id"></a>(6)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f44fb391-8942-4cc2-97fa-bbfe8001e491">   </span></span></span><span lang="EN-US"><span class="requality_text id_f44fb391-8942-4cc2-97fa-bbfe8001e491">An AADL specification provides a global namespace for packages and
property sets.</span>  Items in packages and property sets can refer to items in other
packages and property sets.   </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A package is used to introduce new component types, component
implementations, feature group types, and annex libraries.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property set is used to introduce new property types and
properties (see section </span><span lang="EN-US">11.1</span><span lang="EN-US">).
They extend the predefined set of properties of the core AADL.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Declarations in an AADL specification can refer to packages and
property sets declared in separately stored AADL specifications. This allows
packages and property sets to be stored separately and used by multiple AADL
specifications. Mechanisms for locating such separately declared packages and
property sets are tool specific.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of processing must accept an AADL specification presented as a single
string of text in which declarations may appear in any order.  An AADL specification
may be stored as multiple pieces of specification text that are named or
indexed in a variety of ways, e.g., a set of source files, a database, a
project library.  Preprocessors or other forms of automatic generation may be
used to process AADL specifications to produce the required specification text.
This approach makes AADL scalable in handling large models.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc504445230"></a><a name="_Toc27797748"></a><a name="_Toc27449576"></a><a name="_Toc8550339"></a><a name="_Toc2492741"></a><a name="_Toc535736317"></a><a name="_Toc535735997"></a><a name="_Toc535729821"></a><a name="_Toc532013559"></a><a name="_Toc318320293"></a><a name="_Ref178056993"></a><a name="_Toc169684069"></a><a name="_Toc167033718"></a><a name="_Toc168661836"></a><a name="_Toc86725650"></a><a name="_Toc86220687"></a><a name="_Toc86220224"></a><a name="_Toc86219842"></a><a name="_Toc86219737"></a><a name="_Toc79294972"><span lang="EN-US">4.2<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Packages</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A package provides a way to organize component types, component
implementations, feature group types, and annex libraries into related sets of
declarations by introducing separate namespaces. Package names are built using
identifiers that are separated by double colons (“::”). This avoids the problem
of duplicate names which might occur when packages are developed independently
and then combined to model an integrated system.  In other words, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">complete_sys::first_independent::fuel_flow</span><span lang="EN-US"> is distinct from </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">complete_sys::second_independent::fuel_flow. 
</span><span lang="EN-US">Packages cannot be declared inside other packages. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Packages have public and private sections. Classifier declarations
in public sections are accessible to other packages, while classifiers in
private sections can only be referenced within the private section of the same
package. This allows classifiers used in the implementation of public components
to be kept private.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Visibility to other packages is specified by a <b>with</b> declaration. 
Only classifiers in the packages listed in the <b>with</b> declaration can be
referenced from within a given package.  A <b>renames</b> declaration can be
used to introduce a local alias to a qualified component type and feature group
type reference.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Visibility to property sets is specified by a <b>with</b>
declaration.  Only properties, property types, and property constants defined
in the property sets listed in the <b>with</b> declaration can be referenced
from within a given package unless they are predeclared properties, property
types, or property constants.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="Library"><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"><a name="fb328993-1080-47be-847c-fc75d0bbf635" id="id_fb328993-1080-47be-847c-fc75d0bbf635" class="requality_id"></a>package_spec ::= </span></span></a></pre><pre><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">    </span><b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">package</span></b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> </span><i><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">defining</span></i><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">_package_name </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">     ( </span><b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">public</span></b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> package_declarations [ </span><b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">private</span></b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> package_declarations ]</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">       | </span><b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">private</span></b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> package_declarations )</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">    [ </span><b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">properties</span></b><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> ( { basic_property_association }</span><sup><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">+ </span></sup><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> |                </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">      none_statement ) ]</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">end</span></span></b><span lang="EN-US"><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635"> </span><i><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">defining</span></i><span class="requality_text id_fb328993-1080-47be-847c-fc75d0bbf635">_package_name ;</span></span></pre>

<p class="MsoHeader"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span></p>

<p class="MsoHeader"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_eba23153-9a42-4667-8740-b89f3bb58056"><a name="eba23153-9a42-4667-8740-b89f3bb58056" id="id_eba23153-9a42-4667-8740-b89f3bb58056" class="requality_id"></a>package_declarations
::= </span></span></p><span class="requality_text id_eba23153-9a42-4667-8740-b89f3bb58056">

</span><p class="MsoHeader"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_eba23153-9a42-4667-8740-b89f3bb58056">    { name_visibility_declaration
}* { AADL_declaration }*</span></span></p>

<pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181"><a name="367d3205-fa84-4a90-85a2-3f9b311b3181" id="id_367d3205-fa84-4a90-85a2-3f9b311b3181" class="requality_id"></a>package_name ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">    { </span><i><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">package</span></i><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">_identifier </span><b><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">::</span></b><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181"> }</span><sup><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">*</span></sup><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181"> </span><i><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">package</span></i><span class="requality_text id_367d3205-fa84-4a90-85a2-3f9b311b3181">_identifier</span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_3a0df703-a702-4b6c-ae48-7fb9c372d227"><a name="3a0df703-a702-4b6c-ae48-7fb9c372d227" id="id_3a0df703-a702-4b6c-ae48-7fb9c372d227" class="requality_id"></a>none_statement ::= </span><b><span class="requality_text id_3a0df703-a702-4b6c-ae48-7fb9c372d227">none ;</span></b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_c5df0f7a-6499-4f88-934d-4efa860a5ab5"><a name="c5df0f7a-6499-4f88-934d-4efa860a5ab5" id="id_c5df0f7a-6499-4f88-934d-4efa860a5ab5" class="requality_id"></a>AADL_declaration ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_c5df0f7a-6499-4f88-934d-4efa860a5ab5">    classifier_declaration </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_c5df0f7a-6499-4f88-934d-4efa860a5ab5">    | annex_library </span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_d9546593-22a6-45ce-b1f5-28e3ab4e141c"><a name="d9546593-22a6-45ce-b1f5-28e3ab4e141c" id="id_d9546593-22a6-45ce-b1f5-28e3ab4e141c" class="requality_id"></a>classifier_declaration ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_d9546593-22a6-45ce-b1f5-28e3ab4e141c">    component_classifier_declaration | feature_group_classifier_declaration</span></span></pre><pre><span lang="EN-US">   </span></pre><pre><span lang="FR"><span class="requality_text id_2743f84a-4688-4195-93b7-693bcc82248d"><a name="2743f84a-4688-4195-93b7-693bcc82248d" id="id_2743f84a-4688-4195-93b7-693bcc82248d" class="requality_id"></a>component_classifier_declaration ::= </span></span></pre><pre><span lang="FR"><span class="requality_text id_2743f84a-4688-4195-93b7-693bcc82248d">    component_type | component_type_extension | </span></span></pre><pre><span lang="FR"><span class="requality_text id_2743f84a-4688-4195-93b7-693bcc82248d">    component_implementation | component_implementation_extension</span></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_3cd4b8eb-4b53-43da-9957-5d0304b89fed"><a name="3cd4b8eb-4b53-43da-9957-5d0304b89fed" id="id_3cd4b8eb-4b53-43da-9957-5d0304b89fed" class="requality_id"></a>feature_group_classifier_declaration ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3cd4b8eb-4b53-43da-9957-5d0304b89fed">        feature_group_type | feature_group_type_extension</span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_19d0f0a8-84f3-483a-a77c-e09c9fabca0d"><a name="19d0f0a8-84f3-483a-a77c-e09c9fabca0d" id="id_19d0f0a8-84f3-483a-a77c-e09c9fabca0d" class="requality_id"></a>name_visibility_declaration ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_19d0f0a8-84f3-483a-a77c-e09c9fabca0d">        import_declaration |</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_19d0f0a8-84f3-483a-a77c-e09c9fabca0d">        alias_declaration </span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026"><a name="435b3c23-6b07-405d-aafa-7be228c59026" id="id_435b3c23-6b07-405d-aafa-7be228c59026" class="requality_id"></a>import_declaration ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">       </span><b><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">with </span></b><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">( package_name | </span><i><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">property_set</span></i><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">_identifier )</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">            { </span><b><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">,</span></b><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026"> ( package_name | </span><i><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">property_set</span></i><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">_identifier ) }</span><sup><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">* </span></sup><b><span class="requality_text id_435b3c23-6b07-405d-aafa-7be228c59026">; </span></b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be"><a name="e420837e-bb64-418e-8d32-2c541f6115be" id="id_e420837e-bb64-418e-8d32-2c541f6115be" class="requality_id"></a>alias_declaration ::= </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">    ( </span><i><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">defining_</span></i><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">identifier </span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">renames package </span></b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">package</span><i><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">_</span></i><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">name </span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">; </span></b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">) |</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">    ( [ </span><i><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">defining</span></i><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">_identifier ] </span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">renames </span></b></span></pre><pre><span lang="EN-US"><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">      ( component_category unique_component_type_reference | </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">      </span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">feature group </span></b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">unique_feature_group_type_reference ) </span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">; </span></b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">) |</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">    ( </span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">renames</span></b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be"> package_name::</span><b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">all ; </span></b><span class="requality_text id_e420837e-bb64-418e-8d32-2c541f6115be">)</span></span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">The <b>properties</b> subclause of the package
is optional, or requires an explicit empty subclause declaration.  The latter
is provided to accommodate AADL modeling guidelines that require explicit
documentation of empty subclauses. An empty subclause declaration consists of
the reserved word of the subclause and a none statement     ( <b>none ;</b> ).</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A defining package name consists of a sequence
of one or more package identifiers separated by a double colon (“::”).  <span class="requality_text id_5b500a9c-06c2-435e-aba7-fd6884859437"><a name="5b500a9c-06c2-435e-aba7-fd6884859437" id="id_5b500a9c-06c2-435e-aba7-fd6884859437" class="requality_id"></a>A
defining package name must be unique in the global namespace.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b"><a name="a7f403e0-8108-44ea-a861-ddc5658fb98b" id="id_a7f403e0-8108-44ea-a861-ddc5658fb98b" class="requality_id"></a>(N2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b">       
</span></span></span><span lang="EN-US"><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b">The </span><b><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b">public</span></b><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b"> and </span><b><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b">private</span></b><span class="requality_text id_a7f403e0-8108-44ea-a861-ddc5658fb98b"> section of
a package may be declared in separate package declarations; these two
declarations introduce a single defining package name.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_79cbe84a-69c9-4e73-97d6-23f06f8f4710"><a name="79cbe84a-69c9-4e73-97d6-23f06f8f4710" id="id_79cbe84a-69c9-4e73-97d6-23f06f8f4710" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_79cbe84a-69c9-4e73-97d6-23f06f8f4710">       
</span></span></span><span lang="EN-US"><span class="requality_text id_79cbe84a-69c9-4e73-97d6-23f06f8f4710">Associated with every package is a </span><i><span class="requality_text id_79cbe84a-69c9-4e73-97d6-23f06f8f4710">package
namespace</span></i><span class="requality_text id_79cbe84a-69c9-4e73-97d6-23f06f8f4710"> that contains the names for all the elements defined within that
package.  This means that component types, feature group types, and defining
entities declared in an annex library using an annex-specific sublanguage can
be declared with the same name in different packages. </span> </span></p>

<p class="Namingrule"><a name="_Ref166314758"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The package namespace is divided into a <b>public</b>
section and a <b>private</b> section.  Items declared in the <b>public</b> section
of the package namespace can be referenced from outside the package as well as
within the package.  </span></a></p>

<p class="Namingrule" style="margin-top: 12pt;"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The reference to an item declared in another
package must be an item <i>name</i> qualified with a package name separated by
a double colon (“::”).  The package name must be listed in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> (<b>with</b>) of the package with the reference, i.e., in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> of the public section, if the reference is in the public section,
and in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> of the public or private section if the reference is in the private
section of the package.  Only classifiers in the public package section can be
referenced.</span></p>

<p class="Note" style="margin-left: 28.8pt;"><span lang="EN-US">Note: References to
items declared in the same package as the reference do not have to be
qualified. If they are quailified the package is not required to be listed in
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US">.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The reference to a property other than
predeclared properties must be an property <i>name</i> qualified with a property
set name separated by a double colon (“::”).  The property set name must be
listed in the <b>with</b> declaration of the package with the reference.  Predeclared
properties may be, but are not required to be qualified by the property set
name.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The package name in a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> must
exist in the global name space.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N8)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The property set identifier in a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> must exist in the global name space.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N9)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Items declared in the <b>private</b> section of
the package can only be referenced from within the <b>private</b> section of
the package.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N10)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">If the qualifying package identifier of a qualified reference is
missing, the referenced component classifier, feature group type, or item in an
annex library must exist in the same package as the reference. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N11)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">The package name referenced in an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">alias_declaration </span><span lang="EN-US">must
exist in the global namespace and must be listed in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US">. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N12)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">The classifier referenced by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">alias_declaration </span><span lang="EN-US">must
exist in the name space of the <b>public </b>section of the<b> </b>package being
referenced by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">alias_declaration</span><span lang="EN-US">.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N13)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">The classifier referenced by the alias declaration must refer to a
component type or a feature group type.</span></p>

<p class="Namingrule"><a name="_Ref166314763"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc"><a name="00bf13aa-e982-4134-bb22-ef8d45cfe6cc" id="id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc" class="requality_id"></a>(N14)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc">    
</span></span></span><span lang="EN-US"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc">The defining identifier of an </span></span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc">alias_declaration</span></span><span lang="EN-US"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc"> must be unique in the namespace of the package containing the </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc">alias_declaration</span></span><span lang="EN-US"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc">.</span></span><span lang="EN-US"><span class="requality_text id_00bf13aa-e982-4134-bb22-ef8d45cfe6cc"> </span> <span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b"><a name="a3797daa-e9f0-49a4-b26b-5de62381651b" id="id_a3797daa-e9f0-49a4-b26b-5de62381651b" class="requality_id"></a></span><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">If an </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">alias_declaration</span></span><span lang="EN-US"><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">
defines an alias for a package then the alias name must not conflict with any
package name listed in an </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">import_declaration
</span></span><span lang="EN-US"><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">or that of the package containing the </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">alias_declaration</span></span><span lang="EN-US"><span class="requality_text id_a3797daa-e9f0-49a4-b26b-5de62381651b">.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd"><a name="f8dca427-55be-45ea-8c0b-2f7cb7df0ccd" id="id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd" class="requality_id"></a>(N15)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd">     </span></span></span><span lang="EN-US"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd">The </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd">alias_declaration
</span></span><span lang="EN-US"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd">makes the publicly visible identifier of classifiers
declared in another package accessible in the name space of the package
containing the </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd">alias_declaration</span></span><span lang="EN-US"><span class="requality_text id_f8dca427-55be-45ea-8c0b-2f7cb7df0ccd">.   If the alias declaration for a classifier does not include a
defining identifier then the referenced classifier identifier is used as
defining identifier and this identifier must be unique in the namespace of the
package with the alias declaration.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5"><a name="1abb93b3-4d16-414c-a91d-fab263b9adb5" id="id_1abb93b3-4d16-414c-a91d-fab263b9adb5" class="requality_id"></a>(N16)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">     </span></span></span><span lang="EN-US"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">If the </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">alias_declaration
</span></span><span lang="EN-US"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">renames all</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5"> </span></span><span lang="EN-US"><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">publicly visible identifiers of component
types and feature group types by naming the package and </span><b><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">all</span></b><span class="requality_text id_1abb93b3-4d16-414c-a91d-fab263b9adb5">, then all
those identifiers must also be unique in the namespace of the package with the
alias declaration.</span></span></p>

<p class="Namingrule"><a name="_Ref178057101"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_e2dba0b6-aef6-493a-aef6-8d2531ba6563"><a name="e2dba0b6-aef6-493a-aef6-8d2531ba6563" id="id_e2dba0b6-aef6-493a-aef6-8d2531ba6563" class="requality_id"></a>(N17)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e2dba0b6-aef6-493a-aef6-8d2531ba6563">    
</span></span></span><span lang="EN-US"><span class="requality_text id_e2dba0b6-aef6-493a-aef6-8d2531ba6563">The identifiers introduced by the </span></span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_e2dba0b6-aef6-493a-aef6-8d2531ba6563">alias_declaration </span></span><span lang="EN-US"><span class="requality_text id_e2dba0b6-aef6-493a-aef6-8d2531ba6563">are only accessible within the package.  When declared in the public
package section, they can be referenced within the public and private package
section, but not from other packages.  When declared in the private package
section, they can be referenced within the private package section only.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N18)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">The alias declared for a component type can be used instead of a
qualified component type in a reference to a component implementation.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9"><a name="133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9" id="id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9">        
</span></span></span><span lang="EN-US"><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9">The defining package name following the reserved
word </span><b><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9">end</span></b><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9"> must be identical to the defining package name following the
reserved word </span><b><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9">package</span></b><span class="requality_text id_133c2aab-cb0f-4ab6-9f8d-1dd348aba2f9">.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db"><a name="0a3bad98-ef26-4019-b2d8-ab7d357309db" id="id_0a3bad98-ef26-4019-b2d8-ab7d357309db" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db">        
</span></span></span><span lang="EN-US"><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db">For each package there may be at most one </span><b><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db">public</span></b><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db">
section declaration and one </span><b><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db">private</span></b><span class="requality_text id_0a3bad98-ef26-4019-b2d8-ab7d357309db"> section declaration.  These two
sections may be declared in a single package declaration or in two separate
package declarations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103"><a name="d7dd8cd1-eba1-4473-a814-1ac739bf2103" id="id_d7dd8cd1-eba1-4473-a814-1ac739bf2103" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103">        
</span></span></span><span lang="EN-US"><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103">A component implementation may be declared in
both the public and private part of a package.  In that case the declaration in
the public part may only contain a </span><b><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103">properties</span></b><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103"> subclause and a </span><b><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103">modes</span></b><span class="requality_text id_d7dd8cd1-eba1-4473-a814-1ac739bf2103">
subclause.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The component category in an alias declaration
must match the category of the referenced component type.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;"><span class="requality_text id_9f81b6ee-d435-4158-b51f-5f60c0b1ddd3"><a name="9f81b6ee-d435-4158-b51f-5f60c0b1ddd3" id="id_9f81b6ee-d435-4158-b51f-5f60c0b1ddd3" class="requality_id"></a>(5)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_9f81b6ee-d435-4158-b51f-5f60c0b1ddd3">   </span></span></span><span lang="EN-US"><span class="requality_text id_9f81b6ee-d435-4158-b51f-5f60c0b1ddd3">A package provides a way to organize component type declarations,
component implementation declarations, feature group types, and annex libraries
into related sets of declarations along with relevant property associations. 
It provides a namespace for component types, feature group types, and annex
libraries with the package name acting as a qualifier. </span> Nested package names
allow for unique package naming conventions that address potential name
conflicts in component type and implementation names when independently
developed AADL specifications are combined.  Note that component
implementations are named relative to component types. Thus, qualified component
type names act as unique qualifier for component implementation names. 
Packages can be organized hierarchically by giving them nested package names. 
These package names represent absolute paths from the root of the package
hierarchy.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Packages have a <b>public</b> and a <b>private</b> section. 
Declarations in the <b>public</b> section are visible outside the package,
i.e., names declared in the <b>public</b> part can be referenced by
declarations in other packages. Declarations in the <b>private</b> section are
visible only within <b>private</b> section of the package, i.e., they cannot be
referenced from the <b>public</b> section or from other packages.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component type and component implementation declarations model
execution platform and application software components of a system.  A
component type denotes externally visible characteristics of a component, i.e.,
its features and its properties.  A component implementation denotes the
internal structure, operational modes, and properties of a component.  A
component type can have several component implementations.  This can be used
for example to model product line architectures running on different execution
platforms.  Packages allow such declarations to be organized into separate
namespaces.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Feature group types provide the definition of an interface to a
component that represents a collection of features or feature groups defined
within the component implementation (see Section </span><span lang="EN-US">5.3</span><span lang="EN-US">).  This group of features may be
accessed externally as a single unit.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component implementation can be declared in both the public and
private section of a package. If it is declared in both, then the public
declaration is limited to containing property associations and modes and only
those items are visible outside the package.  This allows component
implementations to be made visible to other packages as variants of the same
component type, while the details of the implementation, i.e., its realization
expressed by the subcomponents and connections subclauses, are hidden in the
private part.  The two declarations represent the same component
implementation. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
a component implementation is declared as an extension of another component
implementation and it is declared in both the public and private section of a
package, then the <b>extends </b>is specified with the public section and the
extension may include prototype bindings. The component implementation in the
private section is considered to complete the declaration in the public
section, i.e., its name can be interpreted as reference to the defining name of
the component implementation declaration in the public portion.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> specifies which packages and property sets can be named in
qualified references to items in other packages or property sets. Packages can initially
be declared with </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration
</span><span lang="EN-US">without classifiers to set up an initial collection of
package with use restrictions on other packages.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">alias_declaration</span><span lang="EN-US"> introduces local identifiers as short names for long names.  It
does so for package names and for classifier type references qualified by a
package name.  The short name may differ from the identifier of the long name
to avoid name conflicts.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Property
associations declared in the properties section of a package are associated
with the package represented by the declaration. Packages with separate public
and private package declarations can have different property values for the
same property. </span></p>

<p class="DescriptionHeading"><a name="_Toc169684070"></a><a name="_Toc167033719"></a><a name="_Toc168661837"></a><a name="_Toc86725651"></a><a name="_Toc86220688"></a><a name="_Toc86220225"></a><a name="_Toc86219843"></a><a name="_Toc86219738"></a><a name="_Toc79294973"></a><a name="_Ref69897118"><span lang="EN-US">Processing
Requirements and Permissions</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation is permitted to enforce that the with declaration in a
package not be changed to enforce the use restrictions between packages when
classifiers are added to the package.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Examples</span></p>

<p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082"><a name="8c7e6d02-4da8-49ce-b3ab-312b049ec082" id="id_8c7e6d02-4da8-49ce-b3ab-312b049ec082" class="requality_id"></a>package
Aircraft::Cockpit </span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><b><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">public</span></span></b></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">   </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">with</span></b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">
Avionics::DataTypes, Safety_Properties;</span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">   AirData </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">renames
data</span></b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082"> Avionics::DataTypes::AirData;</span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">   </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">system </span></b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">MFD</span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">   </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">features</span></b></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">      Airdata: </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">in
data port </span></b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">AirData;</span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">   </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">properties</span></b></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">     
Safety_Properties::Safety_Criticality =&gt; high;</span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">   </span><b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">end</span></b><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082"> MFD;</span></span></span></p><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">

</span><p class="ExampleText"><span class="CODE"><span lang="EN-US"><span class="requality_text id_8c7e6d02-4da8-49ce-b3ab-312b049ec082">end Aircraft::Cockpit;</span></span></span></p>

<p class="ExampleText"><span class="CODE"><span lang="EN-US"> </span></span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320294"><span lang="EN-US">4.3<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Component Type</span></a><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component type specifies the external interface of a component
that its implementations satisfy.  It contains declarations that represent
features of a component and property associations. Features of a component are
ports, feature groups, required access to externally provided data, subprogram,
and bus components, and parameter declarations for the specification of the
data values that flow into and out of subprograms.  The ports and feature
groups of a component can be connected to compatible ports or subprograms of
other components through connections to represent control and data interaction
between those components.  Required access to an external subcomponent, such as
data, subprogram, or bus, is connected via required and provided access to a subcomponent
of the specified component classifier.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component types can declare flow specifications, i.e., logical flows
of information from its incoming ports to its outgoing ports that are realized
by their implementations. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component types can declare modes and mode transitions of a
component.  These modes and mode transitions are common to all implementations
of the component.  This allows for mode-specific property values to be
associated with the component type, its features, and its flows.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component types can be declared in terms of other component types,
i.e., a component type can <i>extend</i> another component type – inheriting
its declarations and property associations.  If a component type extends
another component type, then features, flows, and property associations can be
added to those already inherited.  A component type extending another component
type can also refine the declaration of inherited feature and flow declarations
by more completely specifying partially declared component classifiers of
features and by associating new values with properties.  A component type
cannot be an extension of multiple component types, i.e., multiple inheritance
is not supported for AADL components</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component types can declare <i>prototypes</i>, i.e., classifier
parameters that are used in features.  The prototype bindings are supplied when
the component types is being extended or used in subcomponent declarations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component type extensions form an <i>extension hierarchy</i>, i.e.,
a component type that extends another component type can also be extended.  We
use AADL graphical notation (see </span><span lang="EN-US">Appendix D </span><span lang="EN-US">) to illustrate the extension
hierarchy in Figure 2.  For example, component type GPS extends component type
Position System inheriting ports declared in Position System.  It may add a
port, refine the data type classifier of a port incompletely declared in
Position System, and overwrite the value of one or more properties.  Component
types being extended are referred to as <i>ancestors</i>, while component types
extending a component type are referred to as <i>descendents</i>.  </span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="576" height="104" src="imgs/image014.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320411"></a><a name="_Toc167033803"></a><a name="_Toc86591124"></a><a name="_Toc79295051"></a><a name="_Ref55889844"><span lang="EN-US">Figure </span></a><span lang="EN-US">2</span><span lang="EN-US">
Component Type Extension </span><span lang="EN-US">Hierarchy</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component types may also be extended using an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">annex_subclause</span><span lang="EN-US"> to specify additional characteristics of the type that are not
defined in the core of the AADL (see Section (18))</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="ComponentType"><span lang="EN-US">component_type ::= </span></a></pre><pre><span lang="EN-US">  component_category <i>defining_component_type_</i>identifier</span></pre><pre><span lang="EN-US">  [ <b>prototypes </b>( {<b> </b>prototype }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">  [ <b>features</b> ( { feature }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">  [ <b>flows</b> ( { flow_spec }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">  </span><span lang="FR">[ modes_subclause | requires_modes_subclause ]</span></pre><pre><span lang="FR">  </span><span lang="EN-US">[ <b>properties</b> ( </span></pre><pre><span lang="EN-US">    { <i>component_type</i>_property_association | contained_property_association  }<sup>+</sup> </span></pre><pre><span lang="EN-US">    | none_statement ) ]</span></pre><pre><span lang="EN-US">  { annex_subclause }<sup>*</sup></span></pre><pre><span lang="EN-US">  <b>end</b> <i>defining_component_type</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_type_extension ::= </span></pre><pre><span lang="EN-US">  component_category <i>defining_component_type_</i>identifier </span></pre><pre><span lang="EN-US">    <b>extends</b> unique_component_type_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">  [ <b>prototypes </b>( {<b> </b>prototype | prototype_refinement }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">  [ <b>features</b> ( { feature | feature_refinement }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">  [ <b>flows</b> ( { flow_spec | flow_spec_refinement }<sup>+</sup> | none_statement ) ]</span></pre><pre style="margin-right: -4.5pt;"><span lang="EN-US">  </span><span lang="FR">[ modes_subclause | requires_modes_subclause ]</span></pre><pre><span lang="FR">  </span><span lang="EN-US">[ <b>properties</b> ( </span></pre><pre><span lang="EN-US">    { <i>component_type</i>_property_association | contained_property_association  }<sup>+</sup> </span></pre><pre><span lang="EN-US">    | none_statement ) ]</span></pre><pre><span lang="EN-US">  { annex_subclause }<sup>*</sup></span></pre><pre><span lang="EN-US">  <b>end</b> <i>defining_component_type</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_category ::=</span></pre><pre><span lang="EN-US">             abstract_component_category                 </span></pre><pre><span lang="EN-US">           | software_category</span></pre><pre><span lang="EN-US">           | execution_platform_category</span></pre><pre><span lang="EN-US">           | composite_category</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">abstract_component_category ::= <b>abstract</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">software_category ::= <b>data </b>| <b>subprogram </b>| <b>subprogram group </b>| </span></pre><pre><span lang="EN-US">                      </span><b><span lang="EN-US">thread</span></b><span lang="EN-US"> | <b>thread group</b> | <b>process </b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">execution_platform_category ::= </span></pre><pre><span lang="EN-US">        <b>memory </b>| <b>processor</b> | <b>bus</b> | <b>device</b> | <b>virtual processor</b> | <b>virtual bus</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">composite_category ::= <b>system</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_component_type_reference ::= </span></pre><pre><span lang="EN-US">    [ package_name <b>::</b> ] <i>component_type</i>_identifier</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading"><span lang="EN-US">NOTES: The above grammar rules
characterize the common syntax for all component categories. The sections
defining each of the component categories will specify further restrictions on
the syntax. </span></p>

<p class="MsoNoteHeading"><span lang="EN-US">The <b>prototypes</b>,<b> features</b>,
<b>flows</b>, <b>modes</b>, <b>annex</b>, and <b>properties</b> subclauses of
the component type are optional, or require an explicit empty subclause
declaration.  The latter is provided to accommodate AADL modeling guidelines
that require explicit documentation of empty subclauses. An empty subclause
declaration consists of the reserved word of the subclause and a none
statement  ( <b>none ;</b> ). </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_84ccd78b-e880-4002-93e6-5d97d1c233d9"><a name="84ccd78b-e880-4002-93e6-5d97d1c233d9" id="id_84ccd78b-e880-4002-93e6-5d97d1c233d9" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_84ccd78b-e880-4002-93e6-5d97d1c233d9">       
</span></span></span><span lang="EN-US"><span class="requality_text id_84ccd78b-e880-4002-93e6-5d97d1c233d9">The defining identifier for a component type
must be unique in the namespace of the package within which it is declared.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_1a46953c-cd34-4e03-aaec-6ae5f9eede78"><a name="1a46953c-cd34-4e03-aaec-6ae5f9eede78" id="id_1a46953c-cd34-4e03-aaec-6ae5f9eede78" class="requality_id"></a>(N2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_1a46953c-cd34-4e03-aaec-6ae5f9eede78">       
</span></span></span><span lang="EN-US"><span class="requality_text id_1a46953c-cd34-4e03-aaec-6ae5f9eede78">Each component type has a local namespace for
defining identifiers of prototypes, features, modes, mode transitions, and flow
specifications. That is, defining prototype, defining feature, defining modes
and mode transitions, and defining flow specification identifiers must be
unique in the component type namespace.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The component type identifier of the ancestor in
a component type extension, i.e., that appears after the reserved word <b>extends</b>,
must be defined in the specified package namespace. If no package name is
specified, then the identifier must be defined in the namespace of the package
the extension is declared in.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_2752bb57-6fec-4abb-b0d3-f40b11dfff2c"><a name="2752bb57-6fec-4abb-b0d3-f40b11dfff2c" id="id_2752bb57-6fec-4abb-b0d3-f40b11dfff2c" class="requality_id"></a>(N4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_2752bb57-6fec-4abb-b0d3-f40b11dfff2c">       
</span></span></span><span lang="EN-US"><span class="requality_text id_2752bb57-6fec-4abb-b0d3-f40b11dfff2c">When a component type extends another component
type, a component type namespace includes all the identifiers in the namespaces
of its ancestors.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_e8b490d7-6b33-4b77-aaf1-00e326517a41"><a name="e8b490d7-6b33-4b77-aaf1-00e326517a41" id="id_e8b490d7-6b33-4b77-aaf1-00e326517a41" class="requality_id"></a>(N5)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e8b490d7-6b33-4b77-aaf1-00e326517a41">       
</span></span></span><span lang="EN-US"><span class="requality_text id_e8b490d7-6b33-4b77-aaf1-00e326517a41">A component type that extends another component
type does not include the identifiers of the implementations of its ancestors.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_13a437ea-3ac6-4c42-9f83-811ffb80dff5"><a name="13a437ea-3ac6-4c42-9f83-811ffb80dff5" id="id_13a437ea-3ac6-4c42-9f83-811ffb80dff5" class="requality_id"></a>(N6)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_13a437ea-3ac6-4c42-9f83-811ffb80dff5">       
</span></span></span><span lang="EN-US"><span class="requality_text id_13a437ea-3ac6-4c42-9f83-811ffb80dff5">The defining identifier of a feature, flow
specification, mode, mode transition, or prototype must be unique in the
namespace of the component type.</span> </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The refinement identifier of a feature, flow
specification, or prototype refinement refers to the closest refinement or the
defining declaration of the feature going up the component type ancestor
hierarchy.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N8)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototypes referenced by prototype binding
declarations must exist in the local namespace of the component type being
extended.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N9)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Mode transitions declared in the component type
may not refer to event or event data ports of subcomponents.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30"><a name="b128c028-163f-4af7-a36e-1c7faed69f30" id="id_b128c028-163f-4af7-a36e-1c7faed69f30" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30">        
</span></span></span><span lang="EN-US"><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30">The defining</span><i><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30"> </span></i><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30">identifier following the
reserved word </span><b><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30">end</span></b><span class="requality_text id_b128c028-163f-4af7-a36e-1c7faed69f30"> must be identical to the defining identifier that
appears after the component category reserved word.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The <b>prototypes</b>,<b> features</b>, <b>flows</b>,<b>
modes</b>, and <b>properties</b> subclauses are optional. If a subclause is
present but empty, then the reserved word <b>none </b>followed by a semi-colon
must be present.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ca93dde5-92a5-4726-ab5f-f0df5121cfa2"><a name="ca93dde5-92a5-4726-ab5f-f0df5121cfa2" id="id_ca93dde5-92a5-4726-ab5f-f0df5121cfa2" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ca93dde5-92a5-4726-ab5f-f0df5121cfa2">        
</span></span></span><span lang="EN-US"><span class="requality_text id_ca93dde5-92a5-4726-ab5f-f0df5121cfa2">The category of the component type being
extended must match the category of the extending component type, i.e., they
must be identical or the category being extended must be </span><b><span class="requality_text id_ca93dde5-92a5-4726-ab5f-f0df5121cfa2">abstract</span></b><span class="requality_text id_ca93dde5-92a5-4726-ab5f-f0df5121cfa2">.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The classifier being extended in a component
type extension may include prototype bindings.  There must be at most one
prototype binding for each prototype, i.e., once bound a prototype binding
cannot be overwritten by a new binding in a component type extension.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A component type must not contain both a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">requires_modes_subclause</span><span lang="EN-US"> and a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">modes_subclause</span><span lang="EN-US">.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the extended component type and an ancestor component
type in the extends hierachy contain modes subclauses, they must both be </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">requires_modes_subclause</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">modes_subclause</span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Standard Properties</span></p>

<pre><span lang="EN-US">Classifier_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match,  Type_Extension, Signature_Match)</span></pre><pre><span lang="EN-US">Prototype_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match)</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component type represents the interface specification of a
component, i.e., the component category, prototypes, features, flow
specifications, modes, mode transitions, and property values of a component.  A
component implementation of this component type denotes a component, existing
or potential, that is compliant with the component type declaration.  Component
implementations are expected to satisfy these externally visible
characteristics of a component.  The component type provides a contract for the
component interface that users of the component can depend on.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The component categories are: data, subprogram, subprogram group, thread,
thread group, and process (software categories); processor, virtual processor,
bus, virtual bus, memory, and device (execution platform categories); system
(compositional category), and abstract component (compositional category).  The
semantics of each category will be described in sections </span><span lang="EN-US">5</span><span lang="EN-US">, </span><span lang="EN-US">6</span><span lang="EN-US">, and </span><span lang="EN-US">7</span><span lang="EN-US">. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Features
of a component are interaction points with other components, i.e., ports and feature
groups; subprogram parameters; data component access, subprogram access, and
bus access.  Ports represent directional flow of data and events between
components, feature groups represent groups of features that are connected to
another component, data component access represents access to shared data
components, subprogram access represents access to a subprogram by a caller,
and bus access represents access to a bus from processor, memory, device, and
other bus components to establish hardware connectivity.  Features are further
described in Section 8. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Flow
specifications indicate whether a flow of data or control originates within a
component, terminates within a component, or flows through a component from one
of its incoming ports to one of its outgoing ports.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Mode
declarations define modes of the component that are common to all
implementations.  As a result, component types can have mode-specific property
values.  Other components can initiate mode transitions by supplying events to
incoming event ports of a component.  Mode transitions specify which event
ports affect their transition.  A component type extension can add modes and
associate properties to existing modes.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">requires_modes_subclause</span><span lang="EN-US"> specifies as set of modes that the component expects to inherit
from its containing component.  In this case, the component can utilize these
modes for mode-specific property values and for <b>in modes</b> declarations of
subcomponents and connection, but mode transition behavior is determined by the
containing component, whose modes are made accessible to the component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component type can contain <i>incomplete</i> feature declarations, i.e.,
declarations with no <i>component</i> <i>classifier references</i> or just the
component type name for a component type with more than one component
implementation.  The component implementation may not exist yet or one of
several implementations may have not been selected yet.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component type may also be declared with <i>prototypes</i>, indicating that the
component type is incomplete and can be parameterized. Classifiers and features
can be supplied through prototype bindings to complete such a component type
template as part of a component type extension, component implementation
extension, or when used as a component type reference, e.g., in feature
declarations or subcomponent declarations.  Once bound a prototype cannot be
rebound.  The use of incomplete declarations is particularly useful during
early design stages where details may not be known or decided.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component type can be declared as an extension of another component type
resulting in a component type extension hierarchy, as illustrated in Figure 2. 
A component type extension can refine an abstract component type to one of the
concrete component categories.  A component type extension inherits the
features, flow specifications, modes, mode transitions, prototypes, and
properties of the component type being extended.  For annex subclauses, each
annex defines whether annex declarations are inherited.  A component type
extension can contain refinement declarations to permit incomplete feature
declarations to be completed and new property values to be associated with
features and flow specification declared in a component type being extended. 
In addition, a type extension can add feature declarations, flow
specifications, modes, mode transitions, and property associations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component type being extended may include prototype binding declarations.  If
prototype bindings are declared for a subset of the prototypes, then only the
prototypes without binding can be bound when referencing the component type
extension. This supports evolutionary development and modeling of system
families by declaring partially complete component types that get refined in
extensions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Properties
are predefined for each of the component categories and will be described in
the appropriate sections. See Section 11.3 regarding rules for determining
property values.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"><a name="9e5f873e-0893-4a94-94d9-ab33c58d416b" id="id_9e5f873e-0893-4a94-94d9-ab33c58d416b" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">TypeExample</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">public</span></span></b></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">system</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> File_System </span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">features</span></span></b></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   -- access to a data component</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   </span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">root: </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">requires
</span></b><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">data access </span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">FileSystem::Directory.hashed;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">end</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
File_System;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> </span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">process</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
Application</span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> </span></b></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">features</span></span></b></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   -- a data out port</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   result: </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">out data port</span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
App::result_type;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   home: </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">requires</span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">data access </span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">FileSystem::Directory.hashed;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">end</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
Application;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> </span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">thread</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> Calculate</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">prototypes</span></span></b></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">  -- A data type to be used as type for
the input and result port</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">  data_type: </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">data</span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">;</span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> </span></b></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">features</span></span></b></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   input: </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">in data port </span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">data_type;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">   result: </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">out data port </span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">data_type;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">end</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> Calculate;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> </span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">thread</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
Compute_Distance </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">extends</span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b"> Calculate (data_type =&gt; </span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">data </span></b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">App::Distance)</span><b><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
</span></b></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">end</span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">
Compute_Distance;</span></span></p><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">end </span></span></b><span lang="EN-US"><span class="requality_text id_9e5f873e-0893-4a94-94d9-ab33c58d416b">TypeExample;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc2492742"></a><a name="_Toc535736318"></a><a name="_Toc535735998"></a><a name="_Toc535729822"></a><a name="_Toc532013560"></a><a name="_Toc318320295"></a><a name="_Toc169684071"></a><a name="_Toc167033720"></a><a name="_Toc168661838"></a><a name="_Toc86725652"></a><a name="_Toc86220689"></a><a name="_Toc86220226"></a><a name="_Toc86219844"></a><a name="_Toc86219739"></a><a name="_Toc79294974"></a><a name="_Ref57280434"></a><a name="_Toc27797749"></a><a name="_Toc27449577"></a><a name="_Toc8550340"><span lang="EN-US">4.4<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Component Implementation</span></a><span lang="EN-US">s</span><span lang="EN-US"> </span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>component implementation</i> represents the realization of a
component in terms of subcomponents, their connections, flow sequences, properties,
component modes and mode transitions.  Flow sequences represent implementations
of flow specifications in the component type, or end-to-end flows to be
analyzed.  Modes represent alternative operational modes that may manifest
themselves as alternate configurations of subcomponents, connections, call
sequences, flow sequences, and property values.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component type can have zero, one, or multiple component
implementations.  If a component type has zero component implementations, then
it is considered to be a leaf in the system component hierarchy.  For example,
a partial AADL model may have processes as components without realization,
while a task level AADL model expand to threads as leaves.  If no implementation
is associated then the properties on the component types provide information
about the component for analysis and system generation.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component implementation can be declared as an extension of
another component implementation.  In that case, the component implementation
inherits the declarations of its ancestors as well as its component type. A
component implementation extension can refine inherited declarations, and add
subcomponents, connections, subprogram call sequences, flow sequences, mode
declarations, and property associations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component implementations can declare <i>prototypes</i>, i.e.,
classifier parameters that are used in subcomponent declarations.  The
prototype bindings are supplied when the component implementation is being
extended or used in subcomponent declarations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component implementations build on the component type <i>extension
hierarchy</i> in two ways.  First, a component implementation is a realization
of a component type (shown as dashed arrows in Figure 3).  As such it inherits
features and property associations of its component type and any component type
ancestor.  Second, a component implementation declared as extension inherits
subcomponents, connections, subprogram call sequences, flow sequences, modes,
property associations, and annex subclauses from the component implementation
being extended (shown as solid arrows in Figure 3).  A component implementation
can extend a component implementation that in turn extends another component
implementation, e.g., in Figure 3 <i>GPS</i>. Handheld extends <i>GPS.Basic</i>
and is extended by <i>GPS_Secure.Handheld</i>.  Component implementations
higher in the extension hierarchy are called ancestors and those lower in the
hierarchy are called descendents.  A component implementation can extend
another component implementation of its own component type, e.g., <i>GPS.Handheld</i>
extends <i>GPS.Basic</i>, or it can extend the component implementation of one
of its ancestor component types, e.g., <i>GPS_Secure.Handheld</i> extends <i>GPS.Handheld</i>,
which is an implementation of the ancestor component type <i>GPS</i>.  The
component type and implementation extension hierarchy is illustrated in Figure 3. 
</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="576" height="158" src="imgs/image015.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320412"></a><a name="_Toc167033804"></a><a name="_Toc86591125"></a><a name="_Toc79295052"></a><a name="_Ref26938429"><span lang="EN-US">Figure </span></a><span lang="EN-US">3</span><span lang="EN-US">
Extension Hierarchy of Component Types and Implementations</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="ComponentImplementation"><span lang="EN-US">component_implementation ::= </span></a></pre><pre><span lang="EN-US">   component_category <b>implementation</b></span></pre><pre><b><span lang="EN-US">   </span></b><i><span lang="EN-US">defining_</span></i><span lang="EN-US">component_implementation_name [ prototype_bindings ]</span></pre><pre><span lang="EN-US">  [ <b>prototypes </b>( {<b> </b>prototype }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">   [ <b>subcomponents </b>( { subcomponent }<sup>+ </sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>calls </b>( { subprogram_call_sequence }<sup>+ </sup> | none_statement ) ]   </span></pre><pre><span lang="EN-US">   [ <b>connections</b> ( { connection }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>flows </b>(<b> </b>{ flow_implementation | </span></pre><pre><span lang="EN-US">               end_to_end_flow_spec }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [modes_subclause<b> </b>]</span></pre><pre><span lang="EN-US">   [ <b>properties</b> ( { property_association | contained_property_association  }<sup>+</sup> </span></pre><pre><span lang="EN-US">                  | none_statement ) ]</span></pre><pre><span lang="EN-US">   { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">   end</span></b><span lang="EN-US"> <i>defining</i><i>_</i>component_implementation_name <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="FR">component_implementation_name ::= </span></pre><pre><span lang="FR">        <i>component_type</i>_identifier . <i>component_implementation</i>_identifier</span></pre><pre><span lang="FR"><br />
component_implementation_extension ::= </span></pre><pre><span lang="FR">   </span><span lang="EN-US">component_category <b>implementation</b></span></pre><pre><b><span lang="EN-US">   </span></b><i><span lang="EN-US">defining_</span></i><span lang="EN-US">component_implementation_name</span></pre><pre><b><span lang="EN-US">   </span></b><b><span lang="EN-US">extends</span></b><span lang="EN-US"> unique_component_implementation_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">   [ <b>prototypes </b>( {<b> </b>prototype | prototype_refinement }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">   [ <b>subcomponents </b></span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">( { subcomponent | subcomponent_refinement }<sup>+  </sup>| none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>calls </b>( { subprogram_call_sequence }<sup>+ </sup> | none_statement ) ]   </span></pre><pre><span lang="EN-US">   [ <b>connections</b> </span></pre><pre><span lang="EN-US">        ( { connection | connection_refinement }<sup>+ </sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>flows </b>(<b> </b>{ flow_implementation <sup> </sup>| flow_implementation_refinement |</span></pre><pre><span lang="EN-US">               end_to_end_flow_spec | end_to_end_flow_spec_refinement }<sup>+</sup> </span></pre><pre><span lang="EN-US">               | none_statement ) ]</span></pre><pre style="margin-right: -4.5pt;"><span lang="EN-US">   [modes_subclause ]</span></pre><pre><span lang="EN-US">   [ <b>properties</b> ( { property_association | contained_property_association }<sup>+</sup> </span></pre><pre><span lang="EN-US">     | none_statement ) ]</span></pre><pre><span lang="EN-US">   { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">   end   </span></b><i><span lang="EN-US">defining_</span></i><span lang="EN-US">component_implementation_name ;</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_component_implementation_reference ::= </span></pre><pre><span lang="EN-US">    [ package_name <b>::</b> ] component_implementation_name</span></pre>

<p class="Note"><span lang="EN-US">NOTES: The above grammar rules characterize the
common syntax for all component categories. The sections defining each of the
component categories will specify further restrictions on the syntax.</span></p>

<p class="Note"><span lang="EN-US">The <b>prototypes</b>,<b> subcomponents</b>, <b>connections</b>,
<b>calls</b>, <b>flows</b>, <b>modes</b>, and <b>properties</b> subclauses of
the component implementation are optional or if used and empty, require an explicit
empty declaration.  The latter is provided to accommodate AADL modeling
guidelines that require explicit documentation of empty subclauses. An empty
subclause declaration consists of the reserved word of the subclause and a none
statement ( <b>none ;</b> ).</span></p>

<p class="Note"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">annex_subclause</span><span lang="EN-US"> of the component
implementation is optional.</span></p>

<p class="Note"><span lang="EN-US">The <b>refines type</b> subclause of AADL V1 has
been removed.  Its role was to allow association of implementation-specific
property values to features and flow specifications declared in the component
type. The same can be achieved by contained property associations whose <b>applies
to </b>subclause names the feature or flow specification.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A component implementation name consists of a
component type identifier and a component implementation identifier separated
by a dot (“.”).  The first identifier of the defining component implementation
name must name a component type that is declared in the same package as the
component implementation, or name an <i>alias</i> to a component type in
another package.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of the component
implementation must be unique within the local namespace of the component type. 
</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_cfab821a-7ef6-4161-939d-26c412e9578b"><a name="cfab821a-7ef6-4161-939d-26c412e9578b" id="id_cfab821a-7ef6-4161-939d-26c412e9578b" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_cfab821a-7ef6-4161-939d-26c412e9578b">       
</span></span></span><span lang="EN-US"><span class="requality_text id_cfab821a-7ef6-4161-939d-26c412e9578b">Every component implementation defines a </span><i><span class="requality_text id_cfab821a-7ef6-4161-939d-26c412e9578b">local
namespace</span></i><span class="requality_text id_cfab821a-7ef6-4161-939d-26c412e9578b"> for all defining identifiers of prototypes, subcomponents,
subprogram calls, connections, flows, and modes declared within the component
implementation.  The defining identifier of a prototype, subcomponent,
subprogram call, connection, flow, or mode must be unique within this
namespace.  For example, a subcomponent and a mode cannot have the same
defining identifier within the same component implementation, or a mode with
the same defining identifier cannot be declared in a component type and a
component implementation.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_65fa330d-71df-4f04-a5bd-79d3b644dbcb"><a name="65fa330d-71df-4f04-a5bd-79d3b644dbcb" id="id_65fa330d-71df-4f04-a5bd-79d3b644dbcb" class="requality_id"></a>(N4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_65fa330d-71df-4f04-a5bd-79d3b644dbcb">       
</span></span></span><span lang="EN-US"><span class="requality_text id_65fa330d-71df-4f04-a5bd-79d3b644dbcb">This local namespace inherits the namespace of
the associated component type, i.e., defining identifiers must be unique within
the local namespace and also within the component type namespace.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Refinement identifiers of features must exist in
the namespace of the associated component type or one of the component type’s
ancestors.  Refinement identifiers of prototype, subcomponent, and connection
refinements must exist in the local namespace of an ancestor component
implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_39bfaa8e-277c-4eec-bb6f-715a55abaed2"><a name="39bfaa8e-277c-4eec-bb6f-715a55abaed2" id="id_39bfaa8e-277c-4eec-bb6f-715a55abaed2" class="requality_id"></a>(N6)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_39bfaa8e-277c-4eec-bb6f-715a55abaed2">       
</span></span></span><span lang="EN-US"><span class="requality_text id_39bfaa8e-277c-4eec-bb6f-715a55abaed2">In a component implementation extension, the
component type identifier of the component implementation being extended, which
appears after the reserved word </span><b><span class="requality_text id_39bfaa8e-277c-4eec-bb6f-715a55abaed2">extends</span></b><span class="requality_text id_39bfaa8e-277c-4eec-bb6f-715a55abaed2">, must be the same as or an
ancestor of the component type of the extension. </span> The component implementation
being extended may exist in another package.  In this case the component
implementation name is qualified with the package name.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_d798a8f6-7761-4439-aada-906c0942e8d1"><a name="d798a8f6-7761-4439-aada-906c0942e8d1" id="id_d798a8f6-7761-4439-aada-906c0942e8d1" class="requality_id"></a>(N7)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_d798a8f6-7761-4439-aada-906c0942e8d1">       
</span></span></span><span lang="EN-US"><span class="requality_text id_d798a8f6-7761-4439-aada-906c0942e8d1">When a component implementation </span><b><span class="requality_text id_d798a8f6-7761-4439-aada-906c0942e8d1">extends</span></b><span class="requality_text id_d798a8f6-7761-4439-aada-906c0942e8d1">
another component implementation, the local namespace of the extension is a
superset of the local namespace of the ancestor.  That is, the local namespace
of a component implementation inherits all the identifiers in the local
namespaces of its ancestors</span> (including the identifiers of their respective
component type namespaces).</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N8)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Within the scope of the component
implementation, subcomponent declarations, connections, subprogram call
sequences, mode transitions, and property associations can refer directly to
identifiers in the local namespace, i.e., to declared prototypes, subcomponents,
connections, and modes, as well as to required bus, data, subprogram, and
subprogram group subcomponents and features declared in the associated
component type.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N9)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype referenced by the prototype binding
declaration must exist in the local namespace of the component implementation
being extended.  In other words, prototype binding declarations may bind
prototypes of the component type and of the component implementation.</span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">A component type can be made visible in a new
namespace (package) without qualifying it with the package name by declaring it
as <b>renames</b> that refers to the component type in the original package. 
This allows an implementation to be placed in a separate package from the
component type package.  In the following example, <b>renames </b>LM::GPS
allows the type GPS to be named without a qualifying package name.  This allows
a system implementation to be added to GPS in the package LM1.    </span></p>

<p class="Note"><b><span lang="EN-US">package</span></b><span lang="EN-US"> LM1 </span><b><span lang="EN-US">public</span></b></p>

<p class="Note"><b><span lang="EN-US">renames </span></b><span lang="EN-US">LM::GPS;</span></p>

<p class="Note"><b><span lang="EN-US">system implementation</span></b><span lang="EN-US"> GPS.newimpl</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec"><a name="22518b85-be92-4cce-85b7-e9fcabf956ec" id="id_22518b85-be92-4cce-85b7-e9fcabf956ec" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec">        
</span></span></span><span lang="EN-US"><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec">The pair of identifiers separated by a dot (“.”)
following the reserved word </span><b><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec">end</span></b><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec"> must be identical to the pair of
identifiers following the reserved word </span><b><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec">implementation</span></b><span class="requality_text id_22518b85-be92-4cce-85b7-e9fcabf956ec">.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The <b>prototypes</b>,<b> subcomponents</b>, <b>connections</b>,<b>
calls</b>, <b>flows</b>, <b>modes</b>, and <b>properties</b> subclauses are
optional. If they are present and the set of feature or required subcomponent
declarations or property associations is empty, <b>none</b> followed by a
semi-colon must be present in that subclause. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_431f1280-cd49-4a6a-93f5-641d65eded9d"><a name="431f1280-cd49-4a6a-93f5-641d65eded9d" id="id_431f1280-cd49-4a6a-93f5-641d65eded9d" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_431f1280-cd49-4a6a-93f5-641d65eded9d">        
</span></span></span><span lang="EN-US"><span class="requality_text id_431f1280-cd49-4a6a-93f5-641d65eded9d">The category of the component implementation
must be identical to the category of the component type for which the component
implementation is declared.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_e774933b-353b-409f-8e2e-a63dc2595504"><a name="e774933b-353b-409f-8e2e-a63dc2595504" id="id_e774933b-353b-409f-8e2e-a63dc2595504" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e774933b-353b-409f-8e2e-a63dc2595504">        
</span></span></span><span lang="EN-US"><span class="requality_text id_e774933b-353b-409f-8e2e-a63dc2595504">If the component implementation extends another
component implementation, the category of both must match, i.e., they must be
identical or the category being extended must be </span><b><span class="requality_text id_e774933b-353b-409f-8e2e-a63dc2595504">abstract</span></b><span class="requality_text id_e774933b-353b-409f-8e2e-a63dc2595504">.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The classifier being extended in a component
implementation extension may include prototype bindings.  There must be at most
one prototype binding for each unbound prototype.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the component type of the component
implementation contains a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">requires_modes_subclause</span><span lang="EN-US"> then  the component implementation must not contain any modes
subclause.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If modes are declared in the component type,
then modes cannot be declared in component implementations.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If modes or mode transitions are declared in the
component type, then mode transitions can be added in the component
implementation. These mode transitions may refer to event or event data ports
of the component type and of subcomponents.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The category of a subcomponent being refined
must match the category of the refining subcomponent declaration, i.e., they
must be identical or the category being refined must be <b>abstract</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">For all other refinement declarations the categories must match (see
the respective sections).</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Component implementations and component implementation extensions
must not refine prototypes declared in a component type.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Standard Properties</span></p>

<pre><span lang="EN-US">Classifier_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match,  Type_Extension, Signature_Match)</span></pre><pre><span lang="EN-US">Prototype_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match)</span></pre><pre><span lang="EN-US">Classifier_Matching_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Equivalence, Subset, Conversion, Complement)</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component implementation represents the internal structure of a
component through subcomponent declarations. Interaction between subcomponents
is expressed by the connections, flows, and subprogram call sequences. Mode
declarations represent alternative runtime configurations (internal structure)
and alternative execution behavior (interaction between subcomponents).  A
component implementation also has property values to express its non-functional
attributes such as safety level or execution time which can also vary by mode. 
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Each component implementation is associated with a component type
and provides a realization of its features (interface).  A component type can
have multiple implementations. <span class="requality_text id_eb70dbc0-8e64-4eb4-ab2f-40506c2c61f5"><a name="eb70dbc0-8e64-4eb4-ab2f-40506c2c61f5" id="id_eb70dbc0-8e64-4eb4-ab2f-40506c2c61f5" class="requality_id"></a>A component implementation can be viewed as a
component variant with the same interface but with differing property values
that characterize the differences between implementations without exposing the
internals of their realization.  This can be achieved by placing the component
implementation declaration without subcomponents and connections in the public
section of an AADL package, and a component implementation declaration with
subcomponents and connections for the same component in the private section of
an AADL package. </span></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The actual system being modeled by component types and component
implementations may contain subcomponents, some of which may contain
subcomponents themselves.  The subcomponent containment hierarchy reflects the actual
system structure.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component implementation that is an extension of another inherits
all prototypes, subcomponents, connections, subprogram call sequences, flow
sequences (flow implementations and end-to-end flows), modes, mode transitions,
and property associations from its ancestors as well as features, and  associations,
from its associated component type (and that component type’s ancestors).  For
annex subclauses  each annex defines whether annex declarations are inherited. 
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component implementation extension can refine prototypes and subcomponents
previously declared in ancestor component implementations by supplying component
classifiers, and by associating new property values.  A component
implementation extension can refine connections, flows, and modes of its
ancestor component implementations by associating new property values.  A
component implementation extension can refine features of its associated
component type (and that component type’s ancestors) by associating new
property values to them.  A component implementation being extended may include
declaration of prototype bindings.  If prototype bindings are declared for a
subset of the prototypes, then only the prototypes without binding can be bound
 in component implementation extensions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component implementation extension can also add prototypes, subcomponents,
connections, subprogram call sequences, flow sequences, modes, property
associations, and annex subclauses.  This extension capability supports
evolutionary development and modeling of system families by declaring partially
complete component implementations that get refined in extensions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;"><span class="requality_text id_762e47ff-0a3e-47fb-884e-2b63500d1a2e"><a name="762e47ff-0a3e-47fb-884e-2b63500d1a2e" id="id_762e47ff-0a3e-47fb-884e-2b63500d1a2e" class="requality_id"></a>(12)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_762e47ff-0a3e-47fb-884e-2b63500d1a2e">  </span></span></span><span lang="EN-US"><span class="requality_text id_762e47ff-0a3e-47fb-884e-2b63500d1a2e">A
descendent component implementation is said to contain all subcomponents whose
identifiers appear in its local namespace, i.e., subcomponents declared in the
component implementation and any of its ancestors.</span>  In other words, an instance
of a component implementation extension contains instances of declared and
inherited subcomponents, features, connections, subprogram call sequences, flow
sequences, and modes.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Properties
are predefined for each of the component categories and will be described in
the appropriate sections. See Section 11.3 regarding rules for determining
property values. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm; page-break-after: auto;"><span lang="EN-US">Processing Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component implementation denotes a set of actual system components, existing or
potential, that are compliant with the component implementation declaration as
well as the associated component type.  That is, the actual components denoted
by a component implementation declaration are always compliant with the
functional interface specified by the associated component type declaration.  Actual
components denoted by different implementations for the same component type
differ in additional details such as internal structure or behaviors; these
differences may be specified using properties. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
general, two actual components that comply with the same component type and
component implementation are not necessarily substitutable for each other in an
actual system.  This is because an AADL specification may be legal but not
specify all of the characteristics that are required to ensure total
correctness of a final assembled system.  For example, two different versions
of a piece of source text might both comply with the same AADL specification,
yet one of them may contain a programming defect that results in unacceptable
runtime behavior.  Compliance with this standard alone is not sufficient to
guarantee overall correctness of a actual system.  </span></p>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"><a name="db5c6dea-8e25-460b-a45a-221dda37920b" id="id_db5c6dea-8e25-460b-a45a-221dda37920b" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">ImplementationExample</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">public</span></span></b></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">data</span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> Bool_Type</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">end </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> </span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">thread </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">DriverModeLogic</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">features</span></span></b></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">   </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">BreakPedalPressed
:</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> in data port </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">   </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">ClutchPedalPressed
:</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> in data port </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">   </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Activate
:</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> in data port </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">   </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Cancel
:</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> in data port </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">   </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">OnNotOff
:</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> in data port </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">   </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">CruiseActive
:</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> out data port </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Bool_Type;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">end </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">DriverModeLogic</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">;</span></b></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> </span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">-- Two implementations whose source texts
use different variable names for</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">-- their cruise active port</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">thread implementation </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">DriverModeLogic.Simulink</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">properties</span></span></b></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">  </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Dispatch_Protocol=&gt;Periodic;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">  Period=&gt; 10 ms;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">  Source_Name =&gt; “CruiseControlActive”
</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">applies to </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">CruiseActive;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">end </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">DriverModeLogic.Simulink</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">;</span></b></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b"> </span></span></b></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">thread implementation </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">DriverModeLogic.C</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">properties</span></span></b></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">  </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">Dispatch_Protocol=&gt;Periodic;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">  Period=&gt; 10 ms;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">  Source_Name =&gt; “CCActive” </span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">applies
to </span></b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">CruiseActive;</span></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">end </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">DriverModeLogic.C</span><b><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">;</span></b></span></p><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">end </span></span></b><span lang="EN-US"><span class="requality_text id_db5c6dea-8e25-460b-a45a-221dda37920b">ImplementationExample;</span></span></p>

<p class="ExampleText"><b><span lang="EN-US"> </span></b></p>

<h2><a name="_Toc318320296"></a><a name="_Ref208221742"></a><a name="_Ref179954577"></a><a name="_Toc169684072"></a><a name="_Toc167033721"></a><a name="_Toc168661839"></a><a name="_Ref166317492"></a><a name="_Ref164846217"></a><a name="_Toc86725653"></a><a name="_Toc86220690"></a><a name="_Toc86220227"></a><a name="_Toc86219845"></a><a name="_Toc86219740"></a><a name="_Toc79294975"></a><a name="_Ref56406488"></a><a name="_Ref46718442"></a><a name="_Ref46292593"></a><a name="_Toc27797750"></a><a name="_Toc27449578"><span lang="EN-US">4.5<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Subcomponents</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>subcomponent</i> represents a component contained within
another component, i.e., declared within a component implementation. 
Subcomponents contained in a component implementation may be instantiations of
component implementations that contain subcomponents themselves.  This results
in a component containment hierarchy that ultimately describes the whole actual
system as a system instance.  Figure 4 provides an illustration of a
containment hierarchy using the graphical AADL notation (see </span><span lang="EN-US">Appendix D </span><span lang="EN-US">). In this example, Sys1
represents a system.  The implementation of the system contains subcomponents
named C3 and C4.  Component C3, a subcomponent in Sys1’s implementation,
contains subcomponents named C1 and C2. Component C4, another subcomponent in
Sys1’s implementation, contains a second set of subcomponents named C1 and C2. 
The two subcomponents named C1 and those named C2 do not violate the unique
name requirement.  They are unique with respect to the local namespace of their
containing component’s local namespace.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="490" height="131" src="imgs/image016.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320413"></a><a name="_Toc167033805"></a><a name="_Toc86591126"></a><a name="_Toc79295053"></a><a name="_Ref26938826"><span lang="EN-US">Figure </span></a><span lang="EN-US">4</span><span lang="EN-US">
Component Containment Hierarchy</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subcomponent declaration may resolve required subcomponent access
declared in the component type of the subcomponent. For details on required
subcomponent access see Section 8.4.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subcomponent can be declared to apply to specific modes (rather
than all modes) defined within the component implementation.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subcomponents can be refined as part of component implementation
extensions.  Refinement allows classifier references to be completed, abstract
subcomponents to be refined into one of the concrete categories, and
subcomponent property values to be associated.  The resulting refined
subcomponents can be refined themselves.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An array of subcomponents can be declared to represent a set of
subcomponents with the same component type.  This array may have one or more
dimensions.    </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="SubComponent"><span lang="EN-US">subcomponent ::=</span></a></pre><pre><span lang="EN-US">    <i>defining_</i><i>subcomponent</i>_identifier : </span></pre><pre><span lang="EN-US">       component_category </span></pre><pre><span lang="EN-US">     [ unique_component_classifier_reference [prototype_bindings] </span></pre><pre><span lang="EN-US">       | <i>prototype</i>_identifier ]</span></pre><pre><span lang="EN-US">      [ array_dimensions [ array_element_implementation_list ] ] </span></pre><pre><span lang="EN-US">       [ <b>{</b> { <i>subcomponent</i>_property_association </span></pre><pre><span lang="EN-US">            | contained_property_association }<sup>+</sup> <b>} </b>] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ component_in_modes ]<b> ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">subcomponent_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subcomponent</i>_identifier : <b>refined to</b></span></pre><pre><span lang="EN-US">       component_category </span></pre><pre><span lang="EN-US">         [ unique_component_classifier_reference [ prototype_bindings ] </span></pre><pre><span lang="EN-US">         | <i>prototype</i>_identifier ]</span></pre><pre><span lang="EN-US">         [ array_dimensions [ array_element_implementation_list ] ]</span></pre><pre><span lang="EN-US">       [ <b>{</b> { <i>subcomponent</i>_property_association </span></pre><pre><span lang="EN-US">             | contained_property_association }<sup>+</sup> <b>} </b>]</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ component_in_modes ]<b> ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_component_classifier_reference ::=</span></pre><pre><span lang="EN-US">        ( unique_component_type_reference </span></pre><pre><span lang="EN-US">        | unique_component_implementation_reference )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_dimensions ::=</span></pre><pre><span lang="EN-US">    { array_dimension  }<sup>+</sup> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_dimension ::=</span></pre><pre><span lang="EN-US">    <b>[</b> [ array_dimension_size ] <b>]</b> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_dimension_size ::= </span></pre><pre><span lang="EN-US">   numeral | unique_property_constant_identifier | unique_property_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_element_implementation_list ::=</span></pre><pre><span lang="EN-US">    <b>(</b> unique_component_implementation_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">      { <b>, </b>unique_component_implementation_reference [ prototype_bindings ] }<sup>*</sup> <b>)</b> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">-- array selection used in contained property association and references</span></pre><pre><span lang="EN-US">array_selection_identifier ::=</span></pre><pre><span lang="EN-US">    identifier array_selection</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_selection ::=</span></pre><pre><span lang="EN-US">    {<b> [ </b>selection_range <b>] </b>}<sup>+</sup>    </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">selection_range ::=</span></pre><pre><span lang="EN-US">    numeral [ <b>..</b> numeral ]</span></pre>

<p class="Note"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">The above grammar rules characterize the common
syntax for subcomponent of all component categories. The sections defining each
of the component categories will specify further restrictions on the syntax.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8561a159-b48e-496d-b272-ce3648009b9a"><a name="8561a159-b48e-496d-b272-ce3648009b9a" id="id_8561a159-b48e-496d-b272-ce3648009b9a" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8561a159-b48e-496d-b272-ce3648009b9a">       
</span></span></span><span lang="EN-US"><span class="requality_text id_8561a159-b48e-496d-b272-ce3648009b9a">The defining identifier of a subcomponent
declaration placed in a component implementation must be unique within the
local namespace of the component implementation that contains the
subcomponent.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of a subcomponent
refinement must exist as a defining subcomponent identifier in the local
namespace of an ancestor component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The component type identifier or the component
implementation name of a component classifier reference must exist in the
package namespace.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier of a prototype
reference must exist in the local name space of the component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype referenced by the prototype binding
declarations must exist in the local namespace of the component classifier
being referenced.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The modes named in the <b>in modes</b> statement
of a subcomponent must refer to modes in the component implementation that
contains the subcomponent or its component type.  The modes named in the <b>in
modes</b> statement of a property association of a subcomponent must refer to
modes of the subcomponent, or in the case of a contained property association
to modes of the last component in the component path (see Section </span><span lang="EN-US">11.3</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The category of the subcomponent declaration
must match the category of its corresponding component classifier reference or
its prototype reference, i.e., they must be identical, or in the case of a
classifier reference the referenced classifier category may be <i>abstract</i>.
</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The component classifier reference of a
subcomponent declaration may include prototype bindings for a subset or all of
the component classifier prototypes.  This represents an unnamed component
classifier extension of the referenced classifier.</span></p>

<p class="Legalityrule"><a name="_Ref166466137"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In a subcomponent refinement declaration the
component category may be refined from <b>abstract </b>to one of the concrete
component categories. Otherwise the category must be the same as that of the
subcomponent being refined.</span></a></p>

<p class="Legalityrule"><a name="_Ref166469025"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Substitution_Rule</span><span lang="EN-US"> property specifies the rule to be applied when a refinement
supplies a classifier and the original subcomponent declaration already has a
component classifier.  This property can be applied to individual subcomponents
or features, or it can be inherited from classifiers. The following rules are
supported:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Match</span><span lang="EN-US">: The component type of the refinement must be identical to the component
type of the classifier being refined.  If the original declaration specifies a
component implementation, then any implementation of that type can replace this
original implementation.  This is the default rule.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Type_Extension</span><span lang="EN-US">: Any component classifier whose component type is an extension of
the component type of the classifier in the subcomponent being refined is an
acceptable substitute. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Signature_Match:</span><span lang="EN-US"> The component type of the refinement must match the signature of
the component type of the classifier being refined. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of a signature match, the component
type of the subcomponent being refined must have a subset of the features of
the component type in the refinement. The features are compared by name
matching; the feature categories and direction (in data port, provides data
access, etc.) must be the same and any feature classifier must match according
to rules defined for</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Classifier_Match</span><span lang="EN-US">.  In addition, if flow specifications are present in the component
type being refined, then the component type of the refinement must have at
least the same set of flow specifications.  Flow specifications with the same
name must have the same source and destination ports. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The component category and optional component
classifier or prototype reference can be followed by a set of array dimensions
to define the subcomponent as an array of actual subcomponents.    </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ba1ee5d8-ccb2-4480-8188-da7a115b516f"><a name="ba1ee5d8-ccb2-4480-8188-da7a115b516f" id="id_ba1ee5d8-ccb2-4480-8188-da7a115b516f" class="requality_id"></a>(L7)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ba1ee5d8-ccb2-4480-8188-da7a115b516f">        
</span></span></span><span lang="EN-US"><span class="requality_text id_ba1ee5d8-ccb2-4480-8188-da7a115b516f">The array size specification for the dimensions
is optional.  In this case the array declaration is considered incomplete.  If
the size of the array dimension is specified it must be specified for all
dimensions in the same declaration.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">When refining a subcomponent array the number of
dimensions of the array cannot be changed, but the array size can be specified
for each dimension if it was not specified in the subcomponent declaration
being refined.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">When the subcomponent is declared as an array
with array dimension sizes then a list of component implementations can be
supplied, one for each element of the array.  Different implementations of the same
component type can be chosen.  The number of elements in the list must
correspond to the number of elements in the component array.  In the case of
multi-dimensional arrays, the list elements are assigned by incrementing the
index of the last dimension first.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Selecting index ranges in one or more dimensions of an array is only
possible if the size of the array for these dimensions is already defined.  The
index range of a dimension is from 1 to the size of the dimension.  Specification
of array index ranges is limited to the <b>applies to</b> subclause of
contained property associations.  Specification of a single array element is
limited to the <b>applies to</b> subclause of contained property associations
and to the values of <b>reference</b> properties.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">An array element implementation list is valid only if (a) the
subcomponent classifier is a component type and (b) all component
implementations in the list are implementations of the specified type.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">The classifier of a subcomponent cannot
recursively contain subcomponents with the same component classifier.  In other
words, there cannot be a cyclic containment dependency between components.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Standard Properties</span></p>

<pre><span lang="EN-US">Classifier_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match,  Type_Extension, Signature_Match)</span></pre><pre><span lang="EN-US">Acceptable_Array_Size: <b>list of </b>Size_Range </span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subcomponents declared in a component implementation are considered
to be contained in the component implementation. Contained subcomponents are
instantiated when the containing component implementation is instantiated. 
Thus, the component containment hierarchy describes the hierarchical structure
of the actual system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component implementation can contain <i>incomplete</i>
subcomponent declarations, i.e., subcomponent declarations with no component classifier
references, or if the component classifier reference only consists of a component
type name for a component type with more than one component implementation.  A
subcomponent declaration is also incomplete when it consists of the declaration
of an array of subcomponents for which the array sizes are not specified.  This
is particularly useful during early design stages where details may not be
known or decided.  Such incomplete subcomponent declarations can be refined in
component implementation extensions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subcomponent declaration can be parameterized by referring to a
prototype.  In this case the component category and component classifier bound
to the prototype is used when the system is instantiated.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subcomponent declaration can reference a component classifier with
prototype bindings.  The prototype binding can refer to other classifiers or to
a prototype of the component type or implementation that contains the
subcomponent.  In the latter case, the prototype actual is passed down levels
of the component hierarchy and effectively allows the system subcomponents to
be configured from a higher level component.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component classifier reference with prototype bindings that refer to component
classifiers effectively is an unnamed extension of the classifier being
referenced.  In other words, it could have been declared as a component type or
component implementation extension with a new defining identifier and this
identifier could have been referenced in the subcomponent declaration.  Two
unnamed component classifier extensions are not considered to be extensions of
each other.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
optional </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes</span><span lang="EN-US"> subclause specifies the modes in which the subcomponent is active. 
An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes</span><span lang="EN-US"> in a subcomponent refinement replaces previously specified subsets
of modes.  A subcomponent or subcomponent refinement without </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes </span><span lang="EN-US">specifies that the subcomponent is active in all modes.  The <b> </b></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes </span><span lang="EN-US">refer to modes of the component implementation that contains the
subcomponent or to the modes of its component type.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes </span><span lang="EN-US">may map mode identifiers of the containing component to the mode
identifiers specified in the <b>requires modes </b>clause of the subcomponent’s
component type (see Section </span><span lang="EN-US">12</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
subcomponent can have property values associated to itself, or a contained
property association can be declared for one of the subcomponents in its
containment hierarchy, as well as those subcomponents’ features, modes,
subprogram call sequences, connections, and flows, or model elements in any
annex subclause of a subcomponent (see Section 11.3). Subcomponent refinements
may declare property associations – that override the property values declared
in the subcomponent being refined.  Property associations can have </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes</span><span lang="EN-US"> statements
that refer to modes of the component implementation that contains the
subcomponent, or in the case of contained property associations also to modes
of the last subcomponent named in the path of the <b>applies to</b> (see
Section 11.3).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
arrays of subcomponents are used to simplify the declaration of a multiplicity of
subcomponents with the same classifier without declaring each of them
separately.  If a size of a subcomponent array is not known the array is
incomplete and is assumed to have one element for the purpose of system
instances of incomplete models. A subcomponent array can only be refined by
adding array sizes to the dimensions if they are without a size.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">All
elements of a subcomponent array have the same component classifier, i.e., they
are of the same kind.  A subcomponent array can also be declared to have the
same component type, but its elements vary in their implementation, e.g., to
represent variants in an N-Version redundancy pattern. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
property association declared with a subcomponent array applies to each element
in the array. Contained property associations declared in the enclosing
component implementation can be used to associate different property values to
different elements or subsets of the subcomponent array. </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Processing Requirements and
Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the subcomponent declaration references a component type and the type has a
single implementation then a method of processing (tool) is permitted to
generate a complete system instance by choosing the single implementation even
if it is not named. If the referenced component type has multiple
implementations then the implementation must be explicitly referenced. 
However, some project may impose design constraints that require modelers to
completely specify such classifier references.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
example illustrates modeling of source text data types as data component types
without any implementation details.  It illustrates the use of <b>package</b>
to group data component type declarations.  It illustrates both component
classifier references to component types and to component implementations.  It
illustrates the use of ports as well as required and provided data access, and
required subprogram access.  In that context it illustrates the ways of
resolving required access.  The Data Modeling Annex (</span><span lang="EN-US">Annex Document B</span><span lang="EN-US">) provides guidance on how
to effectively represent data models of applications in AADL. </span></p>

<p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"><a name="12c78c8d-6938-4c17-b5a1-2c5efd7e9514" id="id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514" class="requality_id"></a>package</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sampling</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">public</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">properties</span></b></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">      Source_Data_Size =&gt; 16 Bytes;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample_Set</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">properties</span></b></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">      Source_Data_Size =&gt; 1 MByte;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data implementation</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Set.impl</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">subcomponents</span></b></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">      Data_Set: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample ;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample_Set.impl;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Dynamic_Sample_Set </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">extends</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Set</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Dynamic_Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data implementation</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Dynamic_Sample_Set.impl </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">extends</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample_Set.impl</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">properties</span></b></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">      </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Source_Data_Size
=&gt; 8 Bytes </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">applies to</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Data_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   end Dynamic_Sample_Set.impl;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sampling;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">package </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">SamplingTasks</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">public</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">with </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Sampling;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Init_Samples </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">features</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   OrigSet : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">requires data access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sampling::Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   SampleSet : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">requires data
access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sampling::Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Init_Samples;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Collect_Samples </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">features</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Input_Sample : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">in event data
port</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sampling::Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   SampleSet : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">requires data
access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sampling::Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Filtering_Routine: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">requires subprogram
access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample_Subprogram;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Collect_Samples;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread implementation</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Collect_Samples.Batch_Update </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">properties</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Source_Name =&gt;
″InSample″ </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">applies to </span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Input_Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Collect_Samples.Batch_Update;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Distribute_Samples </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">features</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   SampleSet : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">requires data
access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sampling::Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   UpdatedSamples : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">out event data
port</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sampling::Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Distribute_Samples;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">process</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Manager </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">features</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Input_Sample: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">in event data port</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sampling::Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   External_Samples: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">requires data
access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sampling::Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Result_Sample: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">out event data port</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sampling::Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Manager;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Sample_Manager.Slow_Update </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">subcomponents</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Samples: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sampling::Sample_Set;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Init_Samples : </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Init_Samples;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   -- the required access is resolved to
a subcomponent declaration</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Collect_Samples: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Collect_Samples.Batch_Update;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Distribute: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">thread</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Distribute_Samples;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   Sample_Filter: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">subprogram</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Subprogram.Simple;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">connections</span></span></b></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   ISSSConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">access </span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Samples
&lt;-&gt; Init_Samples.SampleSet;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   ISOSConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data access </span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">External_Samples
&lt;-&gt; Init_Samples.OrigSet;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   CSSSConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Samples &lt;-&gt;
Collect_Samples.SampleSet;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   CSISConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">port</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Input_Sample
-&gt; Collect_Samples.Input_Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   DSSConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">data access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> Samples &lt;-&gt;
Distribute.SampleSet;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   DUSConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">port</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Distribute.UpdatedSamples -&gt; Result_Sample;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">   CSFRConn: </span><b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">subprogram access</span></b><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Filter &lt;-&gt; Collect_Samples.Filtering_Routine;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end</span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">
Sample_Manager.Slow_Update;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514"> </span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">subprogram </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Sample_Subprogram</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Sample_Subprogram;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">subprogram implementation </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Sample_Subprogram.Simple</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">Sample_Subprogram.Simple;</span></span></p><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">end </span></span></b><span lang="EN-US"><span class="requality_text id_12c78c8d-6938-4c17-b5a1-2c5efd7e9514">SamplingTasks;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><a name="_Toc86725654"></a><a name="_Toc86220691"></a><a name="_Toc86220228"></a><a name="_Toc86219846"></a><a name="_Toc86219741"></a><a name="_Toc79294976"></a><a name="_Ref78180620"></a><a name="_Toc169684073"></a><a name="_Toc168661840"></a><a name="_Toc167033722"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;"> 
</span></span><span lang="EN-US">This example illustrates the use of arrays in
defining a triple redundancy pattern with a voter.  The pattern is defined as
an <b>abstract </b>component (see Section </span></a><span lang="EN-US">4.6</span><span lang="EN-US">) that uses data ports. The connections
are defined with a connection pattern property to indicate how the elements of
the source array are connected to the destination.  Each instance of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">MyProcess</span><span lang="EN-US">
is connected to a separate port of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Voter</span><span lang="EN-US">.  Note that the
number of replicates could be kept flexible by specifying the array dimension
size through a property.</span></p>

<p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"><a name="72d09fae-038d-41e9-8be6-b5d0f6a04835" id="id_72d09fae-038d-41e9-8be6-b5d0f6a04835" class="requality_id"></a>package</span></span></b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Redundancy</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">public</span></span></b></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">abstract</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Triple</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   features </span></span></b></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     input:</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> in</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">data port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     output: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">out data port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">;</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></b></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   end</span></span></b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Triple;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">abstract implementation</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Triple.impl</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">subcomponents </span></b></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     MyProcess:</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> abstract </span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">Calculate
[3];</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     MyVoter: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">abstract</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Voter;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">connections</span></b></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">extinput: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> input
-&gt; MyProcess.input </span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">                     { Connection_Pattern
=&gt; One_To_All; };</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">tovoter: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">
MyProcess.output -&gt; MyVoter.input </span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">                     { Connection_Pattern
=&gt; One_To_One; };</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">extoutput: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">
MyVoter.output -&gt; output; </span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   end</span></span></b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Triple.impl;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">abstract</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Calculate</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   features </span></span></b></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     input:</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> in</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">data port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     output: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">out data port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">;</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></b></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   end</span></span></b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Calculate;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">abstract</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Voter</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   features </span></span></b></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     input:</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> in</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">data port </span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">[3];</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">     output: </span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">out data port</span></b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">;</span><b><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> </span></b></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">   end</span></span></b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Voter;</span></span></p><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835">end</span></span></b><span lang="EN-US"><span class="requality_text id_72d09fae-038d-41e9-8be6-b5d0f6a04835"> Redundancy;</span></span></p>

<h2><a name="_Toc318320297"></a><a name="_Ref212888448"><span lang="EN-US">4.6<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Abstract Component</span></a><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The component category <b>abstract</b> represents an abstract
component.  Abstract components can be used to represent component models.  Abstract
component can contain any component and can be contained in any component. The
abstract component category can later be refined into one of the concrete
component categories: any of the software components, hardware components, and
composite components.  When an abstract component is refined into a concrete
component category it must adhere to the containment rules imposed by the
concrete category. For example, an abstract subcomponent of a process can only
be refined into a thread or thread group.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: -31.15pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="105" style="width: 78.95pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="285" style="width: 213.55pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="180" style="width: 135.35pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="105" style="width: 78.95pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">abstract</span></b></p>
  </td>
  <td width="285" valign="top" style="width: 213.55pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_4b3cf245-2d0e-4ad4-8a16-68ac104eef73"><a name="4b3cf245-2d0e-4ad4-8a16-68ac104eef73" id="id_4b3cf245-2d0e-4ad4-8a16-68ac104eef73" class="requality_id"></a>Features: </span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">       <span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1"><a name="f9c9c965-b6be-4a5b-9401-5b383db386c1" id="id_f9c9c965-b6be-4a5b-9401-5b383db386c1" class="requality_id"></a> 
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">port</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">feature group</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">provides data access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">provides subprogram access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">provides subprogram group access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">provides bus access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">requires data access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">requires subprogram access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">requires subprogram group access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">requires bus access</span></span></p><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_f9c9c965-b6be-4a5b-9401-5b383db386c1">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_0b1d9bb8-14e5-4522-8a87-f8eaba66355a"><a name="0b1d9bb8-14e5-4522-8a87-f8eaba66355a" id="id_0b1d9bb8-14e5-4522-8a87-f8eaba66355a" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_0b1d9bb8-14e5-4522-8a87-f8eaba66355a">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_0b1d9bb8-14e5-4522-8a87-f8eaba66355a">Modes: yes</span></span></p><span class="requality_text id_0b1d9bb8-14e5-4522-8a87-f8eaba66355a">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_0b1d9bb8-14e5-4522-8a87-f8eaba66355a">Properties: yes</span></span></p>
  </td>
  <td width="180" style="width: 135.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_fc1121b7-011d-4bff-9f3a-136e2a8a1d14"><a name="fc1121b7-011d-4bff-9f3a-136e2a8a1d14" id="id_fc1121b7-011d-4bff-9f3a-136e2a8a1d14" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae"><a name="a0e80c51-cb5b-41f0-9c30-ecc38c54edae" id="id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">data</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">subprogram</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">subprogram group</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">thread</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">thread group</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">process</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">processor</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">virtual processor</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">memory</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">bus</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">virtual bus</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">device</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">system</span></span></p><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_a0e80c51-cb5b-41f0-9c30-ecc38c54edae">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e"><a name="7ee05543-f4c6-43fa-be6d-b093c21faa9e" id="id_7ee05543-f4c6-43fa-be6d-b093c21faa9e" class="requality_id"></a>Subprogram calls: yes</span></span></p><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">Connections: yes</span></span></p><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">Flows: yes</span></span></p><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">Modes: yes</span></span></p><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_7ee05543-f4c6-43fa-be6d-b093c21faa9e">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_9895ac6a-0b95-40a0-9706-52407e2a8366"><a name="9895ac6a-0b95-40a0-9706-52407e2a8366" id="id_9895ac6a-0b95-40a0-9706-52407e2a8366" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_9895ac6a-0b95-40a0-9706-52407e2a8366">        
</span></span></span><span lang="EN-US"><span class="requality_text id_9895ac6a-0b95-40a0-9706-52407e2a8366">An </span><b><span class="requality_text id_9895ac6a-0b95-40a0-9706-52407e2a8366">abstract</span></b><span class="requality_text id_9895ac6a-0b95-40a0-9706-52407e2a8366"> component type declaration
can contain feature declarations (including abstract feature declarations),</span>
<span class="requality_text id_95e0a23e-73eb-4a65-8785-5481654d7999"><a name="95e0a23e-73eb-4a65-8785-5481654d7999" id="id_95e0a23e-73eb-4a65-8785-5481654d7999" class="requality_id"></a>flow declarations, as well as property associations. </span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_fe53878d-8f59-4cdf-8d63-be26920ea056"><a name="fe53878d-8f59-4cdf-8d63-be26920ea056" id="id_fe53878d-8f59-4cdf-8d63-be26920ea056" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_fe53878d-8f59-4cdf-8d63-be26920ea056">        
</span></span></span><span lang="EN-US"><span class="requality_text id_fe53878d-8f59-4cdf-8d63-be26920ea056">An </span><b><span class="requality_text id_fe53878d-8f59-4cdf-8d63-be26920ea056">abstract</span></b><span class="requality_text id_fe53878d-8f59-4cdf-8d63-be26920ea056"> component implementation can
contain subcomponent declarations of any category.</span>  Certain combinations of
subcomponent categories are only acceptable if they are acceptable in one of
the concrete component categories.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_1112f58a-380f-465a-8ad0-138157fbf64a"><a name="1112f58a-380f-465a-8ad0-138157fbf64a" id="id_1112f58a-380f-465a-8ad0-138157fbf64a" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_1112f58a-380f-465a-8ad0-138157fbf64a">        
</span></span></span><span lang="EN-US"><span class="requality_text id_1112f58a-380f-465a-8ad0-138157fbf64a">An </span><b><span class="requality_text id_1112f58a-380f-465a-8ad0-138157fbf64a">abstract</span></b><span class="requality_text id_1112f58a-380f-465a-8ad0-138157fbf64a"> component implementation can
contain a modes subclause, a connections subclause, a flows subclause, and
property associations.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An <b>abstract</b> subcomponent can be contained
in the implementation of any component category.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If an <b>abstract</b> subcomponent is refined to
a concrete category, the concrete category must be acceptable to the component
implementation category whose subcomponent is being refined.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An <b>abstract</b> subcomponent can be declared
as an array of subcomponents.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If an <b>abstract</b> component type is refined
to a concrete category, the features, modes, and flow specifications of the
abstract component type must be acceptable for the concrete component type.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If an <b>abstract</b> component implementation
is refined to a concrete category, the subcomponents, call sequences, modes,
flow implementations, and end-to-end flows of the abstract component
implementation must be acceptable for the concrete component implementation.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <b>abstract</b> component can have property associations of
properties that apply to any concrete category.  However, when refined to a concrete
category, properties that do not apply to the concrete category will be
ignored. A method of processing may provide a warning about ignored properties.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The component of category <b>abstract</b> represents an abstract
component.  It can be used to represent conceptual architectures.  This
abstract component can be refined into a runtime architecture by refining the
component category into a software, composite, or hardware component.  Such a
refinement from a conceptual architecture to a runtime architecture is
illustrated in the example below.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Alternatively, the conceptual architecture can be defined in terms
of abstract components and the runtime architecture can be defined separately
in terms of threads and processes.  A user-defined property of the <b>reference</b>
property type can be used to specify the mapping of conceptual components to
runtime architecture components.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Examples</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A conceptual architecture and its refinement into a runtime
architecture.</span></p>

<p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"><a name="63d2194d-535e-4d6b-a147-2f198283066d" id="id_63d2194d-535e-4d6b-a147-2f198283066d" class="requality_id"></a>package </span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">CarSystem</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">public</span></span></b></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">bus </span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">Manifold</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end </span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">Manifold;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">abstract</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> car</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
car;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">abstract implementation</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> car.generic</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">subcomponents</span></span></b></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">  PowerTrain: </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">abstract</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> power_train;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">  ExhaustSystem: </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">abstract</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
exhaust_system;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
car.generic; </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">abstract</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> power_train</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">features</span></span></b></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">  exhaustoutput: </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">requires bus
access</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> Manifold;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
power_train; </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">abstract</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> exhaust_system</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">features</span></span></b></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">  exhaustManifold: </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">provides bus
access</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> Manifold;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
exhaust_system;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">-- runtime architecture</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">system</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> carRT </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">extends</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> car</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
carRT;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> carRT.impl </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">   </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">extends</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> car.generic </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">subcomponents</span></span></b></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">    PowerTrain : </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">refined to
system</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> power_train;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">    ExhaustSystem : </span><b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">refined
to system</span></b><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d"> exhaust_system; </span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end</span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">
carRT.impl;</span></span></code></p><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">end </span></span></b><span lang="EN-US"><span class="requality_text id_63d2194d-535e-4d6b-a147-2f198283066d">CarSystem;</span></span></code></p>

<p class="ExampleText"><code><span lang="EN-US"> </span></code></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320298"></a><a name="_Ref208067931"></a><a name="_Toc169684074"></a><a name="_Toc167033723"></a><a name="_Toc168661841"></a><a name="_Toc176859187"></a><a name="_Toc177997619"></a><a name="_Toc178064169"></a><a name="_Toc178094519"></a><span lang="EN-US">4.7<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Prototypes</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Prototypes represent parameterization of component type, component
implementation, and feature group type declarations.  They allow classifiers
and features to be supplied when a component type, component implementation, or
feature group is being extended or being used in a subcomponent declaration. 
The component classifier prototypes can be referenced in place of classifiers
in feature declarations, in subcomponent declarations.  The feature prototypes
can be referenced in abstract feature declarations. Prototypes can also be
referenced as actuals in prototype bindings; this allows parameterization via
prototype to be propagated down the system hierarchy.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre><a name="Prototypes"><span lang="EN-US">prototype ::= </span></a></pre><pre><span lang="EN-US">    <i>defining_prototype</i>_identifier <b>:</b> </span></pre><pre><span lang="EN-US">      ( component_prototype </span></pre><pre><span lang="EN-US">      | feature_group_type_prototype</span><span lang="EN-US"> </span></pre><pre><span lang="EN-US">      | feature_prototype ) </span></pre><pre><span lang="EN-US">      [ <b>{</b> { <i>prototype</i>_property_association }<sup>+</sup> <b>} </b>] <b>; </b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_prototype ::= </span></pre><pre><span lang="EN-US">    component_category [ </span><span lang="EN-US">unique_component_classifier_reference ] [ <b>[] </b>]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_type_prototype ::=</span></pre><pre><span lang="EN-US">    </span><b><span lang="EN-US">feature group</span></b><span lang="EN-US"> [ unique_feature_group_type_reference ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_prototype ::=</span></pre><pre><span lang="EN-US">    </span><span lang="EN-US">[ <b> in </b>| <b>out </b>] <b>feature</b> [unique_component_classifier_reference ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">prototype_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_prototype</i>_identifier <b>:</b> <b>refined to </b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">(<b> </b>component_prototype </span><span lang="EN-US"> </span></pre><pre><span lang="EN-US">      | feature_group_type_prototype </span></pre><pre><span lang="EN-US">      | feature_prototype ) </span></pre><pre><span lang="EN-US">      [ <b>{</b> { <i>prototype</i>_property_association }<sup>+</sup> <b>} </b>]<b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="DE">prototype_bindings ::=</span></pre><pre><span lang="DE">    </span><b><span lang="DE" style="font-size: 9pt;">(</span></b><span lang="DE"> prototype_binding { <b>, </b>prototype_ binding }<sup>*</sup> <b>)</b></span></pre><pre><span lang="DE"> </span></pre><pre><span lang="EN-US">prototype_binding ::=</span></pre><pre><span lang="EN-US">    <i>prototype</i>_identifier <b>=&gt; </b></span></pre><pre><span lang="EN-US">      ( component_prototype_actual | component_prototype_actual_list</span></pre><pre><span lang="EN-US">      | feature_group_type_prototype_actual | feature_prototype_actual )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_prototype_actual ::=</span></pre><pre><span lang="EN-US">    component_category </span></pre><pre><span lang="EN-US">         ( unique_component_classifier_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">           | <i>prototype</i>_identifier ) </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_prototype_actual_list ::=</span></pre><pre><span lang="EN-US">    <b>( </b>component_prototype_actual { <b>, </b>component_prototype_actual }<sup>*</sup> <b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_type_prototype_actual ::=</span></pre><pre><span lang="EN-US">      ( <b>feature group</b> unique_feature_group_type_reference [ prototype_bindings ]<i> </i>)</span></pre><pre><span lang="EN-US">      | (<b>feature group</b> <i>feature_group_type_prototype</i>_identifier ) </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_prototype_actual ::=</span></pre><pre><span lang="EN-US">      ( (( <b>in </b>| <b>out </b>| <b>in out</b>) ( <b>event</b> | <b>data</b> | <b>event data</b> ) <b>port </b>) |<b> </b></span></pre><pre><span lang="EN-US">      ( ( <b>requires </b>| <b>provides </b>) </span></pre><pre><span lang="EN-US">          ( <b>bus</b> | <b>data</b> | <b>subprogram group</b> | <b>subprogram</b> ) <b>access </b>)</span></pre><pre><b><span lang="EN-US">          [ </span></b><span lang="EN-US">unique_component_classifier_reference ] )</span></pre><pre><span lang="EN-US">      | ( [ <b> in </b>| <b>out </b>] <b>feature</b> <i>feature_prototype</i>_identifier )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">      </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier on the left-hand side
of a prototype binding must exist in the local namespace of the classifier for
which the prototype binding is defined.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier on the right-hand side
of a prototype binding, if present, must exist in the local namespace of the
classifier that contains the prototype binding.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Unique component classifier references must
exist in the public section of the package being identified in the reference.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Unique feature group type references must exist
in the public section of the package being identified in the reference.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The component category declared in the component
prototype binding must match the component category of the prototype being
referenced, i.e., they must be identical, or the declared category component
category of the prototype must be <b>abstract</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The component category of the optional component
classifier reference in the prototype declaration must match the category in
the prototype declaration.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the component prototype only specifies a component
category, then any component type and component implementation of that category
is acceptable; in the case of the category <b>abstract</b> any component type
and component implementation of any category is acceptable.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the component prototype declaration includes
a component classifier reference, then the classifier supplied in the prototype
binding must match according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Prototype_Substitution_Rule</span><span lang="EN-US"> property.
This property specifies the rules to be applied to determine an acceptable classifier
supplied to the prototype.  This property can be associated with a prototype
declaration or the enclosing component type or component implementation.  The
rules are the same as those of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Substitution_Rule</span><span lang="EN-US"> property.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The category of the component implementation
that contains the prototype declaration places restrictions on the set of
acceptable categories for the prototype declaration and the supplied
classifiers.  The nesting rules for each category are defined in the respective
component category section of this document.  For example, if the component
implementation is a <b>thread group</b> implementation, then the prototype
referenced in a subcomponent declaration must be of the category <b>thread
group</b>,<b> thread</b>, <b>subprogram, subprogram group</b>, <b>data</b>, or <b>abstract</b>.
</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the direction is declared for feature
prototypes, then the prototype actual satisfies the direction according to the
same rules as for feature refinements (see Section </span><span lang="EN-US">8</span><span lang="EN-US">); in the case of ports the direction must
be <b>in</b> or <b>out</b>;  in the case of data access, the access right must
be read-only for <b>in</b> and write-only for <b>out</b>;  in the case of bus
access, subprogram access and subprogram group access the direction is ignored.
</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of feature group prototypes, the
supplied feature group types must match the declared feature group type, if any. 
The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Prototype_Substitution_Rule</span><span lang="EN-US"> property rules apply to feature group types instead of component
types.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A classifier supplied in a feature prototype
binding must match the classifier of the prototype declaration, if present,
according to the</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Prototype_Substitution_Rule</span><span lang="EN-US"> property rules.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Component prototypes declared with square
brackets specify that they expect a list of component classifiers. These
prototypes can only be referenced in subcomponent array declarations.  The
component classifier list supplies the classifiers for each of the elements in
the component array. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">The component category of the classifier reference or prototype
reference in a prototype binding declaration must match the category of the
prototype.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If a direction is specified for an abstract feature in a prototype
declaration, then the direction of the prototype actual must match that
declared in the prototype.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L12)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Component prototype bindings must only bind component prototypes,
feature group prototype bindings must only bind feature group prototypes, and
feature bindings must only bind feature prototypes.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L13)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Component prototype refinements must only refine component
prototypes, feature group prototype refinements must only refine feature group
prototypes, and feature refinements must only refine feature prototypes.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Standard Properties</span></p>

<pre><span lang="EN-US">Prototype_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match)</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Prototypes can specify a parameterization of component classifiers that
can be referenced in feature declarations or in subcomponent declarations.  The
same prototype can be referenced several times in a component type and its
component implementations to indicate that the same actually supplied
classifier is to be used. The supplied component classifier may include
prototype bindings if the classifier has unbound prototypes.  Such a component
classifier is effectively an unnamed extension of the classifier being
referenced (see Section </span><span lang="EN-US">4.5</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Prototypes can specify a parameterization of abstract features (<b>feature</b>)
as well as feature group types for feature groups.  The prototype binding of an
abstract feature can supply concrete features  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Prototypes can only be bound once.  Prototypes can be referenced in prototype
bindings, i.e., bound classifiers and features can be passed down the component
hierarchy. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The prototype declaration specifies constraints on the component
category, on the feature kind, and on the classifier that can be supplied.  The
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Prototype_Substitution_Rule</span><span lang="EN-US"> property specifies whether the match requires matching classifiers,
allows classifier substitution, or allows any classifier with matching signature.
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A prototype refinement can increase the constraints on classifiers
to be supplied.  The newly specified category, classifier, and array dimensions
must satisfy the same matching rules as the prototype bindings.  </span></p>

<p class="DescriptionHeading"><a name="_Toc169684075"></a><a name="_Toc167033724"></a><a name="_Toc168661842"><span lang="EN-US">Examples</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This example defines a generic component with a flow through one in
port and one out port.  The abstract component type specifies the data type used
on the port as one prototype and an incoming abstract feature as second prototype. 
This allows us to supply an event data or data port as the incoming port for
this pattern. The outgoing port has been fixed to be a data port.  The example
also defines a primary/backup redundant implementation of the flow component as
a pattern.  It has a single prototype, namely the component that is to be
implemented as a dual redundant component.  This prototype is used to specify
that both copies of the subcomponent are of the same classifier.  It takes the
data type prototype as its prototype actual to ensure that the data type of the
pattern and the data type of the supplied control prototype will match.  These
abstract components are then refined into a controller process and its dual
redundant instantiation as a system.</span></p>

<p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"><a name="e8a211f0-1ab1-444b-8c8a-81773d8e7f89" id="id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89" class="requality_id"></a>package </span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">PrototypeExample</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">public</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">-- a generic component interface
with one in and one out port</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">abstract</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> flowComponent</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">prototypes</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">dt: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">data</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">incoming: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">in feature</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">features</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> insignal: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">in feature </span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">incoming;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> outsignal: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">out data port </span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">dt;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
flowComponent;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">-- a dual redundant component
pattern</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">abstract </span></span></b><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">implementation</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
flowComponent.primaryBackup</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">prototypes</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  control: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">abstract</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> flowComponent;
</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">subcomponents</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  primary: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">abstract</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> control;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  backup:</span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">abstract</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> control;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">connections</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  inprimary: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">feature</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> insignal
-&gt; primary.insignal;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  inbackup: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">feature </span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">insignal
-&gt; backup.insignal;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  outprimary: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">port</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
primary.outsignal -&gt; outsignal;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  outbackup: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">port</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
backup.outsignal -&gt; outsignal;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="FR"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">modes</span></span></b></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="FR"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  Primarymode: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">initial mode</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="FR"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">  Backupmode: </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">mode</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
flowComponent.primaryBackup;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">data</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
signal</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
signal;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">data implementation</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> signal.unit16</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end</span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">
signal.unit16;</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">-- a controller to be realized as
dual redundant system</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">process</span></span></b></code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> controller </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">extends</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> flowComponent ( dt =&gt; </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">data </span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">signal.unit16,</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">                             incoming
=&gt; </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">event data port</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> signal.unit16 )</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end </span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">controller;</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">-- the dual redundant controller system
interface</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">system </span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">DualRedundantController
</span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">extends</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">       flowComponent (dt =&gt; </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">data </span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">signal.unit16,</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">                             incoming
=&gt; </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">in</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">event data port</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> signal.unit16)</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end </span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">DualRedundantController;</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">-- the dual redundant instance of the
controller</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">system implementation </span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">DualRedundantController.PrimaryBackup</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">    </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">extends</span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89"> </span></span><code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">flowComponent.primaryBackup (control =&gt; </span><b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">process </span></b><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">controller)</span></span></code></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><code><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end </span></span></b></code><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">DualRedundantController.PrimaryBackup;</span></span></p><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">end </span></span></b><span lang="EN-US"><span class="requality_text id_e8a211f0-1ab1-444b-8c8a-81773d8e7f89">PrototypeExample;</span></span></p>

<p class="ExampleText"><code><span lang="EN-US"> </span></code></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320299"><span lang="EN-US">4.8<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Annex Subclauses and Annex Libraries</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Annex subclauses allow annotations expressed in a sublanguage to be
attached to component types, component implementations, and feature group types.
Examples of standardized sublanguages are defined in the Error Model </span><span lang="EN-US">Annex Document C</span><span lang="EN-US"> and in the Behavior Model </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Annex libraries contain reusable declarations expressed in a
sublanguage and are declared in packages.  Those reusable declarations can be
referenced by annex subclauses. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A major use of these annex declarations is to accommodate new
analysis methods through analysis specific notations or sublanguages. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL standard consists of a core language document and a set of standardized
annex documents, some of which introduce sublanguage notations.  Individual
projects can introduce project-specific sublanguage notations to support
project-specific analysis needs.  Use of such sublanguage notations results in
AADL models that are compliant with the core language standard.  Standard
compliant AADL tools are required to accept such AADL specifications (see <i>Processing
Requirements and Permissions</i>). </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Examples of annex libraries are error states machines that can be associated
with components in annex subclauses (see </span><span lang="EN-US">Annex Document C</span><span lang="EN-US">). </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="FR">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="AnnexSubclause"><span lang="FR">annex_subclause ::=</span></a></pre><pre><span lang="FR">    <b>annex</b> <i>annex</i>_identifier ( </span></pre><pre><span lang="FR">      </span><span lang="EN-US">( <b>{** </b>annex_specific_language_constructs <b>**} </b>) |  <b>none </b>)<b> </b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">[ in_modes ] ;</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">annex_library ::=</span></pre><pre><span lang="EN-US">    <b>annex</b> <i>annex</i>_identifier </span></pre><pre><span lang="EN-US">      (( <b>{** </b>annex_specific_reusable_constructs <b>**} </b>) | <b>none</b> ) ;</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The annex identifier must be the name of an
approved annex or a project-specific identifier different from the approved
annex identifiers.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The mode identifiers in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes</span><span lang="EN-US">
statement must refer to modes in the component type or component implementation
for which the annex subclause is declared.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Annex subclauses can only be declared in
component types, component implementations, and feature group types.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A component type, component implementation, or
feature group type declaration may contain at most one annex subclause for each
annex.  If the annex subclause has an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes</span><span lang="EN-US"> statement, then there must be
at most one annex subclause per mode for each annex.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Annex libraries must be declared in packages. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A package declaration may contain at most one
annex library declaration for each annex.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An annex subclause provides additional specification information
about a component to be interpreted by analysis methods.  Annex subclauses
apply to component types and component implementations.  Such annex subclauses
can introduce analysis specific notations such as constraints and assertions
expressed in predicate logic or behavioral descriptions expressed in temporal
logic.  Such notation can refer to subcomponents, connections, modes, and
transitions as well as features and subcomponent access.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Annex subclauses can be declared to be applicable to specific modes
by specifying them with an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes</span><span lang="EN-US"> statement.  An annex subclause without an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes</span><span lang="EN-US"> statement
contains annex statements that are applicable in all modes.  This capability allows
users to attach mode specific annex annotations to core AADL models.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An annex library provides reusable specifications expressed in an
annex specific notation. Users can place multiple reusable annex specific
constructs inside an annex library declaration.  An example of a reusable annex
specification is a fault state machine as defined by the Error Model </span><span lang="EN-US">Annex Document C</span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processing methods compliant with the core AADL standard must accept
AADL specifications with approved and project-specific annex subclauses and
specifications, but are not required to process the content of annex subclauses
and annex library declarations.  An AADL analysis tool must provide the option
to report the use of project-specific annex sublanguages.  Processing methods
compliant with a given annex sublanguage must process specifications as defined
in that annex sublanguage.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Annex
specific sublanguages can use any vocabulary word except for the symbol <b>**}</b>
representing the end of the annex subclause or specification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Annex
specific sublanguages may introduce reserved words that may be the same or
different from those in the core language or other annex sublanguages. If the
annex sublanguage uses a reserved word that is a legal identifier in the AADL
core language, then it must support the ability to refer to this named element
in the core model.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Annex
specific sublanguages can utilize the core language property mechanism, i.e.,
properties can be defined in property sets that apply to elements in the
sublanguage annex.  For example, a property occurrence can be defined to apply
to an error event in an error model.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Annex
sublanguages may choose not to support inheritance of sublanguage declarations
contained in annex libraries of ancestor component type or component
implementation declarations by their extensions.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde"><a name="e915fc9a-ff3d-4742-9a7d-da28de5a6bde" id="id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">AnnexExample</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">public</span></span></b></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">with </span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">Sampling;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">thread</span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde"> Collect_Samples </span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">features</span></span></b></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">   Input_Sample : </span><b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">in data
port </span></b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">Sampling::Sample;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">   Output_Average : </span><b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">out data
port </span></b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">Sampling::Sample;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">annex </span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">Error_Model</span><b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">
{**</span></b></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">   Model =&gt;</span><b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde"> </span></b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">Transient_Fault_Model;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">   </span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">Occurrence =&gt;</span><b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde"> </span></b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">poisson 10e-4 </span><b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">applies to</span></b><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">
Transient_Fault;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">**}</span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">end</span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde"> Collect_Samples;</span></span></p><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">end </span></span></b><span lang="EN-US"><span class="requality_text id_e915fc9a-ff3d-4742-9a7d-da28de5a6bde">AnnexExample;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h1 style="margin-top: 12pt; line-height: 12pt;"><a name="_Toc318320300"></a><a name="_Toc169684076"></a><a name="_Toc167033725"></a><a name="_Toc168661843"></a><a name="_Toc86725655"></a><a name="_Toc86220692"></a><a name="_Toc86220145"></a><a name="_Toc86219847"></a><a name="_Toc86219742"></a><a name="_Toc79294977"></a><a name="_Toc27797758"></a><a name="_Toc27449586"></a><a name="_Toc8550349"></a><a name="_Toc2492752"></a><a name="_Toc535736329"></a><a name="_Toc535736009"></a><a name="_Ref535735719"></a><a name="_Ref535735562"></a><a name="_Ref535735521"></a><a name="_Toc535729833"></a><a name="_Toc532013571"></a><a name="_Ref521816753"></a><a name="_Ref521816747"></a><a name="_Toc17600364"></a><a name="_Toc17600371"></a><a name="_Toc17600374"></a><a name="_Toc17600375"></a><a name="_Toc17600376"></a><a name="_Toc17600377"></a><a name="_Toc17600380"></a><a name="_Toc17600381"></a><a name="_Toc17600384"></a><a name="_Toc17600389"></a><a name="_Toc17600392"></a><a name="_Toc17600397"></a><a name="_Toc17600401"></a><a name="_Toc17600403"></a><a name="_Toc17600418"></a><a name="_Toc17600420"></a><a name="_Toc17600421"></a><a name="_Toc17600422"></a><a name="_Toc17600424"></a><a name="_Toc17600425"></a><a name="_Toc17600457"></a><a name="_Toc17600461"></a><a name="_Toc17600462"></a><a name="_Toc17600465"></a><a name="_Toc17600466"></a><a name="_Toc17600469"></a><a name="_Toc17600470"></a><a name="_Toc17600474"></a><a name="_Toc17600481"></a><a name="_Toc17600483"></a><a name="_Toc12428021"></a><a name="_Toc12428024"></a><a name="_Toc12428025"></a><a name="_Toc12428026"></a><span lang="EN-US">5<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Software Components</span></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This section defines the following categories of software
components: data, subprogram, subprogram group, thread, thread group, and
process.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Software components may have associated source text specified using
property associations.  Software source text can be processed by source text
tools to obtain a binary executable image consisting of code and data to be
loaded onto a memory component and executed by a processor component.  Source
text may be written in a traditional programming language, a very-high-level or
domain-specific language, or may be an intermediate product of processing such
representations, e.g., an object file.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Data components classifiers represent data types, while data
subcomponents represent static data in source text, and local variables in
subprograms.  Data components are sharable between threads within the same
thread group or process, and across processes and systems. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The subprogram component models callable source text that is
executed sequentially.  Subprograms are callable from within threads and
subprograms.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Threads represent sequential sequences of instructions in loaded
binary images produced from source text.  Threads model schedulable units of
control that can execute concurrently.  Threads can interact with each other
through exchanges of control and data as specified by port connections, through
remote subprogram calls, and through shared data components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A thread group is a compositional component that permits
organization of threads within processes into groups with relevant property
associations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A process represents a virtual address space.  Access protection of
the virtual address space is by default enforced at runtime, but can be
disabled if specified by the property </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Runtime_Protection</span><span lang="EN-US">.  The source text
associated with a process forms a complete program as defined in the applicable
programming language standard.  A complete process specification must contain
at least one thread declaration.  Processes may share a data component as
specified by the required subcomponent resolved to an actual subcomponent and
accessed through port connections.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc2492757"></a><a name="_Toc535736334"></a><a name="_Toc535736014"></a><a name="_Toc535729838"></a><a name="_Toc532013572"></a><a name="_Toc318320301"></a><a name="_Toc169684077"></a><a name="_Toc167033726"></a><a name="_Toc168661844"></a><a name="_Toc86725656"></a><a name="_Toc86220693"></a><a name="_Toc86220229"></a><a name="_Toc86219848"></a><a name="_Toc86219743"></a><a name="_Toc79294978"></a><a name="_Ref62439807"></a><a name="_Ref56480113"></a><a name="_Ref32636125"></a><a name="_Ref32299405"></a><a name="_Toc27797760"></a><a name="_Toc27449588"><span lang="EN-US">5.1<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Data</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A data component type represents a data type in source text.  The
internal structure of a source text data type, e.g., the instance variables of
a class or the fields of a record, can be represented by data subcomponents in
a data component implementation. The provides subprogram access features of a
data component type can model the concept of methods on a class or operations
on an abstract data type.  A source text data type can be modeled by a data
component type declaration with relevant properties without providing internal
details in a data component implementation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A data component classifier, i.e., a data component type name or a
data component type and implementation name pair (separated by a dot “.”), is
used as data type indicator in port declarations, subprogram parameter
declarations, and data subcomponent declarations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A data subcomponent represents static data in the source text.
Components can have shared access to data subcomponents, which means that there
are mutual exclusion requirements. Only those components that explicitly
declare required data access can access such sharable data subcomponents using
a concurrency control protocol as specified by property. Data subcomponents can
be shared within the same process and, if supported by the runtime system,
across processes.  When declared in a subprogram or a thread that data
subcomponent represents a local variable.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">References to data components are modeled through provides and
requires data access.  Threads, processes, systems, and subprograms may access
data by reference (see Section </span><span lang="EN-US">8.6</span><span lang="EN-US">).  </span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">Support for shared data is not intended to be a
substitute for data flow communication through ports.  It is provided to
support modeling of systems whose application logic requires them to manipulate
data concurrently in a non-deterministic order that cannot be represented as
data flow, such as database access.  It is also provided for modeling source
text that does not use port-based communication.</span></p>

<p class="Note"><span lang="EN-US">AADL focuses on architecture modeling.  When
used for data modeling, properties defined as part of the Data Modeling Annex (</span><span lang="EN-US">Annex Document B</span><span lang="EN-US">) can be used to further
characterize data components.  </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Legality Rules </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="103" style="width: 77.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="278" style="width: 208.55pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="177" style="width: 132.9pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><a name="DataLegality"><b><span lang="EN-US" style="font-size: 10pt;">data</span></b></a></p>
  </td>
  <td width="278" valign="top" style="width: 208.55pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_dd4fa8bb-984d-4dd1-a42b-691ba11233a6"><a name="dd4fa8bb-984d-4dd1-a42b-691ba11233a6" id="id_dd4fa8bb-984d-4dd1-a42b-691ba11233a6" class="requality_id"></a>Features:</span> </span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
<span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e"><a name="201ff2d4-5027-4f2b-8915-f0eab04f0f4e" id="id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e" class="requality_id"></a>  </span></span></span><span lang="EN-US"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">feature group</span></span></p><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">provides subprogram access</span></span></p><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">requires subprogram access</span></span></p><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">requires subprogram group access</span></span></p><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_201ff2d4-5027-4f2b-8915-f0eab04f0f4e">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_f24b2b0f-e319-4b01-8f0f-a89183f3a3e7"><a name="f24b2b0f-e319-4b01-8f0f-a89183f3a3e7" id="id_f24b2b0f-e319-4b01-8f0f-a89183f3a3e7" class="requality_id"></a>Flow specifications: no</span></span></p><span class="requality_text id_f24b2b0f-e319-4b01-8f0f-a89183f3a3e7">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_f24b2b0f-e319-4b01-8f0f-a89183f3a3e7">Modes: no</span></span></p><span class="requality_text id_f24b2b0f-e319-4b01-8f0f-a89183f3a3e7">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_f24b2b0f-e319-4b01-8f0f-a89183f3a3e7">Properties: yes</span></span></p>
  </td>
  <td width="177" style="width: 132.9pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_e2afc115-2cec-42b7-9a0d-a31d93f36c85"><a name="e2afc115-2cec-42b7-9a0d-a31d93f36c85" id="id_e2afc115-2cec-42b7-9a0d-a31d93f36c85" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f"><a name="dae8cc9b-74ab-47fa-9a12-43b98ba8633f" id="id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">data</span></span></p><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">subprogram</span></span></p><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dae8cc9b-74ab-47fa-9a12-43b98ba8633f">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660"><a name="04f56854-9410-4d65-8255-d862628e7660" id="id_04f56854-9410-4d65-8255-d862628e7660" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">Connections: yes (access)</span></span></p><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">Flows: no</span></span></p><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">Modes: no</span></span></p><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04f56854-9410-4d65-8255-d862628e7660">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> <span class="requality_text id_f0a1d37c-de8d-4c85-b509-73fefcc3a490"><a name="f0a1d37c-de8d-4c85-b509-73fefcc3a490" id="id_f0a1d37c-de8d-4c85-b509-73fefcc3a490" class="requality_id"></a></span></span></p><span class="requality_text id_f0a1d37c-de8d-4c85-b509-73fefcc3a490">

</span><p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_f0a1d37c-de8d-4c85-b509-73fefcc3a490">(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f0a1d37c-de8d-4c85-b509-73fefcc3a490">        
</span></span></span><span lang="EN-US"><span class="requality_text id_f0a1d37c-de8d-4c85-b509-73fefcc3a490">A data type declaration can contain provides subprogram
access declarations</span> <span class="requality_text id_400ee9b4-0cc1-4221-bd51-664c23a11da4"><a name="400ee9b4-0cc1-4221-bd51-664c23a11da4" id="id_400ee9b4-0cc1-4221-bd51-664c23a11da4" class="requality_id"></a>as well as property associations.</span> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8e99f05f-28db-461e-a52b-978356e032dd"><a name="8e99f05f-28db-461e-a52b-978356e032dd" id="id_8e99f05f-28db-461e-a52b-978356e032dd" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8e99f05f-28db-461e-a52b-978356e032dd">        
</span></span></span><span lang="EN-US"><span class="requality_text id_8e99f05f-28db-461e-a52b-978356e032dd">A data type declaration must not contain a flow
specification or modes subclause.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_79bb5bd3-f655-47eb-800a-e51c4ac196aa"><a name="79bb5bd3-f655-47eb-800a-e51c4ac196aa" id="id_79bb5bd3-f655-47eb-800a-e51c4ac196aa" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_79bb5bd3-f655-47eb-800a-e51c4ac196aa">        
</span></span></span><span lang="EN-US"><span class="requality_text id_79bb5bd3-f655-47eb-800a-e51c4ac196aa">A data implementation can contain abstract, data
and subprogram subcomponents,</span> <span class="requality_text id_0b33dc84-958b-43d1-82f8-dabd681dfeb1"><a name="0b33dc84-958b-43d1-82f8-dabd681dfeb1" id="id_0b33dc84-958b-43d1-82f8-dabd681dfeb1" class="requality_id"></a>access connections, </span><span class="requality_text id_0b33dc84-958b-43d1-82f8-dabd681dfeb1">and data property
associations.</span><span class="requality_text id_0b33dc84-958b-43d1-82f8-dabd681dfeb1"></span>   </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8ffbc09d-fc0c-4ac3-931d-24f169b751e6"><a name="8ffbc09d-fc0c-4ac3-931d-24f169b751e6" id="id_8ffbc09d-fc0c-4ac3-931d-24f169b751e6" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8ffbc09d-fc0c-4ac3-931d-24f169b751e6">        
</span></span></span><span lang="EN-US"><span class="requality_text id_8ffbc09d-fc0c-4ac3-931d-24f169b751e6">A data implementation must not contain a flow
implementation, an end-to-end flow specification, or a modes subclause. </span></span></p>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt;"><span lang="EN-US">Standard Properties</span></p>

<pre style="page-break-after: avoid;"><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Type_Source_Name: </span></span><b><span lang="EN-US">aadl</span></b><span class="CODE"><b><span lang="EN-US">string</span></b></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Name: </span></span><b><span lang="EN-US">aadl</span></b><span class="CODE"><b><span lang="EN-US">string</span></b></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- hardware mapping</span></span></pre><pre><span lang="EN-US">Base_Address: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Base_Address</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Data sharing properties</span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">Access_Right : Access_Rights =&gt; read_write  </span></span></pre><pre><span lang="EN-US">Concurrency_Control_Protocol: Supported_Concurrency_Control_Protocols</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Type_Source_Name</span><span lang="EN-US"> property identifies the name of the data type declaration in the
source text. The value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Name</span><span lang="EN-US"> property identifies the name of the static or local data variable
in the source text.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The data component type represents a data type in the source text
that defines a representation and interpretation for instances of data in the
source text.  This includes data transferred through data and event data ports,
and parameter values transferred to subprograms.  This data type (class) may
have associated access functions (called methods in an Object-Oriented context)
that are represented by provides subprogram access declarations in the <b>features</b>
subclause of the data type declaration.  In this case, the data may be accessed
through the subprograms.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A provides subprogram access declaration represents a callable
subprogram. It represents implicitly declared subprogram subcomponent that is
contained in the process of the subprogram call, i.e., a single subprogram
instance exists within a process.  Modelers may also declare subprogram
subcomponents explicitly.  A remotely callable access function of a data type is
modeled by a provides subprogram access declaration that will be connected from
a subprogram call or is named in the classifier reference of the call.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Elements of a data component can be accessed and changed directly or
via provides subprogram access features.  This corresponds to get and set
methods of a class.  AADL does not impose visibility restrictions on elements
of a data component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A data component type can have zero data component implementations.
This allows source text data types to be modeled without having to represent
implementation details.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
data component implementation represents the internal structure of a data
component type.  It can contain data subcomponents. This is used to model
source language concepts such as fields in a record and instance variables in a
class.  The data subcomponent represents actual data values.  AADL does not
require the user to provide internal details of data representations if they
are not relevant to the architecture model.  The user may choose to reflect
relevant data modeling information in properties, e.g., the memory requirements,
the measurement unit used for the data, acceptable data types for a union type,
dimensionality of an array structure, the super types in a type hierarchy, or
the data type of a reference.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
component types can be extended through component type extension declarations. 
This permits modeling of subclasses and type inheritance in source text.  However,
it is recommended to use the capabilities of the Data Modeling Annex to
represent data model characteristics in AADL (see </span><span lang="EN-US">Annex Document B</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
data subcomponent represents a data instance, i.e., data in the source text
that is potentially sharable between threads and persists across thread
dispatches.  A data subcomponent is considered to be static data with the
exception of data subcomponents in subprograms, which represent local data.  Each
declared data subcomponent represents a separate instance of source text data. 
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
data subcomponent declared in a subprogram represents local data.  This data
cannot be made accessible outside the subprogram through a provides data access
declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
declaring data subcomponents, it is sufficient for the component classifier
reference of data subcomponent declarations to only refer to the data component
type.  An implementation method can generate a system instance and perform
memory usage analysis if a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Data_Size</span><span lang="EN-US"> property value is specified in the data component type.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
subcomponents that are not declared in subprograms can be shared between
threads.  This is expressed by requires data access declarations in the
component type declarations of subprograms, threads, thread groups, processes,
and systems. The access is resolved to data subcomponents or provides data
access declarations.  Each required reference to shared data may have its own </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property value.  Its value must be consistent with the value of the
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property of the data component or a provides data access.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Read_Only</span><span lang="EN-US"> on a data component indicates that the component contains a
constant value that does not change.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Concurrent
access to shared data is coordinated according to the concurrency control
protocol specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Concurrency_Control_Protocol</span><span lang="EN-US"> property value associated with the data component.  A thread is
considered to be in a critical region when it is accessing a shared data
component.  When a thread enters a critical region a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US">
operation is performed on the shared data component (see <i>Runtime Support</i>
in Section </span><span lang="EN-US">5.1.1</span><span lang="EN-US">).  Upon exit
from a critical region a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Release_Resource</span><span lang="EN-US"> operation is performed (see <i>Runtime Support</i> in Section </span><span lang="EN-US">5.1.1</span><span lang="EN-US">).  If multiple data components with
concurrency control protocols are accessed by a thread, the AADL runtime system
must ensure that the critical regions are nested, i.e., the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Release_Resource</span><span lang="EN-US"> operations are pair-wise nested for each data component.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Concurrent
access to shared data may be coordinated through <i>provides subprogram (group)
access</i>.  In this case, the concurrency control protocol specifies how the execution
of subprograms on the data component is coordinated.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
component classifier references are also used to specify the data type for data
and event data ports as well as subprogram parameters. When ports are connected
or when required data access and subprogram parameters are resolved, the data
component classifier references representing the data types must be
compatible.  This means that the data type of an out port must be compatible
with the data type of an in port, the data type of a provided data access declaration
or a declared data component must be compatible with the data type of a
required data component, and the data type of an actual parameter must be
compatible with that of the formal parameter of a subprogram.  Compatibility is
determined by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">9.2</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
components can be declared as arrays of data subcomponents.  Same as for other
subcomponent array declarations this is a short-hand for declaring several
subcomponents of the same type through separate subcomponent declarations.  If
the intent is to model a data component whose representation in the source text
is an array data modeling properties should be used (see Appendix </span><span lang="EN-US">A.8</span><span lang="EN-US">).</span></p>

<h3><a name="_Toc318320302"></a><a name="_Ref205465354"><span lang="EN-US">5.1.1<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Runtime Support For Shared Data Access</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
standard set of runtime services is provided.  The application program
interface for these services is defined in the code generation annex of this
standard (see </span><span lang="EN-US">Annex Document A</span><span lang="EN-US">).
They are callable from within the source text.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
following are subprograms that may be explicitly called by application source
code, or they may be called by an AADL runtime system that is generated from an
AADL model.  </span></p>

<p class="NumberedParagraph"><a name="GetReleaseResourceRuntime"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;"> 
</span></span><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource </span><span lang="EN-US">and</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Release_Resource</span><span lang="EN-US">  runtime services represent an abstract interface for
functions that perform locking and unlocking of resources according to the
specified concurrency control protocol.  The method may lock multiple resources
simultaneously. </span></p>

<pre><span lang="EN-US">    <b>subprogram</b>  Get_Resource</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><span lang="EN-US">      resource: <b>in parameter</b> &lt;implementation-specific representation of one or more resources&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Get_Resource;</span></pre><pre><span lang="EN-US">    <b>subprogram</b>  Release_Resource </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><span lang="EN-US">      resource: <b>in parameter</b> &lt;implementation-specific representation of one or more resources&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Release_Resource;</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
any source text is associated with a data component type, then a corresponding
source text data type declaration must be visible in the outermost scope of
that source text, as defined by the scope and visibility rules of the
applicable source language standard.  The name of the data component type
determines the </span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">source name</span><span lang="EN-US"> </span></span><span lang="EN-US">of the data type. Supported mappings
of the identifier to a source type name for specific source languages are
defined in the source language annex of this standard.  Such mapping can also
be explicitly specified through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Type_Source_Name</span><span lang="EN-US"> property. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
applicable source language standard may allow a data type to be declared using
a type constructor or type modifier that references other source text data
types.  A source text data type name defined by a source type constructor may,
but is not required to, be modeled as a data component type with the referenced
type features explicitly named in a corresponding data component implementation
declaration.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
modeling properties allow for modeling data representations in the source text
that include stored references (pointers).  A method of implementation may
disallow storing of such data references as data values in order to assure safe
execution of embedded applications.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A method
of implementation may use a provides subprogram access declaration to represent
an implicit subprogram subcomponent.  In this case, the provides subprogram
access feature does not have to be connected to a subprogram subcomponent or a
requires subprogram access feature.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation may disallow assignments that might result in a
runtime error depending on the actual value being assigned.  If a method of
implementation employs a runtime check to determine if a specific value may be
legally assigned, then any runtime fault is associated with the thread that
contains the source of the data assignment.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
two static data declarations refer to the same source text data, then that data
must be replicated in binary images.  If this replication occurs within the
same virtual address space, a method for resolving name conflicts must be in
place.  Alternatively the processing method may require that each source text
data be represented by only one data component declaration per process address
space.</span></p>

<p class="NumberedParagraph"><a name="_Ref34917215"></a><a name="_Toc27797761"></a><a name="_Toc27449589"></a><a name="_Ref27385898"></a><a name="_Ref27301098"></a><a name="_Ref27301088"></a><a name="_Toc8550360"></a><a name="_Toc2492762"></a><a name="_Toc535736339"></a><a name="_Toc535736019"></a><a name="_Toc535729843"></a><a name="_Toc532013577"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
concurrency control protocol can be implemented through a number of concurrency
control mechanisms such as mutex, lock, semaphore, or priority ceiling
protocol. Appropriate concurrency control state is associated with the shared
data component to maintain concurrency control.  The protocol implementation
must provide appropriate implementations of the </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Release_Resource</span><span lang="EN-US"> operations. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation may choose to support only locking of one resource at
a time, or locking of multiple resources simultaneously.  In the former case it
is the responsibility of the caller of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> in such
an order that deadlock and starvation is avoided.  In the latter case, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> implementation must assure absence of deadlock and starvation. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation may choose to generate the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Release_Resource</span><span lang="EN-US"> calls as part of the AADL runtime system generation, or it may
choose to require the application programmer to place those calls into the
application code.  In the latter case, implementation methods may validate the
sequencing of those calls to assure compliance with the AADL specification.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"><a name="b8a386dd-1456-451c-96cc-fc523ed26009" id="id_b8a386dd-1456-451c-96cc-fc523ed26009" class="requality_id"></a>package </span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">personnel</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">public</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">with </span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">Base_Types, retep::relief;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Person</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Person;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_record</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">-- Methods are not required, but when
provided act as access methods</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">features</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- a method on the data type </span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- subprogram type for signature</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   update_address: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">provides subprogram
access</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> update_address;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_record;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data implementation</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Personnel_record.others</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">subcomponents</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- here we declare the internal
structure of the data type</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- One field is defined in terms of
another type; </span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- the type name is sufficient, it
defaults to others.</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- the package Base_Types is defined
in the Data Model Annex document.</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   -- It provides data component
classifiers for common data types.</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   Name : </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::String;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   Home_address : </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> retep::relief::Address;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_record.others;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_database</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_database;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data implementation</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Personnel_database.oracle</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_database.oracle;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">subprogram</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
update_address</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">features</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   person: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">in out parameter</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_record;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   street :</span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">in parameter</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::String;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   city: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">in parameter</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::String;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
update_address;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">-- use of a data type as port type.</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">thread</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
SEI_Personnel_addition</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">features</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   new_person: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">in event data port</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_record;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   SEI_personnel: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">requires data access</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Personnel_database.oracle;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">properties</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   Dispatch_Protocol =&gt; aperiodic;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
SEI_Personnel_addition;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end </span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">personnel;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">package</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> retep::relief</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">public</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Address</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">features</span></b></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      -- a subprogram access feature
without parameter detail</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      getStreet : </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">provides subprogram
access</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      getCity : </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">provides subprogram
access</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Address;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data implementation</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Address.others</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">properties</span></b></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      Source_Data_Size =&gt; 512 Bytes;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Address.others;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> retep::relief;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> </span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">-- The implementation is shown as a
private declaration</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">-- The public and the private part of a
package are separate AADL specifications</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">package</span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> retep::relief</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">private</span></span></b></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">with </span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">Base_Types;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data implementation</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">
Address.others</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">subcomponents</span></b></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      street : </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::String;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      streetnumber: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::Integer;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      city: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::String;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">      zipcode: </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">data</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Base_Types::Integer;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">   </span><b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end</span></b><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009"> Address.others;</span></span></p><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">end </span></span></b><span lang="EN-US"><span class="requality_text id_b8a386dd-1456-451c-96cc-fc523ed26009">retep::relief;</span></span></p>

<pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre>

<h2 style="margin-top: 0cm;"><a name="_Ref57444176"></a><a name="_Toc318320303"></a><a name="_Toc169684078"></a><a name="_Toc167033727"></a><a name="_Toc168661845"></a><a name="_Toc86725657"></a><a name="_Toc86220694"></a><a name="_Toc86220230"></a><a name="_Toc86219849"></a><a name="_Toc86219744"></a><a name="_Toc79294979"></a><a name="_Ref75341786"></a><a name="_Ref62465872"><span lang="EN-US">5.2<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Subprograms</span></a><span lang="EN-US"> and Subprogram Calls</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram component represents sequentially executed source text
that is called with parameters.  A subprogram may not have any state that
persists beyond the call (static data).  Subprograms can have local variables
that are represented by data subcomponents in the subprogram implementation.  All
parameters and required access to external data must be explicitly declared as
part of the subprogram type declaration.  In addition, any events raised within
a subprogram must be specified as part of its type declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram call sequence is declared in a thread implementation or
in a subprogram implementation.  Subprogram call sequences may be mode-specific. 
Subprograms can be called from threads and from other subprograms that execute
within a thread. These calls can be local calls, i.e., performed in the context
of the caller thread, or they can be remote calls to subprograms that are
executed in the context of another thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprogram instances may be modeled explicitly through subprogram
subcomponent declarations. In this case, components can be modeled as requiring
and providing access to subprogram instances.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprogram instances may be implied by a subprogram call reference
to a subprogram type or implementation.  In this case, a subprogram is
implicitly instantiated within the containing process.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="SubprogramComponent"><span lang="EN-US">subprogram_call_sequence ::=</span></a></pre><pre><span lang="EN-US">    <i>defining_call_sequence</i>_identifier <b>:</b> </span></pre><pre><span lang="EN-US">    <b>{</b> { subprogram_call }<sup>+</sup> <b>}</b></span></pre><pre><span lang="EN-US">         [ <b>{</b> { <i>call_sequence</i>_property_association }<sup>+</sup> <b>} </b>] [ in_modes ] <b>;</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">subprogram_call ::= </span></pre><pre><span lang="EN-US">    <i>defining_call</i>_identifier <b>:</b> <b>subprogram</b> called_subprogram</span></pre><pre><span lang="EN-US">       [ <b>{</b> { <i>subcomponent_call</i>_property_association }<sup>+</sup> <b>} </b>] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">called_subprogram ::=</span></pre><pre><span lang="EN-US">    -- identification by classifier</span></pre><pre><span lang="EN-US">    <i>subprogram</i>_unique_component_classifier_reference  </span></pre><pre><span lang="EN-US">    | ( <i>data</i>_unique_component_type_reference</span></pre><pre><span lang="EN-US">        <b>.</b> <i>data_provides_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    | ( <i>subprogram_group</i>_unique_component_type_reference </span></pre><pre><span lang="EN-US">        <b>. </b><i>provides_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    | ( <i>abstract</i>_unique_component_type_reference </span></pre><pre><span lang="EN-US">        <b>. </b><i>provides_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    | ( <i>feature_group_</i>identifier </span></pre><pre><span lang="EN-US">        <b>. </b><i>requires_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    -- identification by prototype</span></pre><pre><span lang="EN-US">    | <i>component_prototype</i>_identifier</span></pre><pre><span lang="EN-US">    -- identification by processor subprogram access feature</span></pre><pre><span lang="EN-US">    | ( <b>processor </b>. <i>provides_subprogram_access_</i>identifier )</span></pre><pre><span lang="EN-US">    -- identification by subprogram instance</span></pre><pre><span lang="EN-US">    | <i>subprogram_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    | ( <i>subprogram_group_subcomponent</i>_identifier <b>. </b></span></pre><pre><b><span lang="EN-US">        </span></b><i><span lang="EN-US">provides_subprogram_access</span></i><span lang="EN-US">_identifier )</span></pre><pre><span lang="EN-US">    | <i>requires_subprogram_access_</i>identifier</span></pre><pre><span lang="EN-US">    | ( <i>requires</i>_<i>subprogram_group_access</i>_identifier <b>. </b></span></pre><pre><b><span lang="EN-US">        </span></b><i><span lang="EN-US">provides_subprogram_access</span></i><span lang="EN-US">_identifier )   </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="Note"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">Subprogram type and implementation declarations
follow the syntax rules for component types and implementations.  Subprogram
instances may be implied by subprogram calls referring to subprogram
classifiers, or subprogram instances may be declared explicitly as subprogram
subcomponents and made accessible to calls through provides and requires
subprogram access declarations.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_33b3442f-c068-4352-a3ed-b08524e6c1e1"><a name="33b3442f-c068-4352-a3ed-b08524e6c1e1" id="id_33b3442f-c068-4352-a3ed-b08524e6c1e1" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_33b3442f-c068-4352-a3ed-b08524e6c1e1">       
</span></span></span><span lang="EN-US"><span class="requality_text id_33b3442f-c068-4352-a3ed-b08524e6c1e1">The defining identifier of a subprogram call
sequence declaration must be unique within the local namespace of the component
implementation that contains the subprogram call sequence.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_aff09888-58da-481f-856d-d1f61aad563f"><a name="aff09888-58da-481f-856d-d1f61aad563f" id="id_aff09888-58da-481f-856d-d1f61aad563f" class="requality_id"></a>(N2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aff09888-58da-481f-856d-d1f61aad563f">       
</span></span></span><span lang="EN-US"><span class="requality_text id_aff09888-58da-481f-856d-d1f61aad563f">The defining identifier of a subprogram call
declaration must be unique within the local namespace of the component
implementation that contains the subprogram call.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If the called subprogram name is a subprogram
classifier reference, its component type identifier or component implementation
name must exist in the package namespace.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The subprogram classifier reference of a
subprogram call may be a subprogram type reference.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If the called subprogram name is a subprogram
subcomponent reference, the subprogram subcomponent must exist in the component
implementation containing the subprogram call declaration.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If the called subprogram name is a requires
subprogram access reference, the requires subprogram access must exist in the
component type of the component implementation containing the subprogram call
declaration.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="92" style="width: 69.15pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="289" style="width: 216.9pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="165" style="width: 124.05pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="92" style="width: 69.15pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">subprogram</span></b></p>
  </td>
  <td width="289" style="width: 216.9pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_e24c923e-557a-43f8-9dfa-dd028e35432a"><a name="e24c923e-557a-43f8-9dfa-dd028e35432a" id="id_e24c923e-557a-43f8-9dfa-dd028e35432a" class="requality_id"></a>Features: </span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648"><a name="3c210901-0143-4705-9639-8567eb86b648" id="id_3c210901-0143-4705-9639-8567eb86b648" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">out event port</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">out event data port</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">feature group</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">requires data access</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">requires subprogram access</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">requires subprogram group access</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">parameter</span></span></p><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3c210901-0143-4705-9639-8567eb86b648">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5f13dda1-9427-45b7-a54b-c6f74a08ce7d"><a name="5f13dda1-9427-45b7-a54b-c6f74a08ce7d" id="id_5f13dda1-9427-45b7-a54b-c6f74a08ce7d" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_5f13dda1-9427-45b7-a54b-c6f74a08ce7d">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5f13dda1-9427-45b7-a54b-c6f74a08ce7d">Modes: yes</span></span></p><span class="requality_text id_5f13dda1-9427-45b7-a54b-c6f74a08ce7d">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5f13dda1-9427-45b7-a54b-c6f74a08ce7d">Properties: yes</span></span></p>
  </td>
  <td width="165" style="width: 124.05pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_cb968ab3-b442-4a3a-b559-0d0e0c0f30cd"><a name="cb968ab3-b442-4a3a-b559-0d0e0c0f30cd" id="id_cb968ab3-b442-4a3a-b559-0d0e0c0f30cd" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table" style="margin-left: 36pt; text-indent: -18pt; page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt; font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
<span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035"><a name="3b449ae8-2a36-4bc7-a30a-bc3f60c7c035" id="id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035" class="requality_id"></a>  </span></span></span><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">data</span></span></p><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">
  </span><p class="table" style="margin-left: 36pt; text-indent: -18pt; page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt; font-family: Symbol;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">        
  </span></span></span><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">abstract</span></span></p><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">
  </span><p class="table" style="margin-left: 36pt; text-indent: -18pt; page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt; font-family: Symbol;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">        
  </span></span></span><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_3b449ae8-2a36-4bc7-a30a-bc3f60c7c035">subprogram</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3"><a name="11491188-b598-4f3e-a78e-d82d91fae9c3" id="id_11491188-b598-4f3e-a78e-d82d91fae9c3" class="requality_id"></a>Subprogram calls: yes</span></span></p><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">Connections: yes</span></span></p><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">Flows: yes</span></span></p><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">Modes: yes</span></span></p><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_11491188-b598-4f3e-a78e-d82d91fae9c3">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b8ce25e7-13ca-48ea-abbf-ae81d5c599dc"><a name="b8ce25e7-13ca-48ea-abbf-ae81d5c599dc" id="id_b8ce25e7-13ca-48ea-abbf-ae81d5c599dc" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b8ce25e7-13ca-48ea-abbf-ae81d5c599dc">        
</span></span></span><span lang="EN-US"><span class="requality_text id_b8ce25e7-13ca-48ea-abbf-ae81d5c599dc">A subprogram type declaration can contain
parameter, out event port, out event data port, and feature group declarations
as well as requires data, subprogram, and subprogram group access declarations.</span> 
<span class="requality_text id_f9f06efa-96ba-4108-bf77-18d931b2b4f4"><a name="f9f06efa-96ba-4108-bf77-18d931b2b4f4" id="id_f9f06efa-96ba-4108-bf77-18d931b2b4f4" class="requality_id"></a>It can also contain a flow specification subclause, a modes subclause, and
property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_bfad2993-9216-4ed4-a9a2-bac62814e78d"><a name="bfad2993-9216-4ed4-a9a2-bac62814e78d" id="id_bfad2993-9216-4ed4-a9a2-bac62814e78d" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bfad2993-9216-4ed4-a9a2-bac62814e78d">        
</span></span></span><span lang="EN-US"><span class="requality_text id_bfad2993-9216-4ed4-a9a2-bac62814e78d">A subprogram implementation can contain abstract,
subprogram, and data subcomponents,</span> <span class="requality_text id_d7731a17-5a61-43de-890f-fb96c89a5f58"><a name="d7731a17-5a61-43de-890f-fb96c89a5f58" id="id_d7731a17-5a61-43de-890f-fb96c89a5f58" class="requality_id"></a>a subprogram calls subclause, a connections
subclause, a flows subclause, a modes subclause, and property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Only one subprogram call sequence can apply to a
given mode.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">The reference to a provides subprogram access
of a processor in a subprogram call (<b>processor </b>. <i>provides_subprogram_access_</i>identifier)
must identify a provides subprogram access feature of the processor that the
thread executing the call is bound to.</span></p>

<p class="ConsistencyRule"><span lang="EN-US">(C2)</span><span lang="EN-US">A
subprogram call may reference a subprogram classifier.  A project may enforce a
consistency rule that this reference be to a subprogram subcomponent
declaration or requires subprogram access declaration.  This ensures that a
modeler consistently models subprogram calls the same way.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to source text</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Name: aadlstring</span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="CODE"><span lang="EN-US">Type_Source_Name: </span></span><b><span lang="EN-US">aadl</span></b><span class="CODE"><b><span lang="EN-US">string</span></b></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying memory requirements of subprograms</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></pre><pre><span lang="EN-US">Source_Heap_Size: Size </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre><span lang="EN-US"><span class="HTMLPreformattedChar"> -- execution related properties</span></span></pre><pre><span lang="EN-US">Compute_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Compute_Deadline: Time</span></pre><pre><span lang="EN-US">Client_Subprogram_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span lang="EN-US">-- remote subprogram call related properties</span></pre><pre><span lang="EN-US">Urgency: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Urgency</span></pre><pre><span lang="EN-US">Actual_Subprogram_Call: <b>reference</b> (subprogram)</span></pre><pre><span lang="EN-US">Allowed_Subprogram_Call: <b>list of</b> <b>reference</b> (subprogram)</span></pre><pre><span lang="EN-US"><b>Actual_Subprogram_Call_Binding: list of reference (bus, processor, memory, device)</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Subprogram_Call_Binding: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (bus, processor, device)</span></pre><pre><span lang="EN-US">Subprogram_Call_Type: <b>enumeration</b> (Synchronous, SemiSynchronous)</span></pre><pre><span lang="EN-US">    =&gt; Synchronous</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram component represents sequentially executable source
text that is called with parameters.  The results of a subprogram call must be
available to the caller at the time those results are used.  This allows for
synchronous and semi-synchronous calls.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram type declaration specifies all interactions of the
subprogram with other parts of the application source text.  Subprogram
parameters are specified as features of a subprogram type (see Section </span><span lang="EN-US">8.4</span><span lang="EN-US">).  This includes <b>in </b>and <b>in out </b>parameters
passed into a subprogram and <b>out </b>and <b>in out </b>parameters returned
from a subprogram on a call, events being raised from within the subprogram
through its <b>out event port</b> and <b>out event data port</b>, required
access to static data by the subprogram are specified as part of the features
subclause of a subprogram type declaration, and required access to subprograms that
are contained in another component and are called by this subprogram.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram implementation represents implementation details that
are relevant to architecture modeling.  It specifies calls to other subprograms
and the mode in which the call sequence occurs.  It also specifies any local
data of the subprogram, i.e., data that does not persist beyond the call. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">All access to data that persists beyond the life of the subprogram
execution, i.e., any state that is maintained by a subprogram, must be modeled
through requires data access.  If requires data access is declared for a
subprogram type, access to the data subcomponent may be performed in a critical
region to assure concurrency control for calls from different threads (for more
on concurrency control see Sections 5.1 and 5.4).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprogram source text can contain </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service
calls to cause the transmission of events and event data through its <b>out
event</b> ports (see Section </span><span lang="EN-US">8.3</span><span lang="EN-US">). The fact that events may emit from a subprogram call is
documented by the declaration of <b>out event ports</b> and <b>out event data
ports </b>as features of the subprogram.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subprogram
implementations and thread implementations can contain subprogram calls. A
thread or subprogram can contain multiple calls to the same subprogram - with
the same parameter values or with different parameter values.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subprogram
call sequences can be declared to apply to specific modes.  In this case a call
sequence is only executed if one of the specified modes is the current mode.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Modeling
of subprograms is not required and the level of detail is not prescribed by the
standard.  Instead it is determined by the level of detail necessary for
performing architecture analyses or code generation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
an object-oriented application methods are called on an object instance and the
object instance is available within the method by the name <i>this</i>.  In
AADL a subprogram call can identify the subprogram being called by the provides
subprogram access feature of a data component.  In AADL, the data component
must be explicitly passed into a subprogram as parameter (by value) or as
requires data access (by reference).  Requires data access may require
concurrency control to ensure mutual exclusion.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Ordering
of subprogram calls is by default determined by the order of the subprogram
call declarations. Annex-specific notations, e.g., the Behavior Annex, can be
introduced to allow for other call order specifications, such as conditional
calls and iterations. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
flow of parameter values between subprogram calls as well as to and from ports
of enclosing threads is specified through parameter connection declarations
(see Section </span><span lang="EN-US">9.3</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subprogram
instances may be modeled explicitly through subprogram subcomponent
declarations, or they may be implied from the call references to subprogram
classifiers.  A subprogram instance means that the subprogram executable binaries
exist in the load image of the containing process. For subprograms, whose
source text implementation is reentrant, it is assumed that a single instance
of the subprogram binaries exist in the process address space.  In the case of
remote subprogram calls a proxy may be loaded for the calling thread and the
actual subprogram is part of the load image of the process with the thread
servicing the remote subprogram call.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
subprogram subcomponent declaration explicitly represents a subprogram instance
that resides in the protected address space of the containing process.  Subprogram
calls refer to the subprogram subcomponent or to requires subprogram access
declarations.  In case of a requires subprogram access the call is local to a
subprogram instance in the containing process, or is remote to a subprogram
instance in another process.  Subprogram access connection declarations
identify the subprogram instance to be called.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
standard permits modeling of subprograms and subprogram calls without requiring
the declaration of subprogram instances.  In this case, subprogram calls may
refer to subprogram classifiers and the source language processing system will
determine the subprogram instance to be called.  In the case of remote
subprogram calls the target subprogram is identified by subprogram call
properties.  An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Subprogram_Call</span><span lang="EN-US"> property, if present, identifies the remote subprogram(s) that are
allowed to be used in a call binding. An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Actual_Subprogram_Call</span><span lang="EN-US"> property records the actual binding to a subprogram or provides
subprogram access feature.  Constraints on the buses and processors over which
such calls can be routed can be specified with the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Subprogram_Call_Bindings</span><span lang="EN-US"> property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
following control flow semantics apply to subprogram calls, when the call
refers to:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Subprogram classifier:  execution by the calling
thread</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Provides subprogram access of data type: execution
by the calling thread</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Subprogram subcomponent in calling thread:
execution by the calling thread</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Provides subprogram access feature of a data
component: execution by calling thread</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Subprogram access to subprogram component in
enclosing thread group, process, or system: execution by calling thread</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Subprogram access to subprogram component in another
thread group, process, or system: execution by calling thread</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Provides subprogram access of another thread:
execution by called thread </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Provides subprogram access feature of a device:
execution inside device </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Subprogram access of a processor: execution
inside the processor (operating system) </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Subprogram classifier and the call has a subprogram
call binding property that refers to provides subprogram access in other
thread: execution by called thread </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
results of a subprogram call must be available to the caller at the time those
results are used.  In the case of a local call the results are available when
the call returns, i.e., the call is performed as a synchronous call.  In the
case of remote call, the caller thread is by default suspended until the
execution of the subprogram completes (synchronous call). The caller thread may
issue multiple concurrently executing subprogram calls and wait for their
result when needed (semi-synchronous call).  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subprogram_Call_Type</span><span lang="EN-US">
property indicates whether synchronous or semi-synchronous calls are desired.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
the case of a remote call, the thread servicing the subprogram call assures
that only one call at a time is serviced.  In other words, it acts as a
critical region for all calls to provides subprogram access features of a thread.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Provides
subprogram access features may be declared for processors or devices.  In the
case of processors they represent operating system services provided by the
processor.  In the case of a device, they represent services on the device that
can be invoked by the application software. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
subprogram call order defines a default execution order for the subprogram
calls.  Alternate call orders can be modeled in an annex subclause introduced
for that purpose. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
legality rules require that call declarations either refer only to subprogram
classifiers or to subprogram instances (subcomponents and provides/requires
subprogram access).  This rule can be relaxed to allow a mix of both if this is
appropriate for the development process.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
implementation method may support synchronous calls only or also semi-synchronous
calls.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"><a name="68b40d06-f0d4-4e36-a512-3d8165989203" id="id_68b40d06-f0d4-4e36-a512-3d8165989203" class="requality_id"></a>data</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> matrix</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">data</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_forecast</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_forecast;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">data</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> date</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> date;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Matrix_delta</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">features</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   A: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">in parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   B: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">in parameter </span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   result: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out parameter </span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Matrix_delta;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Interpret_result</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">features</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   A: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">in parameter </span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   result: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out parameter </span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">weather_forecast;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Interpret_result;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">data</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_DB</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">features</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   getCurrent: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">provides subprogram
access</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> getCurrent;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   getFuture: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">provides subprogram
access </span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">getFuture;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end </span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">weather_DB;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
getCurrent</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">features</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   result: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> Matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end </span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">getCurrent;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
getFuture</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">-- a subprogram whose source text sends
an event</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">-- the subprogram also has access to
shared data</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">features</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   </span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">date: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">in
parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> date;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   result: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> Matrix;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   bad_date: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out event port</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   wdb: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">requires data access</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_DB;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
getFuture;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">thread</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Predict_Weather</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">features</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   target_date: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">in event data port</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
date;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   prediction: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out event data port</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_forecast;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   past_date: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">out event port</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   weather_database: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">requires data
access</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> weather_DB;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Predict_Weather;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">thread implementation</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> Predict_Weather.others</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">calls</span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> main
{</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- subprogram call on a data component
provides subprogram access feature</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- out parameter is not resolved, but
will be identified by user of value</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   current: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_DB.getCurrent;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- subprogram call on a data component
provides subprogram access feature with port value</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- as additional parameter. Event is
mapped to thread event    </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   future: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_DB.getFuture;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- in parameter actuals are out
parameter values of previous calls</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- they are identified by the call
name and the out parameter name</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   diff: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> Matrix_delta;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> </span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   -- call with out parameter value
resolved to be passed on through a port</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   interpret: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">subprogram</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
Interpret_result;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   };</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">connections</span></span></b></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   fdconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> target_date
-&gt; future.date;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   pdconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">port</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> future.bad_date
-&gt; past_date;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   daconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
current.result -&gt; diff.A;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   dbconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> future.result
-&gt; diff.B;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   iaconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203"> diff.result
-&gt; interpret.A;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   pconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">parameter</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
interpret.result -&gt; prediction;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">   fwconn: </span><b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">data access</span></b><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">
weather_database &lt;-&gt; future.wdb;</span></span></p><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">end </span></span></b><span lang="EN-US"><span class="requality_text id_68b40d06-f0d4-4e36-a512-3d8165989203">Predict_Weather.others;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2><a name="_Toc318320304"></a><a name="_Toc169684079"></a><a name="_Toc167033728"></a><a name="_Toc168661846"></a><a name="_Ref148768903"></a><a name="_Toc86725671"></a><a name="_Toc86220708"></a><a name="_Toc86220241"></a><a name="_Toc86219863"></a><a name="_Toc86219758"></a><a name="_Toc79294993"></a><a name="_Ref66585036"><span lang="EN-US">5.3<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Subprogram Groups and Subprogram Group</span></a><span lang="EN-US"> </span><span lang="EN-US">Types</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprogram groups represent subprogram libraries.  Subprogram groups
can be made accessible to other components through subprogram group access
features (see Section </span><span lang="EN-US">8.4</span><span lang="EN-US">) and
subprogram group access connections (see Section  </span><span lang="EN-US">9.4</span><span lang="EN-US">).  This grouping concept allows the number
of connection declarations to be reduced, especially at higher levels of a
system when a number of provided subprograms from one subcomponent and its
contained subcomponents must be connected to requires subprogram access in
another subcomponent and its contained subcomponents.  The content of a
subprogram group is declared through a subprogram group type declaration.  This
declaration is then referenced when subprogram groups are declared as
subcomponents.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_27afcd3a-cf7f-42a3-af8c-532584c30c20"><a name="27afcd3a-cf7f-42a3-af8c-532584c30c20" id="id_27afcd3a-cf7f-42a3-af8c-532584c30c20" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_27afcd3a-cf7f-42a3-af8c-532584c30c20">       
</span></span></span><span lang="EN-US"><span class="requality_text id_27afcd3a-cf7f-42a3-af8c-532584c30c20">The defining identifier of a subprogram group
type must be unique within the package namespace of the package where the
subprogram group type is declared. </span> </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_364e5701-f9c5-4a50-b3f2-b0e56b8809e7"><a name="364e5701-f9c5-4a50-b3f2-b0e56b8809e7" id="id_364e5701-f9c5-4a50-b3f2-b0e56b8809e7" class="requality_id"></a>(N2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_364e5701-f9c5-4a50-b3f2-b0e56b8809e7">       
</span></span></span><span lang="EN-US"><span class="requality_text id_364e5701-f9c5-4a50-b3f2-b0e56b8809e7">Each subprogram group provides a local
namespace.  The defining subprogram identifiers of subprogram  declarations in
a subprogram group type must be unique within the namespace of the subprogram
group type.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b67ef675-4f06-4ae8-9558-c0de0a1b3cc0"><a name="b67ef675-4f06-4ae8-9558-c0de0a1b3cc0" id="id_b67ef675-4f06-4ae8-9558-c0de0a1b3cc0" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b67ef675-4f06-4ae8-9558-c0de0a1b3cc0">       
</span></span></span><span lang="EN-US"><span class="requality_text id_b67ef675-4f06-4ae8-9558-c0de0a1b3cc0">The local namespace of a subprogram group type
extension includes the defining identifiers in the local namespace of the
subprogram group type being extended. This means, the defining identifiers of
subprogram or subprogram group declarations in a subprogram group type
extension must not exist in the local namespace of the subprogram group type
being extended.</span> The defining identifiers of subprogram or subprogram group
refinements in a subprogram group type extension must refer to a subprogram or
subprogram group in the local namespace of an ancestor subprogram group type.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining subprogram identifiers of
subprogram access feature declarations in feature group refinements must not
exist in the local namespace of any subprogram group being extended. The
defining subprogram identifier of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">subprogram_refinement</span><span lang="EN-US"> declarations in
subprogram group refinements must exist in the local namespace of any feature
group being extended.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The package name of the unique subprogram group
type reference must refer to a package name in the global namespace. The
subprogram group type identifier of the unique subprogram group type reference
must refer to a subprogram group type identifier in the named package.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="92" style="width: 69.15pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="275" style="width: 206.4pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="223" valign="top" style="width: 167.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="92" style="width: 69.15pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">subprogram group</span></b></p>
  </td>
  <td width="275" style="width: 206.4pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_02ddcb4d-a68d-47ed-8be3-a7c06720234c"><a name="02ddcb4d-a68d-47ed-8be3-a7c06720234c" id="id_02ddcb4d-a68d-47ed-8be3-a7c06720234c" class="requality_id"></a>Features: </span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d"><a name="0eba6855-f030-42f0-aadf-a0f360da233d" id="id_0eba6855-f030-42f0-aadf-a0f360da233d" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">feature group</span></span></p><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">provides subprogram access</span></span></p><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">requires subprogram access</span></span></p><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">requires subprogram group access</span></span></p><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">provides subprogram group access</span></span></p><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0eba6855-f030-42f0-aadf-a0f360da233d">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_64b67fbe-5c75-46dd-a13d-375347ea3d3e"><a name="64b67fbe-5c75-46dd-a13d-375347ea3d3e" id="id_64b67fbe-5c75-46dd-a13d-375347ea3d3e" class="requality_id"></a>Flow specifications: no</span></span></p><span class="requality_text id_64b67fbe-5c75-46dd-a13d-375347ea3d3e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_64b67fbe-5c75-46dd-a13d-375347ea3d3e">Modes: no</span></span></p><span class="requality_text id_64b67fbe-5c75-46dd-a13d-375347ea3d3e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_64b67fbe-5c75-46dd-a13d-375347ea3d3e">Properties: yes</span></span></p>
  </td>
  <td width="223" valign="top" style="width: 167.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_3f755464-bcf9-4e4b-87e2-a7522a9abbf9"><a name="3f755464-bcf9-4e4b-87e2-a7522a9abbf9" id="id_3f755464-bcf9-4e4b-87e2-a7522a9abbf9" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17"><a name="792337bb-4389-438c-8643-ebf2423e1d17" id="id_792337bb-4389-438c-8643-ebf2423e1d17" class="requality_id"></a>·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">subprogram</span></span></p><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">subprogram group</span></span></p><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">data</span></span></p><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_792337bb-4389-438c-8643-ebf2423e1d17">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04"><a name="5372483e-fdd0-43f5-b8a2-42c4e631fe04" id="id_5372483e-fdd0-43f5-b8a2-42c4e631fe04" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">Connections: yes</span></span></p><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">Flows: no</span></span></p><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">Modes: no</span></span></p><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_5372483e-fdd0-43f5-b8a2-42c4e631fe04">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b8fe4765-086f-4e14-b9e1-69f16b495590"><a name="b8fe4765-086f-4e14-b9e1-69f16b495590" id="id_b8fe4765-086f-4e14-b9e1-69f16b495590" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b8fe4765-086f-4e14-b9e1-69f16b495590">        
</span></span></span><span lang="EN-US"><span class="requality_text id_b8fe4765-086f-4e14-b9e1-69f16b495590">A subprogram group type can contain provides and
requires subprogram access, and provides and requires subprogram group access.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_7a83dfe9-973f-4359-a539-e073b0d20061"><a name="7a83dfe9-973f-4359-a539-e073b0d20061" id="id_7a83dfe9-973f-4359-a539-e073b0d20061" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_7a83dfe9-973f-4359-a539-e073b0d20061">        
</span></span></span><span lang="EN-US"><span class="requality_text id_7a83dfe9-973f-4359-a539-e073b0d20061">A subprogram group implementation can contain abstract,
data, subprogram group, and subprogram subcomponents</span> <span class="requality_text id_20329243-e602-47a0-ae79-500ed4e62fe8"><a name="20329243-e602-47a0-ae79-500ed4e62fe8" id="id_20329243-e602-47a0-ae79-500ed4e62fe8" class="requality_id"></a>as well as data and subprogram
access connections.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A subprogram group type or implementation may
contain zero or more subcomponent declarations.  If it contains zero elements,
then the subprogram group type or implementation is considered to be
incompletely specified. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- Port properties defined to be <b>inherit</b>, thus can be associated with a</span></pre><pre><span lang="EN-US">-- feature group to apply to all contained ports.</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US" style="color: black;">Source_Text: inherit list of </span></span><b><span lang="EN-US">aadlstring</span></b></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US" style="color: black;">-- properties related to execution time</span></span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying memory requirements of subprograms</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></pre><pre><span lang="EN-US">Source_Heap_Size: Size </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> classifier<b> (memory, system, processor)    </b></span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span class="MsoCommentReference"><span lang="EN-US" style="font-size: 8pt; font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-style: normal;"> </span></span><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram group declaration represents groups of component
subprograms, i.e., subprogram libraries.  Subprograms in a subprogram group may
require access to other subprograms or subprogram groups.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Requires subprogram group access is resolved to provides subprogram
group access or a subprogram group subcomponent.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The subprograms of a subprogram group or a subprogram group access
feature can be connected to or referenced in a subprogram call.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprogram groups represent subprogram libraries.  These can be
application libraries or system libraries.  Libraries may be shared across
multiple applications, i.e., across multiple processes.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Methods of implementation may optionally allow a provides subprogram
access declaration of a subprogram group to not be connected to a subprogram
instantiation, i.e., subprogram subcomponent.  It may assume these subprograms
to be implicitly declared and instantiated as part of a subprogram group
instantiation.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<pre><b><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29"><a name="2876c4f6-f998-40df-8e35-3633ca87ee29" id="id_2876c4f6-f998-40df-8e35-3633ca87ee29" class="requality_id"></a>subprogram group</span></span></b><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29"> mathlib</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">features</span></span></b></pre><pre><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">   matrixMultiply: </span><b><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">provides subprogram access</span></b><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29"> ;</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">   matrixAdd: </span><b><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">provides subprogram access</span></b><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29"> ;</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">   vectorAdd: </span><b><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">requires subprogram access </span></b><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29">end</span></span></b><span lang="EN-US"><span class="requality_text id_2876c4f6-f998-40df-8e35-3633ca87ee29"> mathlib;</span></span></pre>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2><a name="_Toc318320305"></a><a name="_Toc169684080"></a><a name="_Toc167033729"></a><a name="_Toc168661847"></a><a name="_Toc86725658"></a><a name="_Toc86220695"></a><a name="_Toc86220231"></a><a name="_Toc86219850"></a><a name="_Toc86219745"></a><a name="_Toc79294980"></a><a name="_Ref62439825"><span lang="EN-US">5.4<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Thread</span></a><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A thread models a concurrent task or an active object, i.e., a
schedulable unit that can execute concurrently with other threads.  Each thread
represents a sequential flow of control that executes instructions within a
binary image produced from source text.  One or more AADL threads may be
implemented in a single operating system thread.  A thread always executes
within the virtual address space of a process, i.e., the binary images making
up the virtual address space must be loaded before any thread can execute in
that virtual address space.  Threads are dispatched, i.e., their execution is
initiated periodically by the clock or by the arrival of data or events on
ports, or by arrival of subprogram calls from other threads.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL supports an input-compute-output model of communication and
execution for threads and port-based communication.  The inputs received from
other components are frozen at a specified point, by default the dispatch of a
thread. As a result the computation performed by a thread is not affected by
the arrival of new input until an explicit request for input, by default the
next dispatch.  Similarly, the output is made available to other components at
a specified point in time, for data ports by default at completion time or
thread deadline.  In other words, AADL is able to support both synchronous
execution and communication behavior, e.g., in the form of deterministic
sampling of a control system data stream, as well as asynchronous concurrent
processing.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Systems modeled in AADL can have operational modes (see Section 12). 
A thread can be active in a particular mode and inactive in another mode.  As a
result a thread may transition between an active and inactive state as part of
a mode switch.  Only active threads can be dispatched and scheduled for
execution.  Threads can be dispatched periodically or as the result of
explicitly modeled events that arrive at event ports, event data ports. 
Completion of the normal execution including error recovery will result in an
event being delivered through the predeclared </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete</span><span lang="EN-US"> event out
port if it is connected. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If the thread execution results in a fault that is detected, the
source text may handle the error.  If the error is not handled in the source
text, the thread is requested to recover and prepare for the next dispatch.  If
an error is considered thread unrecoverable, its occurrence is reported through
the predeclared </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error
</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">out </span><span lang="EN-US">event data port.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: -26.75pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="90" style="width: 67.6pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="276" style="width: 206.9pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="174" style="width: 130.7pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="90" style="width: 67.6pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">thread</span></b></p>
  </td>
  <td width="276" style="width: 206.9pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_c0cf651f-7a95-493a-a620-96561f26fe51"><a name="c0cf651f-7a95-493a-a620-96561f26fe51" id="id_c0cf651f-7a95-493a-a620-96561f26fe51" class="requality_id"></a>Features: </span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">       <span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45"><a name="ef318a20-4143-42e8-9387-08c72ff05a45" id="id_ef318a20-4143-42e8-9387-08c72ff05a45" class="requality_id"></a> 
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">port</span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">feature group</span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">requires data access</span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">provides subprogram access</span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">requires subprogram access</span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">provides subprogram group access</span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">requires subprogram group access </span></span></p><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_ef318a20-4143-42e8-9387-08c72ff05a45">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_c75bb658-f648-4f37-b8de-1d81c70f4165"><a name="c75bb658-f648-4f37-b8de-1d81c70f4165" id="id_c75bb658-f648-4f37-b8de-1d81c70f4165" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_c75bb658-f648-4f37-b8de-1d81c70f4165">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_c75bb658-f648-4f37-b8de-1d81c70f4165">Modes: yes</span></span></p><span class="requality_text id_c75bb658-f648-4f37-b8de-1d81c70f4165">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_c75bb658-f648-4f37-b8de-1d81c70f4165">Properties: yes</span></span></p>
  </td>
  <td width="174" style="width: 130.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_3c775e63-0eef-4328-8ccc-fcb9754376e4"><a name="3c775e63-0eef-4328-8ccc-fcb9754376e4" id="id_3c775e63-0eef-4328-8ccc-fcb9754376e4" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">    <span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459"><a name="b841de09-2cb4-4392-be33-5ace546e9459" id="id_b841de09-2cb4-4392-be33-5ace546e9459" class="requality_id"></a>    
  </span></span></span><span lang="EN-US"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">data</span></span></p><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">subprogram</span></span></p><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">subprogram group</span></span></p><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_b841de09-2cb4-4392-be33-5ace546e9459">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76"><a name="cbb27fef-30ab-4464-82a2-9879541f1a76" id="id_cbb27fef-30ab-4464-82a2-9879541f1a76" class="requality_id"></a>Subprogram calls: yes</span></span></p><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">Connections: yes</span></span></p><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">Flows: yes</span></span></p><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">Modes: yes</span></span></p><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cbb27fef-30ab-4464-82a2-9879541f1a76">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8cb8e845-7082-4ecf-8c5b-30d6da5f84c7"><a name="8cb8e845-7082-4ecf-8c5b-30d6da5f84c7" id="id_8cb8e845-7082-4ecf-8c5b-30d6da5f84c7" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8cb8e845-7082-4ecf-8c5b-30d6da5f84c7">        
</span></span></span><span lang="EN-US"><span class="requality_text id_8cb8e845-7082-4ecf-8c5b-30d6da5f84c7">A thread type declaration can contain port, feature
group, requires data access declarations, as well as requires and provides
subprogram access declarations.</span><span class="requality_text id_07b1ac64-f514-451d-9d72-6226fbd4ccdb"><a name="07b1ac64-f514-451d-9d72-6226fbd4ccdb" id="id_07b1ac64-f514-451d-9d72-6226fbd4ccdb" class="requality_id"></a>  It can also contain flow specifications, a
modes subclause, and property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_43cd72eb-adfb-432a-9b24-74a5bac46302"><a name="43cd72eb-adfb-432a-9b24-74a5bac46302" id="id_43cd72eb-adfb-432a-9b24-74a5bac46302" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_43cd72eb-adfb-432a-9b24-74a5bac46302">        
</span></span></span><span lang="EN-US"><span class="requality_text id_43cd72eb-adfb-432a-9b24-74a5bac46302">A thread component implementation can contain abstract,
data, subprogram, and subprogram group subcomponent declarations,</span> <span class="requality_text id_404bf906-703a-4071-b2ac-7ab491acf454"><a name="404bf906-703a-4071-b2ac-7ab491acf454" id="id_404bf906-703a-4071-b2ac-7ab491acf454" class="requality_id"></a>a calls
subclause, a flows subclause, a modes subclause, and thread property
associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete</span><span lang="EN-US"> <b>out </b>event port, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error</span><span lang="EN-US"> <b>out</b>
event data port are predeclared, i.e., are implicitly identifiers in the name
space of a thread type.  Therefore, there cannot be user-defined features with
those names in threads.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><a name="_Toc2492763"></a><a name="_Toc535736340"></a><a name="_Toc535736020"></a><a name="_Toc535729844"></a><a name="_Toc532013578"><span lang="EN-US">Consistency Rules</span></a></p>

<p class="ConsistencyRule"><span lang="EN-US">(C3)</span><span lang="EN-US">Either the
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint, Compute_Entrypoint_Source_Text</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint_Call_Sequence</span><span lang="EN-US"> property must have a value that indicates the source code to
execute after a thread has been dispatched when an implementation is to be
generated or consistency with source code is to be checked.  Other entrypoint
properties are optional, i.e., if a property value is not defined, then the
entrypoint is not called.</span></p>

<p class="ConsistencyRule"><span lang="EN-US">(C4)</span><span lang="EN-US">The
Period property must have a value if the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Protocol</span><span lang="EN-US">
property value is periodic, sporadic, timed, or hybrid.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to source text</span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying memory requirements of threads</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></pre><pre><span lang="EN-US">Source_Heap_Size: Size </span></pre><pre><span lang="EN-US">-- Properties specifying thread dispatch properties</span></pre><pre><span lang="EN-US">Dispatch_Protocol: Supported_Dispatch_Protocols</span></pre><pre><span lang="EN-US">Dispatch_Trigger: <b>list of</b> <b>reference </b>(port)</span></pre><pre><span lang="EN-US">Dispatch_Able: <b>aadlboolean </b></span></pre><pre><span lang="EN-US">Dispatch_Offset: <b>inherit </b>Time</span></pre><pre style="text-align: justify;"><span lang="EN-US"><tt>First_Dispatch_Time</tt><b> : inherit </b>Time</span></pre><pre><span lang="EN-US">Period:<b> inherit Time</b></span></pre><pre><span lang="EN-US">-- the default value of the deadline is that of the period</span></pre><pre><span lang="EN-US">Deadline: inherit Time =&gt; Period</span></pre><pre><span lang="EN-US">-- Scheduling properties</span></pre><pre><span lang="EN-US">Priority<span class="HTMLPreformattedChar5">:</span> <b>inherit</b> <b>aadlinteger</b></span></pre>

<p class="MsoListContinue" style="margin-left: 0cm;"><span class="HTMLPreformattedChar5"><span lang="EN-US">POSIX_Scheduling_Policy : <b>enumeration</b>
(SCHED_FIFO, SCHED_RR, SCHED_OTHERS)</span></span></p>

<pre><span lang="EN-US">Criticality: <b>aadlinteger</b></span></pre><pre><span lang="EN-US">Time_Slot: <b>list of aadl</b><b>integer </b></span></pre><pre><span lang="EN-US"> -- Properties specifying execution entrypoints and timing constraints</span></pre><pre><span lang="EN-US">Initialize_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Initialize_Deadline: Time</span></pre><pre><span lang="EN-US">Initialize_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Initialize_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></pre><pre><span lang="EN-US">Initialize_Entrypoint_Source_Text: <b>aadlstring</b></span></pre><pre><span lang="EN-US">Compute_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Compute_Deadline: Time</span></pre><pre><span lang="FR">Compute_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Compute_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></pre><pre><span lang="EN-US">Compute_Entrypoint_Source_Text: <b>aadlstring</b></span></pre><pre><span lang="EN-US">Activate_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Activate_Deadline:</span><span lang="EN-US"> Time</span></pre><pre><span lang="FR">Activate_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Activate_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></pre><pre><span lang="EN-US">Activate_Entrypoint_Source_Text: <b>aadlstring</b></span></pre><pre><span lang="EN-US">Deactivate_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Deactivate_Deadline:</span><span lang="EN-US"> Time</span></pre><pre><span lang="EN-US">Deactivate_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Deactivate_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></pre><pre><span lang="EN-US">Deactivate_Entrypoint_Source_Text: <b>aadlstring</b></span></pre><pre><span lang="EN-US">Recover_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Recover_Deadline: Time</span></pre><pre><span lang="EN-US">Recover_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Recover_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></pre><pre><span lang="EN-US">Recover_Entrypoint_Source_Text: <b>aadlstring</b></span></pre><pre><span lang="EN-US">Finalize_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Finalize_Deadline:</span><span lang="EN-US"> Time</span></pre><pre><span lang="EN-US">Finalize_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Finalize_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></pre><pre><span lang="EN-US">Finalize_Entrypoint_Source_Text: <b>aadlstring</b></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- mode to enter as result of activation</span></span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying constraints for processor and memory binding</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></pre>

<p class="MsoListContinue"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span></p>

<pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">Not_Collocated: <b>record </b>( </span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre><span lang="EN-US">Collocated: <b>record </b>( </span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Binding value filled in by binding tool</span></span></pre><pre><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- property indicating whether the thread affects the hyperperiod </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- for mode switching</span></span></pre><pre><span lang="EN-US">Synchronized_Component: <b>inherit</b> <b>aadlboolean </b>=&gt; <b>true</b></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- property specifying the action for executing thread at actual mode switch</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Active_Thread_Handling_Protocol: </span></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US">   inherit</span></b><span lang="EN-US"> Supported_Active_Thread_Handling_Protocols =&gt; abort</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Active_Thread_Queue_Handling_Protocol: </span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>inherit </b><b>enumeration </b>(flush, hold) =&gt; flush</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre>

<p class="Note"><span lang="EN-US">NOTE: Entrypoints for thread execution can be
specified in three ways: by identifying source text name, by identifying a
subprogram classifier representing the source text, or by a call sequence. </span></p>

<p class="Note"><span lang="EN-US">Compute_Entrypoint =&gt; <b>classifier</b> (
ControlAlgorithm.basic );</span></p>

<p class="Note"><span lang="EN-US">Compute_Entrypoint_Call_Sequence =&gt; <b>reference</b>
( callseq1 );</span></p>

<p class="Note"><span lang="EN-US">Compute_Entrypoint_Source_Text =&gt;
“MyControlAlgorithm”;</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Thread semantics are described in terms of thread states, thread
dispatching, thread scheduling and execution, and fault handling.  Thread
execution semantics apply once the appropriate binary images have been loaded
into the respective virtual address space (see Section </span><span lang="EN-US">5.6</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Threads are dispatched periodically or by the arrival of data and
events, or by arrival of subprogram calls from other threads.  Subprogram calls
always trigger dispatches. Subsets of ports can be specified to trigger
dispatches. By default, any one of the incoming <b>event ports </b>and <b>event
data ports</b> triggers a dispatch.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Trigger</span><span lang="EN-US">
property  can specify different subsets of ports, including <b>data ports</b>
(see Section </span><span lang="EN-US">5.4.2</span><span lang="EN-US">) as a
disjunction or the Behavior Annex (see Section </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">) can be used to specify
additional logical conditions on thread dispatch triggering.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Port input is frozen at dispatch time or a specified time during
thread execution and made available to the thread for access in the form of a
port variable (see Section </span><span lang="EN-US">8.3</span><span lang="EN-US">). 
From that point on its content is not affected by new arrival of data and event
for the remainder of the current execution.  This assures a
input-compute-output model of execution.  By default, input of ports is frozen
for all ports that are not candidates for thread dispatch triggering; for
dispatch trigger candidates, only those port(s) actually triggering a specific
dispatch is frozen.  Whether input of specific ports is frozen at a dispatch
and the time at which it is frozen can be explicitly specified (see Section </span><span lang="EN-US">8.3.2</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Threads may be part of modes of containing components. In that case
a thread is active, i.e., eligible for dispatch and scheduling, only if the
thread is part of the current mode (see Sections </span><span lang="EN-US">5.4.1</span><span lang="EN-US"> and </span><span lang="EN-US">13.6</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Threads can contain mode subclauses that define thread-internal
operational modes. Threads can have property values that are different for
different thread-internal modes (see Section </span><span lang="EN-US">5.4.5</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Every
thread has a predeclared <b>out event port </b>named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete</span><span lang="EN-US">.  If this
port is connected, i.e., named as the source in a connection declaration, then
an event is raised implicitly on this port when nominal execution including
recovery of a thread dispatch completes. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Every
thread has a predeclared <b>out event data port </b>named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error</span><span lang="EN-US">.  If
this port is connected, i.e., named as the source in a connection declaration,
then an event is raised implicitly on this port when a thread unrecoverable
error is detected (see Section </span><span lang="EN-US">5.4.4</span><span lang="EN-US"> for more detail).  This supports the
propagation of thread unrecoverable errors as event data for fault handling by
a thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Threads
may contain subprogram subcomponents that can be called from within the thread,
and also by other threads if it is made accessible through a provides
subprogram access declaration. Similarly, a thread can contain a subprogram
group declaration, which represents an instance of a subprogram library dedicated
to the thread. The subprograms within the subprogram library can be called from
within the thread or by other threads if it is made accessible through a
provides subprogram group access declaration.  For further details about
calling subprograms see Section </span><span lang="EN-US">5.2</span><span lang="EN-US">. Finally, a thread can contain data
subcomponents.  They represent static data owned by the thread, i.e., state
that is preserved between thread dispatches.  The thread has exclusive access
to this data component unless it specifies it to be accessible through a
provides data access declaration. </span></p>

<h3><a name="_Toc318320306"></a><a name="_Ref207751048"><span lang="EN-US">5.4.1<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Thread States and Actions</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread executes a code sequence in the associated source text when dispatched
and scheduled to execute.  This code sequence is part of a binary image
accessible in the virtual address space of the containing process.  It is
assumed that the process is bound to the memory that contains the binary image
(see Section </span><span lang="EN-US">5.6</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread goes through several states.  Thread state transitions under normal
operation are described here and illustrated in Figure 5.  Thread state
transitions under fault conditions are described in Section </span><span lang="EN-US">5.4.4</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
initial state is <i>thread halted</i>. When the loading of the virtual address
space as declared by the enclosing process completes (see Section </span><span lang="EN-US">5.6</span><span lang="EN-US">), a thread is <i>initialized</i> by
performing an initialization code sequence in the source text.  Once
initialization is completed the thread enters the <i>suspended awaiting
dispatch</i> state if the thread is part of the initial mode, otherwise it
enters the <i>suspended awaiting mode</i> state.  When a thread is in the <i>suspended
awaiting mode</i> state it cannot be dispatched for execution.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread may be declared to have modes.  In this case, each mode represents a
behavioral state within the execution of the thread.  When a thread is
dispatched it is assumed to execute in a specific mode.  It may resume
execution in the behavioral state (mode) in which it completed its previous
dispatch execution, e.g., state reflected in a static data component, or it may
execute in a specific mode based on the input received at dispatch time.  A
modal thread can have mode-specific property values.  For example, a thread can
have different worst-case execution times for different modes, each representing
a different execution path through the source code.  The result is a model that
more accurately reflects the actual system behavior.  The </span><span lang="EN-US">Behavior Model</span><span lang="EN-US"> </span><span lang="EN-US">Annex Document D</span><span lang="EN-US"> allows for a refined
specification of thread behavior, e.g., it may explicitly specify the
conditions under which the thread executes in one mode or another mode and it
can represent intermediate behavioral states.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
a mode transition is initiated, a thread that is part of the old mode and not
part of the new mode <i>exits</i> the mode by transitioning to the <i>suspended
awaiting mode</i> state after performing <i>thread deactivation </i>during the<i>
mode change in progress </i>system<i> </i>state (see </span><span lang="EN-US">Figure 23</span><span lang="EN-US">).  If the thread is periodic and
its </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Synchronized_Component</span><span lang="EN-US"> property is true, then its period is taken into consideration to
determine the actual mode transition time (see Sections 12 and </span><span lang="EN-US">13.6</span><span lang="EN-US"> for detailed timing semantics of a mode transition).
If an aperiodic or a sporadic thread is executing a dispatch when the mode transition
is initiated, its execution is handled according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Handling_Protocol</span><span lang="EN-US"> property. The execution of a background thread is suspended through
deactivation while the thread is not part of the new mode.  A thread that is
not part of the old mode and part of the new mode <i>enters</i> the <i>mode</i>
by transitioning to the <i>suspended awaiting dispatch</i> state after
performing <i>thread activation</i>.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
in the <i>suspended awaiting dispatch</i> state, a thread is awaiting a
dispatch request for performing the execution of a </span><span lang="EN-US">compute</span><span lang="EN-US"> source text code sequence as specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> property on the thread or on the event or event data port that
triggers the dispatch.  When a dispatch request is received for a thread, data,
event information, and event data is made available to the thread through its
port variables (see Sections </span><span lang="EN-US">8.2</span><span lang="EN-US"> and </span><span lang="EN-US">9.1</span><span lang="EN-US">).  The
thread is then handed to the scheduler to perform the computation.  Upon
successful completion of the computation, the thread returns to the <i>suspended</i>
<i>awaiting dispatch</i> state.  If a dispatch request is received for a thread
while the thread is in the compute state, this dispatch request is handled according
to the specified </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Overflow_Handling_Protocol</span><span lang="EN-US"> for the event or event data port of the thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread may enter the <i>thread halted</i> state, i.e., will not be available
for future dispatches and will not be included in future mode switches. If
re-initialization is requested for a thread in the <i>thread halted </i>state
(see Section </span><span lang="EN-US">5.6</span><span lang="EN-US">), then its
virtual address space is reloaded, the processor to which the thread is bound
is restarted, or the system instance is restarted.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread may be requested to enter its </span><i><span lang="EN-US">thread halted</span></i><span lang="EN-US"> state through a <i>stop</i> request after completing the execution
of a dispatch or while not part of the active mode. In this case, the thread
may execute a <i>finalize</i> entrypoint before entering the <i>thread halted</i>
state. A thread may also enter the <i>thread halted</i> state immediately
through an <i>abort</i> request. Any resources locked by </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> are released (see </span><span lang="EN-US">Figure 5</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
5 presents the top-level hybrid automaton (using the notation defined in
Section 1.6) to describe the dynamic semantics of a thread from the perspective
of a scheduler.  The hybrid automaton states complement the application modes
declared for threads.  <span style="color: windowtext;">Figure 7</span>
elaborates the performing <i>thread computation </i>state of Figure 5. Figure 6
elaborates the executing <i>nominally</i> substate of <span style="color: windowtext;">Figure
7</span>.  The bold faced edge labels in Figure 5 indicate that the transitions
marked by the label are coordinated across multiple hybrid automata.  The scope
of the labels is indicated in parentheses, i.e., interaction with the process
hybrid automaton (Figure 8), with the system hybrid automaton (Figure 22) and
with system wide mode switching (see Figure 23).  Thread initialization is only
started when the process containing the thread has been loaded as indicated by
the label <b>loaded(process)</b>.  The label <b>started(system)</b> is
coordinated with other threads and the system hybrid automaton to transition to
<i>System operational</i> only after threads have been initialized. In some
systems it is desirable to initialize all threads, while in other system it is
acceptable for threads to be created and initialized more dynamically, possibly
even at activation and deactivation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
hybrid automata contain assertions. In a time-partitioned system these
assertions will be satisfied. In other systems they will be treated as
anomalous behavior.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
each of the states representing a <i>performing thread </i>action such as <i>initialize</i>,
<i>compute</i>, <i>recover</i>, <i>activate</i>, <i>deactivate</i>, and <i>finalize</i>,
an execution entrypoint to a code sequence in the source text can be
specified.  Each entrypoint may refer to a different source text code sequence
which contains the entrypoint, or all entrypoints of a thread may be contained
in the same source text code sequence. In the latter case, the source text code
sequence can determine the context of the execution through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Status</span><span lang="EN-US"> runtime service call (see Section </span><span lang="EN-US">5.4.8</span><span lang="EN-US">).  The execution semantics for these
entrypoints is described in Section </span><span lang="EN-US">5.4.3</span><span lang="EN-US">.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An <i>Initialize_Entrypoint</i>
(enter the state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">performing
<i>thread</i> <i>initialization</i> </span><span lang="EN-US">in</span><span lang="EN-US"> Figure 5) is executed during system initialization and allows
threads to perform application specific initialization, such as ensuring the
correct initial value of its <b>out</b> and <b>in out</b> ports. A thread that
has halted may be re-initialized.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The <i>Activate_Entrypoint
</i>(enter the state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">performing
<i>thread</i> <i>activation </i></span><span lang="EN-US">in</span><span lang="EN-US"> Figure 5)  and<i> Deactivate_Entrypoint</i>  (enter the state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">performing <i>thread</i> <i>activation</i></span><span lang="EN-US"> in</span><span lang="EN-US"> Figure 5) are executed during mode
transitions and allow threads to take user-specified actions to save and
restore application state for continued execution between mode switches.  These
entrypoints may be used to reinitialize application state due to a mode transition. 
Activate entrypoints can also ensure that <b>out</b> and <b>in out</b> ports
contain correct values for operation in the new mode.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The <i>Compute_Entrypoint
</i>(enter state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">performing
<i>thread</i> <i>computation</i></span><span lang="EN-US"> in</span><span lang="EN-US"> Figure 5) represents the code sequence to be executed on every
thread dispatch.  Each provides subprogram access feature represents a separate
compute entrypoint of the thread. Remote subprogram calls are thread dispatches
to the respective entrypoint.  Event ports and event data ports can have port
specific compute entrypoints to be executed when the corresponding event or
event data dispatches a thread.  </span></p>

<p class="MsoCommentText"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A <i>Recover_Entrypoint</i>
(enter the state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">executing
<i>recovery</i></span><span lang="EN-US"> in Figure 7) is executed when a fault
in the execution of a thread requires recovery activity to continue execution.
This entrypoint allows the thread to perform fault recovery actions (for a
detailed description see Section </span><span lang="EN-US">5.4.4</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A<i>
Finalize_Entrypoint </i>(enter the state </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">performing <i>thread</i> <i>finalize </i></span><span lang="EN-US">in</span><span lang="EN-US"> Figure 5) is executed when a thread is
asked to terminate as part of a process unload or process stop.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
no value is specified for any of the entrypoints, then there is no invocation
at all.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center; page-break-after: avoid;"><span lang="EN-US"><img width="611" height="733" src="imgs/image017.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320414"></a><a name="_Toc167033806"></a><a name="_Toc86591127"></a><a name="_Toc79295054"></a><a name="_Ref32290081"></a><a name="_Ref25655856"><span lang="EN-US">Figure </span></a><span lang="EN-US">5</span><span lang="EN-US"> Thread States and Actions</span></p>

<h3><a name="_Toc318320307"></a><a name="_Ref177898620"><span lang="EN-US">5.4.2<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Thread Dispatching</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Threads
are dispatched periodically determined by a clock or by the arrival of events,
event data, of calls to provides subprogram access. By default any event port
or event data port can trigger a dispatch.  In that case, only the input of the
port triggering the dispatch and any data port is available to the application
program.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread may have a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Trigger</span><span lang="EN-US"> property to specify a subset of event, data, or event data ports
that can trigger a thread dispatch.  In this case, arrival of events or event
data on any of the listed ports can trigger the dispatch.    </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(32)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
default disjunction of ports triggering a dispatch can be overwritten by a
logical condition on the ports expressed by a annex subclauses of the Behavior
Annex notation (see </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">). </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(33)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
periodic threads arrival of events or event data will not result in a
dispatch.  Events and event data are queued in their incoming port and are
accessible to the application code of the thread. Periodic thread dispatches
are solely determined by the clock according to the time interval specified
through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> property value.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(34)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Protocol</span><span lang="EN-US"> property of a thread determines the characteristics of dispatch
requests to the thread.  This is modeled in the hybrid automaton in Figure 5 by
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled(t)</span><span lang="EN-US"> function as the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US"> function determines when a transition from </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> to
performing thread computation will occur.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US">
invariant captures the condition under which the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US"> function is
evaluated. The consequence of a dispatch is the execution of the entrypoint
source text code sequence at its <i>current execution</i> position.  This
position is set to the first step in the code sequence and reset upon
completion (see Section </span><span lang="EN-US">5.4.3</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(35)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
a thread whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">periodic</span><span lang="EN-US">, a dispatch request is issued
at time intervals of the specified </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> property value.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US">
function is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t =
Period</span><span lang="EN-US">. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t </span><span lang="EN-US" style="font-family: Symbol;">£</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Period </span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> δt = 1</span><span lang="EN-US">.  The dispatch occurs at </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t = Period</span><span lang="EN-US">. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> of
the thread is called.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(36)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Periodic
threads can have a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Offset</span><span lang="EN-US"> property value.  In this case the dispatch time is offset from the
period by the specified amount.  This allows two periodic threads with the same
period to be aligned, where the first thread has a pre-period deadline, and the
second thread has a dispatch offset greater than the deadline of the first
thread.  This is a static alignment of thread execution order within a frame,
while the immediate data connection achieves the same by dynamically aligning
completion time of the first thread and the start of execution of the second
thread (see Section </span><span lang="EN-US">9.2.5</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(37)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
threads whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aperiodic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sporadic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">timed</span><span lang="EN-US">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US">or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">hybrid</span><span lang="EN-US">, a
dispatch request is the result of an event or event data arriving at an event
or event data port of the thread, or a remote subprogram call arriving at a
provides subprogram access feature of the thread.  This <i>dispatch trigger
condition</i> is determined as follows: </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Arrival of an event or event data on any
incoming event, or event data port, or arrival of any subprogram call request
on a provides subprogram access feature. In other words, it is a disjunction of
all incoming features.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">By arrival on a subset of incoming features
(port, subprogram access).  This subset can be specified through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Trigger</span><span lang="EN-US"> value of the thread.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">By a user-defined logical condition on the
incoming features that can trigger the dispatch expressed through an annex
subclause expressed in the Behavior Annex  sublanguage notation (see </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(38)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
a thread whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aperiodic</span><span lang="EN-US">, a dispatch request is the
result of an event or event data arriving at an event or event data port of the
thread, or a remote subprogram call arriving at a provides subprogram access
feature of the thread.  There is no constraint on the inter-arrival time of
events, event data or remote subprogram calls.  The dispatch actually occurs </span><span lang="EN-US">immediately </span><span lang="EN-US">when </span><span lang="EN-US">a
dispatch request</span><span lang="EN-US"> </span><span lang="EN-US">arrives in the
form of an event at an event port with an empty queue, or if an event is
already queued</span><span lang="EN-US"> when a dispatch execution completes, or
a remote subprogram call arrives. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US"> function by default has the
value </span><span lang="EN-US">true if there exists a port or provides
subprogram access (p</span><span lang="EN-US" style="font-family: Courier;">)</span><span lang="EN-US"> in the set of features that can trigger a dispatch (E) with a
non-empty queue, i.e., </span><span lang="EN-US" style="font-family: Symbol; color: windowtext;">$ </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p in E: p </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">≠</span><span lang="EN-US" style="font-family: Courier; color: windowtext;"> </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="color: windowtext;">. </span><span lang="EN-US" style="font-size: 12pt; color: windowtext;"> </span><span lang="EN-US">This evaluation function may
be redefined by the Behavior Annex (see </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">). The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant is that no event, event data, or subprogram call is queued,
i.e.,</span><span lang="EN-US" style="font-family: Symbol; color: windowtext;">
" </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p in
E: p = </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US">.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> of the port triggering the dispatch, or if not present that of the
thread, is called. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(39)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
multiple ports are involved in triggering the dispatch the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> of the thread is called. The list of ports actually satisfying the
dispatch trigger condition that results in the dispatch is available to the
source text as output parameter of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Dispatch</span><span lang="EN-US">
service call (see Section </span><span lang="EN-US">5.4.8</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(40)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
a thread whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sporadic</span><span lang="EN-US">, a dispatch request is the
result of an event or event data arriving at an event or event data port of the
thread, or a remote subprogram call arriving at a provides subprogram access feature
of the thread.  The time interval between successive dispatch requests will
never be less than the associated </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> property value.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US">
function is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t ≥
Period</span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US" style="font-family: Symbol; color: windowtext;">$ </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p in E: p </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">≠</span><span lang="EN-US" style="font-family: Courier; color: windowtext;"> </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US">.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t
&lt; Period </span><span lang="EN-US" style="font-family: Symbol;">Ú</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> (t &gt; Period </span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US" style="font-family: Symbol; color: windowtext;">" </span><span lang="EN-US" style="font-family: Courier; color: windowtext;"> p in E: p = </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">)</span><span lang="EN-US">.  The dispatch actually occurs when
the time condition on the dispatch transition is true and </span><span lang="EN-US">a dispatch request arrives in the form of an event at an event port
with an empty queue, or an event is already queued when the time </span><span lang="EN-US">condition </span><span lang="EN-US">becomes true, or a remote
subprogram call arrives when the time condition is true.  </span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> of the port triggering the dispatch, or if not present that of the
thread, is called.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(41)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
a thread whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">timed</span><span lang="EN-US">, a dispatch request is the result
of an event, event data, or remote subprogram arrival, or it occurs by an
amount of time specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> property since the last dispatch.. 
In other words, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> represents a time-out value that ensure a dispatch occurs after a
given amount of time if no events, event data, or remote subprogram calls have
arrived or are queued. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US"> function by default has the value </span><span lang="EN-US">true if
there exists a port or provides subprogram access (p</span><span lang="EN-US" style="font-family: Courier;">)</span><span lang="EN-US"> in the set of features that
can trigger a dispatch (E) with an event, event data, or call in its queue, or
time equal to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> has expired since the last dispatch, i.e., </span><span lang="EN-US" style="font-family: Symbol; color: windowtext;">$ </span><span lang="EN-US" style="font-family: Courier; color: windowtext;"> p in E: p </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">≠</span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US" style="font-family: Symbol;">Ú</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> t =
Period</span><span lang="EN-US" style="color: windowtext;">.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">t </span><span lang="EN-US" style="color: windowtext;">is reset to zero at each dispatch.  </span><span lang="EN-US">This evaluation function may be redefined by the Behavior Annex (see
</span><span lang="EN-US">Annex Document D</span><span lang="EN-US">). The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant is that no event, event data, or call is queued, i.e.,</span><span lang="EN-US" style="font-family: Symbol; color: windowtext;"> " </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p in E: p = </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> t </span><span lang="EN-US">&lt;</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">
Period</span><span lang="EN-US">.  </span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> of the port triggering the dispatch, or if not present that of the
thread, is called.  If a timeout occurs, i.e., the dispatch is triggered at the
end of the period, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Entrypoint</span><span lang="EN-US"> is called.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(42)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">hybrid</span><span lang="EN-US">, combines both </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aperiodic</span><span lang="EN-US">
and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">periodic</span><span lang="EN-US"> dispatch behavior in the same thread. A dispatch request is the
result of an event, event data, or remote subprogram call arrival, as well as
periodic dispatch requests at a time interval specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US">
property value.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US"> function is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t
= Period </span><span lang="EN-US" style="font-family: Symbol;">Ú</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: Symbol; color: windowtext;">$
</span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p in E: p </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">≠</span><span lang="EN-US" style="font-family: Courier; color: windowtext;"> </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="color: windowtext;">. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">t </span><span lang="EN-US" style="color: windowtext;">is reset
to zero at each periodic dispatch.  </span><span lang="EN-US">The evaluation
function for events, event data, or subprogram calls may be redefined by the
Behavior Annex. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant is that no event, event data, call, or periodic dispatch
is queued and the period has not expired, i.e.,</span><span lang="EN-US" style="font-family: Symbol; color: windowtext;"> " </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p in E: p = </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> t </span><span lang="EN-US" style="font-family: Symbol;">£</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Period</span><span lang="EN-US">.  </span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US"> of the port triggering the dispatch, or if not present that of the
thread, is called.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(43)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
several events or event data occur logically simultaneously and are routed to
the same port of an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aperiodic</span><span lang="EN-US">,</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sporadic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">timed, </span><span lang="EN-US">or</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> hybrid</span><span lang="EN-US">
thread, the order of arrival for the purpose of event handling according the
above rules is implementation-dependent.  If several events or event data occur
logically simultaneously and are routed to the different ports of the same </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aperiodic</span><span lang="EN-US">,</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sporadic</span><span lang="EN-US">,</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">timed, </span><span lang="EN-US">or</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> hybrid</span><span lang="EN-US"> thread, the
order of event handling is determined by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US"> property
associated with the ports.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(44)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
a thread whose dispatch protocol is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">background</span><span lang="EN-US">, the thread is dispatched
upon completion of its initialization entrypoint execution the first time it is
active in a mode.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US"> function is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">true</span><span lang="EN-US">.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Wait_For_Dispatch</span><span lang="EN-US"> invariant is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t
= 0</span><span lang="EN-US">.  The dispatch occurs immediately.  If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Trigger</span><span lang="EN-US"> property is set, then its execution is initiated through the
arrival of an event or event data on one of those ports.  In that case, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Enabled</span><span lang="EN-US">
function is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">true</span><span lang="EN-US"> for any </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch</span><span lang="EN-US"> port </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">p
</span><span lang="EN-US" style="font-family: &quot;Cambria Math&quot;,&quot;serif&quot;;">∈ </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Trigger </span><span lang="EN-US" style="font-family: Courier; color: windowtext;">: p </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">≠</span><span lang="EN-US" style="font-family: Courier; color: windowtext;"> </span><span lang="EN-US" style="font-family: Symbol;">Æ</span><span lang="EN-US" style="color: windowtext;">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(45)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
different dispatch protocols can be summarized as follows:</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoTableGrid" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="126" valign="top" style="width: 94.5pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><u><span lang="EN-US">Dispatch protocol</span></u></p>
  </td>
  <td width="473" valign="top" style="width: 354.6pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><u><span lang="EN-US">Dispatch condition</span></u></p>
  </td>
 </tr>
 <tr>
  <td width="126" valign="top" style="width: 94.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Periodic</span></p>
  </td>
  <td width="473" valign="top" style="width: 354.6pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Every period
  triggered by the dispatcher of the runtime system</span></p>
  </td>
 </tr>
 <tr>
  <td width="126" valign="top" style="width: 94.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Aperiodic</span></p>
  </td>
  <td width="473" valign="top" style="width: 354.6pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Triggered by the
  arrival of events, event data, subprogram calls</span></p>
  </td>
 </tr>
 <tr>
  <td width="126" valign="top" style="width: 94.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Sporadic</span></p>
  </td>
  <td width="473" valign="top" style="width: 354.6pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Triggered by the
  arrival of events, event data, subprogram calls with a minimum time
  difference of the specified period between dispatches</span></p>
  </td>
 </tr>
 <tr>
  <td width="126" valign="top" style="width: 94.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Timed</span></p>
  </td>
  <td width="473" valign="top" style="width: 354.6pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Triggered by the
  arrival of events, event data, subprogram calls with a timeout at the specified
  period.</span></p>
  </td>
 </tr>
 <tr>
  <td width="126" valign="top" style="width: 94.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Hybrid</span></p>
  </td>
  <td width="473" valign="top" style="width: 354.6pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="NumberedParagraph" style="margin: 0cm 0cm 6pt; text-indent: 0cm;"><span lang="EN-US">Triggered by the
  arrival of events, event data, subprogram calls, as well as every period
  triggered by the dispatcher.</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(46)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Note
that background threads do not have their current execution position reset on a
mode switch. In other words, the background thread will resume execution from
where it was previously suspended due to a mode switch.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(47)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Note
that background threads are suspended when not active in the current mode.  If
they have access to shared data components, they may have locked the resource
at the time of suspension and potentially cause deadlock if active threads also
share access to the same data component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(48)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
background thread is scheduled to execute such that all other threads’ timing
requirements are met. If more than one background thread is dispatched, the
processor’s scheduling protocol determines how such background threads are
scheduled.  For example, a FIFO protocol for background threads means that one
background thread at a time is executed, while fair share means that all
background threads will make progress in their execution.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(49)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Overflow_Handling_Protocol </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">property for event or event
data ports specifies the action to take when e</span><span lang="EN-US">vents
arrive too frequently. These events are ignored, queued, or are treated as an
error.  The error treatment causes the currently active dispatch to be aborted,
allowing it to clean up through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Entrypoint</span><span lang="EN-US"> and then be
redispatched.  For more details on port queuing see section </span><span lang="EN-US">8.3.3</span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Examples</span></p>

<pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"><a name="3d9667a0-420a-4dc2-9e64-20cba36e5d99" id="id_3d9667a0-420a-4dc2-9e64-20cba36e5d99" class="requality_id"></a>thread</span></span></b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Prime_Reporter </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">features</span></span></b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  Received_Prime : </span><b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">in event data port</span></b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Base_Types::Integer;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">properties</span></span></b></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  Dispatch_Protocol =&gt; Timed; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">end</span></span></b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Prime_Reporter; </span><br class="requality_node id_3d9667a0-420a-4dc2-9e64-20cba36e5d99" /><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">
</span><br class="requality_node id_3d9667a0-420a-4dc2-9e64-20cba36e5d99" /><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">
</span><b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">thread</span></b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Prime_Reporter_One </span><b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">extends</span></b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Prime_Reporter </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">features</span></span></b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  Received_Prime : </span><b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">refined to in event data port</span></b><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Base_Types::Integer </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">    {Compute_Entrypoint =&gt; "Primes.On_Received_Prime_One";};</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">    -- function called on message-based dispatch </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">properties</span></span></b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  Period =&gt; 9 Sec; -- timeout period</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  Priority =&gt; 45;</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  Compute_Entrypoint =&gt; "Primes.Report_One";   </span></span></pre><pre><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">  -- function called in case of timeout </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99">end</span></span></b><span lang="EN-US"><span class="requality_text id_3d9667a0-420a-4dc2-9e64-20cba36e5d99"> Prime_Reporter_One;</span></span></pre><pre><span lang="EN-US"> </span></pre>

<h3><a name="_Toc318320308"></a><a name="_Ref212504728"><span lang="EN-US">5.4.3<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Thread Scheduling and Execution</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(50)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
a thread action is <i>performing thread computation </i>(see </span><span lang="EN-US">Figure 5</span><span lang="EN-US">), the execution of the thread’s
entrypoint source text code sequence is managed by a scheduler.  This scheduler
coordinates all thread executions on one processor as well as concurrent access
to shared resources.  While performing the execution of an entrypoint the
thread can be <i>executing nominally</i> or <i>executing recovery</i> (see <span style="color: windowtext;">Figure 7</span>). While executing an entrypoint a
thread can be in one of five substates: ready, running, awaiting resource,
awaiting return, and awaiting resume (see </span><span lang="EN-US">Figure 6</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(51)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread initially enters the <i>ready</i> state.  A scheduler selects one thread
from the set of threads in the ready state to run on one processor according to
a specified scheduling protocol.  It ensures that only one thread is in the <i>running</i>
state on a particular processor.  If no thread is in the ready state, the
processor is idle until a thread enters the ready state.  A thread will remain
in the running state until it completes execution of the dispatch, until a
thread entering the ready state preempts it if the specified scheduling
protocol prescribes preemption, until it blocks on a shared resource, or until
an error occurs.  In the case of completion, the thread transitions to the
suspended <i>awaiting dispatch</i> state, ready to service another dispatch
request.  In the case of preemption, the thread returns to the ready state.  In
the case of resource blocking, it transitions to the <i>awaiting resource</i>
state.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(52)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Shared
data is accessed in a critical region.  Resource blocking can occur when a thread
attempts enter a critical region while another thread is already in this
critical region.  In this case the thread enters the <i>Awaiting resource</i>
state.  A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Concurrency_Control_Protocol</span><span lang="EN-US"> property value associated with the shared data component determines
the particular concurrency control mechanism to be used (see Section 5.1).  The
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Release_Resource</span><span lang="EN-US"> service calls are provided to indicate the entry and exit of
critical regions (see Section </span><span lang="EN-US">5.1.1</span><span lang="EN-US">).  When a thread completes execution it is assumed that all
critical regions have been exited, i.e., access control to shared data has been
released.  Otherwise, the execution of the thread is considered erroneous.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(53)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subprogram
calls to remote subprograms are synchronous or semi-synchronous.  In the
synchronous case, a thread in the running state enters the <i>awaiting return</i>
state when performing a call to a subprogram whose service is performed by a
subprogram in another thread.  The service request for the execution of the
subprogram is transferred to the remote subprogram request queue of a thread as
specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Actual_Subprogram_Call</span><span lang="EN-US"> property that specifies the binding of the subprogram call to a
subprogram in another thread.  When the thread executing the corresponding remote
subprogram completes and the result is available to the caller, the thread with
the calling subprogram transitions to the ready state.  In the semi-synchronous
case, the calling thread continues to execute concurrently until it awaits the
result of the call (see service call </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Result</span><span lang="EN-US"> in Section </span><span lang="EN-US">5.4.8</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(54)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
background thread may be temporarily suspended by a mode switch in which the
thread is not part of the new mode, as indicated by the <b>exit(Mode)</b> in Figure
6.  In this case, the thread transitions to the <i>awaiting mode_entry </i>state. 
If the thread was in a critical region, it will be suspended once it releases
all resources on exit of the critical region.  A background thread resumes
execution when it becomes part of the current mode again in a later mode
switch.  It then transitions from the <i>awaiting_mode_entry</i> state into the
<i>ready</i> state.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(55)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Execution
of any of these entrypoints is characterized by actual execution time (<i>c</i>)
and by elapsed time (<i>t</i>).  Actual execution time is the time accumulating
while a thread actually runs on a processor.  Elapsed time is the time
accumulating as real time since the arrival of the dispatch request. 
Accumulation of time for <i>c</i> and <i>t</i> is indicated by their first derivatives
</span><span lang="EN-US" style="font-family: Symbol;">d</span><i><span lang="EN-US">c</span></i><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: Symbol;">d</span><i><span lang="EN-US">t</span></i><span lang="EN-US">.  A derivative value of 1 indicates
time accumulation and a value of 0 indicates no accumulation.  Figure 6 shows
the derivative values for each of the scheduling states.  A thread accumulates
actual execution time only while it is in the running state.  The processor
time, if any, required to switch a thread between the running state and any of
the other states, which is specified in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Thread_Swap_Execution_Time</span><span lang="EN-US"> property of the processor, is not accounted for in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Execution_Time</span><span lang="EN-US"> property, but must be accounted for by an analysis tool.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(56)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
execution time and elapsed time for each of the entrypoints are constrained by
the entrypoint-specific </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">&lt;entrypoint&gt;_Execution_Time
</span><span lang="EN-US">and entrypoint-specific </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">&lt;entrypoint&gt;_Deadline</span><span lang="EN-US"> properties specified for the thread.  If no entrypoint specific
execution time or deadline is specified, those of the containing thread apply. 
There are three timing constraints:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Actual execution time, <i>c</i>, will not exceed
the maximum entrypoint-specific execution time. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Upon execution completion the actual execution
time, <i>c</i>, will have reached at least the minimum entrypoint-specific
execution time.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Elapsed time, <i>t</i>, will not exceed the
entrypoint-specific deadline.</span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><span style="position: relative; z-index: 12;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 12;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 11;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 11;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 10;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 10;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 9;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 9;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 8;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 8;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 7;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 7;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 6;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 6;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 5;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 5;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 4;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 4;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 3;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 3;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 2;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 2;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span style="position: relative; z-index: 1;"><span style="position: absolute; left: -96px; top: -662px; width: 106px; height: 29px;">

<table cellspacing="0" cellpadding="0">
 <tbody><tr>
  <td width="106" height="29" style="vertical-align: top;"><span style="position: absolute; left: 0pt; z-index: 1;">
  <table width="100%" cellspacing="0" cellpadding="0">
   <tbody><tr>
    <td>
    <div style="padding: 3.6pt 7.2pt;">
    <p class="MsoNormal"><span lang="EN-US">Dispatch </span></p>
    </div>
    </td>
   </tr>
  </tbody></table>
  </span> </td>
 </tr>
</tbody></table>

</span></span><span lang="EN-US"><img width="623" height="410" src="imgs/image018.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320415"></a><a name="_Toc167033807"></a><a name="_Toc86591128"></a><a name="_Toc79295055"></a><a name="_Ref56920789"></a><a name="_Ref34886428"></a><a name="_Ref26175839"><span lang="EN-US">Figure </span></a><span lang="EN-US">6</span><span lang="EN-US"> Thread Scheduling and Execution States</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(57)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Execution
of a thread is considered anomalous when the timing constraints are violated.
Each timing constraint may be enforced and reported as an error at the time, or
it may be detected after the violation has occurred and reported at that time. 
The implementor of a runtime system must document how it handles timing
constraints.</span></p>

<h3><a name="_Toc318320309"></a><a name="_Ref187214827"><span lang="EN-US">5.4.4<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Execution Fault Handling</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(58)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
fault is defined to be an anomalous undesired change in thread execution
behavior, possibly resulting from an anomalous undesired change in data being
accessed by that thread or from violation of a </span><span lang="EN-US">compute
time</span><span lang="EN-US"> or </span><span lang="EN-US">deadline</span><span lang="EN-US"> constraint.  An error is a fault that is detected during the
execution of a thread.  Detectable errors are classified as <i>thread recoverable</i>
errors, or <i>thread unrecoverable</i> errors.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(59)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A <i>thread
recoverable</i> error may be handled as part of normal execution by that thread,
e.g., by exception handlers programmed in the source text of the application. The
exception handler may propagate the error to an external handler by sending an
event or event data through a port.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(60)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If the
thread recoverable error is not handled by the application, the thread affected
by the error is given a chance to recover through the invocation of the
thread’s recover entrypoint.  The recover entrypoint source text sequence has
the opportunity to update the thread’s application state.  The recover
entrypoint is assumed to have access to an error code through a runtime service
call </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Error_Code</span><span lang="EN-US">. The recover entrypoint may report the fact that it performed
recovery through a user–defined port.  Upon completion of the recover
entrypoint execution, the performance of the thread’s dispatch is considered
complete.  In the case of performing thread computation, this means that the
thread transitions to the suspended await dispatch state (see Figure 5), ready
to perform additional dispatches.  Concurrency control on any shared resources
must be released.  If the recover entrypoint is unable to recover the error
becomes a <i>thread unrecoverable</i> error.  This thread-level fault handling in
terms of thread scheduling states is illustrated in <span style="color: windowtext;">Figure
7</span>. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(61)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread recoverable error may occur during the execution of a remote subprogram
call.  In this case, the thread servicing the remote call is given a chance to
recover as well as the thread that made the call.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(62)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
the presence of a thread recoverable error, the maximum interval of time
between the dispatch of a thread and its returning to the suspended awaiting
dispatch state is the sum of the thread’s compute deadline and its recover
deadline. The maximum execution time consumed is the sum of the compute
execution time and the recover execution time. In the case when an error is
encountered during recovery, the same numbers apply. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(63)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Thread
unrecoverable</span></i><span lang="EN-US"> errors are reported as event data through
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error</span><span lang="EN-US"> port of the thread, where they can be communicated to a separate
error handling thread for further analysis and recovery actions.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(64)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A thread
unrecoverable error causes the execution of a thread to be terminated
prematurely without undergoing recovery.  The thread unrecoverable error is
reported as an error event through the predeclared </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error</span><span lang="EN-US"> event data
port, if that port is connected.  If this implicit error port is not connected,
the error is not propagated and other parts of the system will have to
recognize the fault through their own observations.  In the case of a thread
unrecoverable error, the maximum interval between the dispatch of the thread
and its returning to the suspended awaiting dispatch state is the compute
deadline, and the maximum execution time consumed is the compute execution
time.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(65)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
errors detected by the runtime system, error details are recorded in the data
portion of the event as specified by the implementation.  For errors detected
by the source text, the application can choose its encoding of error detail and
can raise an event in the source text.  If the propagated error will be used to
directly dispatch another thread or trigger a mode change, only an event needs
to be raised.  If the recovery action requires interpretation external to the
raising thread, then an event with data must be raised. The receiving thread
that is triggered by the event with data can interpret the error data portion
and raise events that trigger the intended mode transition.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="623" height="410" src="imgs/image019.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320416"></a><a name="_Toc167033808"></a><a name="_Toc86591129"></a><a name="_Toc79295056"></a><a name="_Ref34901731"><span lang="EN-US" style="color: windowtext;">Figure </span></a><span lang="EN-US" style="color: windowtext;">7</span><span lang="EN-US" style="color: windowtext;">
Performing Thread Execution with Recovery</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(66)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
timing fault during initialize, compute, activation, and deactivation
entrypoint executions is considered to be a thread recoverable error.  A timing
fault during recover entrypoint execution is considered to be a thread
unrecoverable error.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(67)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
any error is encountered while a thread is executing a recover entrypoint, it
is treated as a thread unrecoverable error.  In other words, an error during
recovery must not cause the thread to recursively re-enter the executing
recovery state.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(68)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If a
fault is encountered by the application itself, it may explicitly raise an
error through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> service call on the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error </span><span lang="EN-US">port with the error class as
parameter.  This service call may be performed in the source text of any entrypoint. 
In the case of recover entrypoints, the error class must be <i>thread
unrecoverable</i>.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(69)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Faults
may also occur in the execution platform. They may be detected by the execution
platform components themselves and reported through an event or event data
port, as defined by the execution platform component.  They may go undetected
until an application component such as a health monitoring thread detects
missing health pulse events, or a periodic thread detects missing input.  Once
detected, such errors can be handled locally or reported as event data.</span></p>

<h3><a name="_Ref199888167"></a><a name="_Toc318320310"></a><a name="_Ref207754489"><span lang="EN-US">5.4.5<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Thread Internal Modes and Mode Transitions</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(70)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread can have modes declared inside its type or implementation. They represent
thread-internal execution paths and allow mode-specific property values to be
associated with the thread.  For example, the thread can have different
execution times under different modes. Application source text (programming
code) actually executes branch and merge points in various places of its code
sequence and branches based on state values or based on input. In terms of the
mode abstraction this means that the (mode) state at time of dispatch may
affect the branch condition, the input to the thread execution may affect the
branch condition, or a combination, or a change in the state value is the
result of computation based on the previous value and/or input. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(71)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
mode transition of a thread-internal mode may be implicit in that it is
determined by the application source code of the thread.  This source code may
follow and execution sequence based on the content of thread input or by the
value of a static data variable. In the former case, the current mode is
determined at the time the thread input is determined, by default thread
dispatch time. In the latter case, the value of the static data determines the
current mode at the next dispatch.  The effect is a possible change in
mode-specific property values to reflect a change in source text internal
execution behavior, e.g., a change in worst-case execution time, and in the
entrypoint or call sequence to be executed at the next dispatch.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(72)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Change
of a thread-internal mode may be explicitly modeled by declaring a mode
transition that names an incoming thread port, an event raised within a thread
(declared as <b>self</b>.eventname), or names a subprogram call with an
outgoing event. Change of a thread-internal mode may also be modeled through
the </span><span lang="EN-US">Behavior Model</span><span lang="EN-US"> </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">. In this case, mode
transitions are tracked by the runtime system to determine the most recent
current mode for the next dispatch of a thread.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(73)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If a
higher fidelity behavioral model is desired, the Behavior Annex (</span><span lang="EN-US">Annex Document D</span><span lang="EN-US">), which uses the AADL modes
as the initial set of states, can be used for more complex behavioral
specifications.  The final authority of the actual behavior of the source text
is the program code itself.</span></p>

<h3><a name="_Toc318320311"><span lang="EN-US">5.4.6<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">System Synchronization Requirements</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(74)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
application system may consist of multiple threads.  Each thread has its own
hybrid automaton state with its own <i>c</i> and <i>t</i> variables.  This
results in a set of concurrent hybrid automata.  In the concurrent hybrid
automata model for the complete system, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ST</span><span lang="EN-US"> is a single
real-valued variable shared by all threads that is never reset and whose rate
is 1 in all states.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ST</span><span lang="EN-US"> is called the <i>reference timeline</i>.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(75)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
set of periodic threads are said to be logically dispatched simultaneously at
global real time <i>ST</i> if the order in which all exchanges of control and
data at that dispatch event are identical to the order that would occur if
those dispatches were exactly dispatched simultaneously in true and perfect
real time.   The <i>hyperperiod h</i> of a set of periodic threads is the next
time <i>ST+h</i> at which they are logically dispatched simultaneously. The
hyperperiod is the least common multiple of the periodic thread periods.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(76)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
application system is said to be synchronized if the dispatch of all periodic
threads contained in that application system occurs logically simultaneously at
intervals of their hyperperiod.  In a globally synchronous system </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ST</span><span lang="EN-US"> is a
global <i>reference time</i>, i.e., a single real-valued variable representing
a global clock.  It represents a single global <i>synchronization domain</i>.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(77)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">Within a
synchronization domain, perfect synchronization may not occur in a actual
system.  There may always be clock error bounds in a distributed clock,
and jitter in exactly when events (like a dispatch) would occur even with perfect
clock interrupts due to things like non-preemptive blocking times (during which
clock interrupts might be masked briefly).  Within a synchronization
domain, it is the responsibility of each physical implementation to take these
imperfections into account when providing the synchronization domain for
programmers (e.g., make sure the message transmission schedule includes enough
margin for the message to arrive at the destination by the time it is needed,
taking into account these various effects in the particular implementation).</span></p>

<h3><a name="_Toc318320312"></a><a name="_Ref199888113"><span lang="EN-US">5.4.7<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Asynchronous Systems</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(78)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In a
globally asynchronous system there are multiple <i>reference times</i>, i.e.,
multiple variables </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ST<sub>j</sub></span><span lang="EN-US">. They represent different <i>synchronization domains</i>.  Any time
related coordination and communication between threads, processors, and devices
across different synchronization domains must take into account differences in the
<i>reference time</i> of each of those synchronization domains.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(79)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Reference
times can be represented by instances of a predeclared device type called </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Reference_Time</span><span lang="EN-US">. Characteristics of this reference time, such as clock drift rate
and maximum clock drift can be specified as properties of these instances.  Processors,
devices, buses, and memory can be assigned different reference times through
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Reference_Time</span><span lang="EN-US"> property.  Similarly, application components can be assigned
reference times to represent the fact that they may read the time, e.g., to
timestamp data. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(80)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
reference time for thread execution is determined by the reference time of the
processor on which the thread executes. The reference time of communication
between threads, devices, and processors is determined by the reference time of
the source and destination, and the reference time of any execution platform
component involved in the communication if it is time-driven.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(81)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Message-passing
semantics of communication and thread execution is represented by aperiodic
threads whose dispatch is triggered by arrival of messages and message may be
queued in the event data port.  This communication paradigm is insensitive to
time, thus, not affected by multiple synchronization domains.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(82)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data-stream
semantics of communication and thread execution are represented by periodic
threads and data ports.  In this case the sampling of the input is sensitive to
a common reference time between the source and the destination thread if the
connections are immediate and delayed to ensure deterministic communication.
Deterministic communication minimizes latency jitter, while non-deterministic
communication can result in latency jitter in units of the sampling rate, the
latter often leading to instability of latency sensitive applications such as
control systems. In the case of sampling data port connections the non-deterministic
nature of sampling accommodates different reference times.  Similarly, a
periodic thread may non-deterministically sample event ports and event data
ports, e.g., a health monitor sampling an alarm queue. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(83)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Connection_Type</span><span lang="EN-US"> property of a bus specifies the types of connections supported by a
bus.  Buses that connect processors with different reference times may exclude
immediate and delayed connections from their support if determinism cannot be
guaranteed through a protocol.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(84)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Mode
switching requires time-sensitive coordination of deactivation and activation
of threads and connections. There is the time ordering of events that request
mode switching, and the coordination of switching modes in multiple modal
subsystems as part of a single mode switch. Timed coordination can be
guaranteed within one synchronization domain and may be feasible across
synchronization domains with bounded time drift through appropriate protocols.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(85)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Solutions
have been devised to address this issue.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">ARINC653: Thread execution and communication within
a partition is assumed to be within the same synchronization domain, 
Cross-partition communication is assumed to be message-based or (phase-)delayed
for sampling ports. This assures that placement of partitions on different
processors or at different parts of the timeline within one processor does not
affect the timing. However, this delayed communication places a synchronicity
requirement on those partitions that communicate with each other. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Globally Asynchronous Locally Synchronous (GALS):
This model reflects the fact that some systems cannot be globally synchronized,
e.g., integrated modular avionics (IMA) system may consist of a collection of
ARINC653 subsystems and interact via an ARINC664 network.  In this case the
burden is placed on the application system to deal with synchronicity within
subsystems and asynchronicity across subsystems.  This can be reflected in AADL
by multiple synchronization domains and the requirement that data port
connections across synchronization domains are sampled connections.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Time Triggered Architecture (TTA): In this model
a central communication medium provides a statically allocated time-division
protocol and acts as a global reference time.  Either part of the protocol
provides reference time ticks to subsystems.  Execution of subsystems can be aligned
with the arrival of data at assigned time slots in the communication protocol
to assure deterministic communication of data streams. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Physically Asynchronous Logically Synchronous
(PALS): In this model a logical protocol or application layer provides
coordination of time-sensitive events across asynchronous subsystems. For
example, the system may periodically re-synchronize clocks, thus, bound clock
drift.  This clock drift bound may be accommodated by appropriate time slack
the same way jitter in a synchronous system is accommodated.  Similarly,
hand-shaking protocols may be used to coordinate less frequently occurring
synchronization events, e.g., globally synchronous mode switching if required. 
</span></p>

<h3><a name="_Toc318320313"></a><a name="_Ref205462685"><span lang="EN-US">5.4.8<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Runtime Support For Threads</span></a><span lang="EN-US"> </span></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(86)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
standard set of runtime services are provided.  The application program
interface for these services is defined in the applicable source language annex
of this standard. They are callable from within the source text.  The following
subprograms may be explicitly called by application source code, or they may be
called by an AADL runtime system that is generated from an AADL model.  </span></p>

<p class="NumberedParagraph"><a name="AwaitDispatchRuntime"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(87)<span style="font: 7pt &quot;Times New Roman&quot;;"> 
</span></span><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Dispatch</span><span lang="EN-US"> 
runtime service is called to suspend the thread execution at completion of its
dispatch execution.  It is the point at which the next dispatch resumes. The
service call takes several parameters.  It takes a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DispatchPort</span><span lang="EN-US"> list and
an optional trigger condition function to identify the ports and the condition
under which the dispatch is triggered.  If the condition function is not
present any of the ports in the list can trigger the dispatch.  It takes a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DispatchedPort</span><span lang="EN-US"> as out parameter to return the port(s) that triggered the
dispatch.  It takes </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OutputPorts</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">InputPorts</span><span lang="EN-US"> as port lists.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OutputPorts</span><span lang="EN-US">, if present, identifies the set of ports whose sending is initiated
at completion of execution, equivalent to an implicit </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service
call. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">InputPorts</span><span lang="EN-US">, if present, identifies the set of ports whose content is received
at the next dispatch, equivalent to an implicit </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service
call.  </span></p>

<pre><span lang="EN-US">    <b>subprogram </b> Await_Dispatch </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre style="margin-left: 35.25pt;"><span lang="EN-US">-- List of ports whose output is sent at completion/deadline</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">OutputPorts: <b>in parameter </b>&lt;implementation-defined port list&gt;;</span></pre><pre><span lang="EN-US">      -- List of ports that can trigger a dispatch</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DispatchPorts: <b>in parameter</b> &lt;implementation-defined port list&gt;; </span></pre><pre><span lang="EN-US">      -- list of ports that did trigger a dispatch</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DispatchedPort: <b>out parameter </b>&lt; implementation-defined port list&gt;;</span></pre><pre><span lang="EN-US">      -- optional function as dispatch guard, takes port list as parameter </span></pre><pre><span lang="EN-US">      DispatchConditionFunction: <b>requires</b> <b>subprogram access</b>;</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">-- List of ports whose input is received at dispatch</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">InputPorts: <b>in parameter</b> &lt;implementation-defined port list&gt;; </span></pre><pre><span lang="EN-US">    <b>end</b> Await_Dispatch;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(88)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> runtime service shall be provided that allows a thread to
explicitly raise a thread recoverable or thread unrecoverable error.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> takes an error type identifier as parameter.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b>  Raise_Error </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">errorID: <b>in parameter </b>&lt;implementation-defined error type&gt;;</span></pre><pre><span lang="EN-US">    <b>end</b> Raise_Error;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(89)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Error_Code</span><span lang="EN-US"> runtime service shall be provided that allows a recover entrypoint
to determine the type of error that caused the entrypoint to be invoked.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Get_Error_Code </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">errorID: <b>out parameter</b> &lt;implementation-defined error type&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Get_Error_Code;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(90)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subprograms
have event ports but do not have an error port. If a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> is
called, it is passed to the error port of the enclosing thread.  If a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> is called by a remotely called subprogram, the error is passed to
the error port of the thread executing the remotely called subprogram.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> method is permitted to have an error identification as parameter value.
This error identification can be passed through the error port as the data
value, since the error port is defined as event data port.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(91)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Result</span><span lang="EN-US"> runtime service shall be provided that allows an application to wait
for the result of a semi-synchronous subprogram call.  </span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Await_Result </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">CallID: <b>in parameter</b> &lt;implementation-defined call ID&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Await_Result;</span></pre>

<p class="DescriptionHeading" style="margin: 0cm 0cm 12pt;"><span lang="EN-US">Processing Requirements and
Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(92)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Multiple
models of implementation are permitted for the dispatching of threads.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">One such model is that a runtime executive
contains the logic reflected in Figure 5 and calls on the different entrypoints
associated with a thread.  This model naturally supports source text in a
higher level domain language.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An alternative model is that the code in the
source text includes a code pattern that reflects the logic of Figure 5 through
explicitly programmed calls to the standard </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Dispatch</span><span lang="EN-US">
runtime service, including a repeated call (while loop) to reflect repeated
dispatch of the compute entrypoint code sequence.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(93)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Multiple
models of implementation are permitted for the implementation of thread
entrypoints.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">One such model is that each entrypoint is a
possibly separate function in the source text that is called by the runtime
executive.  In this case, the logic to determine the context of an error is
included in the runtime system.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A second model of implementation is that a
single function in the source text is called for all entrypoints.  This
function then invokes an implementer-provided </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Status</span><span lang="EN-US">
runtime service call to identify the context of the call and to branch to the
appropriate code sequence.  This alternative is typically used in conjunction
with the source text implementation of the dispatch loop for the compute
entrypoint execution.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(94)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementing a system is permitted to choose how executing threads
will be scheduled.  A method of implementation is required to verify to the
required level of assurance that the resulting schedule satisfies the period
and deadline properties.  That is, a method of implementing a system should
schedule all threads so that the specified timing constraints are always
satisfied.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(95)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
use of the term “preempt” to name a scheduling state transition in Figure 6
does not imply that preemptive scheduling disciplines must be used;
non-preemptive disciplines are permitted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(96)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Execution
times associated with transitions between thread scheduling states, for example
context swap times (specified as properties of the hosting processor), are not
billed to the thread’s actual execution time, i.e., are not reflected in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Time</span><span lang="EN-US"> property value.  However, these times must be included in a
detailed schedulability model for a system.  These times must either be
apportioned to individual threads, or to anonymous threads that are introduced
into the schedulability model to account for these overheads.  A method of
processing specifications is permitted to use larger compute time values than
those specified for a thread in order to account for these overheads when
constructing or analyzing a system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(97)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementing a system must support the periodic dispatch protocol.  A
method of implementation may support only a subset of the other standard
dispatch protocols.  A method of implementation may support additional dispatch
protocols not defined in this standard.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(98)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementing a system may perform loading and initialization
activities prior to the start of system operation.  For example, binary images
of processes and initial data values may be loaded by permanently storing them
in programmable memory prior to system operation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(99)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementing a system must specify the set of errors that may be
detected at runtime.  This set must be exhaustively and exclusively divided
into those errors that are thread recoverable or thread unrecoverable, and
those that are exceptions to be handled by language constructs defined in the
applicable programming language standard.  The set of errors classified as
source language exceptions may be a subset of the exceptions defined in the
applicable source language standard.  That is, a method of implementation may
dictate that a language-defined exceptional condition should not cause a
runtime source language exception but instead immediately result in an error. 
For each error that is treated as a source language exception, if the source
text associated with that thread fails to properly catch and handle that
exception, a method of implementation must specify whether such unhandled
exceptions are thread recoverable or thread unrecoverable errors.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(100)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A consequence of the above permissions is that a
method of implementing a system may classify all errors as thread
unrecoverable, and may not provide an executing recovery scheduling state and
transitions to and from it.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(101)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A method of implementing a system may enforce,
at runtime, a minimum time interval between dispatches of sporadic threads.  A
method of implementing a system may enforce, at runtime, the minimum and
maximum specified execution times.  A method of implementing a system may
detect at runtime timing violations. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(102)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A method of implementing a system may support
handling of errors that are detected while a thread is in the suspended, ready,
or blocked state.  For example, a method of implementation may detect event
arrivals for a sporadic thread that violate the specified period.  Such errors
are to be kept pending until the thread enters the executing state, at which
instant the errors are raised for that thread and cause it to immediately enter
the recover state.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(103)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If alternative thread scheduling semantics are
used, a thread unrecoverable error that occurs in the perform thread
initialization state may result in a transition to the perform thread recovery
state and thence to the suspended awaiting mode state, rather than to the
thread halted state.  The deadline for this sequence is the sum of the
initialization deadline and the recovery deadline.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(104)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If alternative thread scheduling semantics are
used, a method of implementation may prematurely terminate threads when a
system mode change occurs that does not contain them, instead of entering
suspended awaiting mode.  Any blocking resources acquired by the thread must be
released.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(105)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If alternative thread scheduling semantics are
used, the load deadline and initialize deadline may be greater than the period
for a thread.  In this case, dispatches of periodic threads shall not occur at
any dispatch time prior to the initialization deadline for that periodic
thread.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(106)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">This standard does not specify which thread or
threads perform virtual address space loading.  This may be a thread in the
runtime system or one of the application threads.</span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">The deadline of a calling thread will impose an
end-to-end deadline on all activities performed by or on behalf of that thread,
including the time required to perform any remote subprogram calls made by that
thread. The deadline property of a remotely called subprogram may be useful for
scheduling methods that assign intermediate deadlines in the course of
producing an overall end-to-end system schedule.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc8550367"></a><a name="_Toc2492769"></a><a name="_Toc535736346"></a><a name="_Toc535736026"></a><a name="_Toc535729850"></a><a name="_Ref35191289"></a><a name="_Ref35101821"></a><a name="_Ref35013570"></a><a name="_Ref34900218"></a><a name="_Ref33947666"></a><a name="_Ref33854769"></a><a name="_Ref32289615"></a><a name="_Ref32289171"></a><a name="_Toc27797762"></a><a name="_Toc27449590"></a><a name="_Ref25643839"></a><a name="_Toc8550355"></a><a name="_Toc318320314"></a><a name="_Toc169684081"></a><a name="_Toc167033730"></a><a name="_Toc168661848"></a><a name="_Toc86725659"></a><a name="_Toc86220696"></a><a name="_Toc86220232"></a><a name="_Toc86219851"></a><a name="_Toc86219746"></a><a name="_Toc79294981"></a><a name="_Toc12428070"></a><a name="_Toc12428073"></a><a name="_Toc12428088"></a><span lang="EN-US">5.5<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Thread Groups</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A thread group represents an organizational component to logically
group threads contained in processes.  The type of a thread group component
specifies the features and required subcomponent access through which threads
contained in a thread group interact with components outside the thread group. 
Thread group implementations represent the contained threads and their
connectivity.  Thread groups can have multiple modes, each representing a
possibly different configuration of subcomponents, their connections, and mode-specific
property associations.  Thread groups can be hierarchically nested.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A thread group does not represent a virtual address space nor does
it represent a unit of execution.  Therefore, a thread group must be directly
or indirectly contained within a process. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: -21.25pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="88" style="width: 65.9pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="276" style="width: 207pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="184" style="width: 137.85pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="88" style="width: 65.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">thread group</span></b></p>
  </td>
  <td width="276" style="width: 207pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_eae79cad-56ca-477e-b74d-d3528489500f"><a name="eae79cad-56ca-477e-b74d-d3528489500f" id="id_eae79cad-56ca-477e-b74d-d3528489500f" class="requality_id"></a>Features: </span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">       <span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752"><a name="c65d12c2-7740-4602-b331-f8fdeacf7752" id="id_c65d12c2-7740-4602-b331-f8fdeacf7752" class="requality_id"></a> 
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">port</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">feature group</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">provides data access</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">requires data access</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">provides subprogram access</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">requires subprogram access</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">provides subprogram group access</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">requires subprogram group access</span></span></p><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_c65d12c2-7740-4602-b331-f8fdeacf7752">feature </span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_64333729-afac-4e17-b0f5-3f136d0f48f0"><a name="64333729-afac-4e17-b0f5-3f136d0f48f0" id="id_64333729-afac-4e17-b0f5-3f136d0f48f0" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_64333729-afac-4e17-b0f5-3f136d0f48f0">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_64333729-afac-4e17-b0f5-3f136d0f48f0">Modes: yes</span></span></p><span class="requality_text id_64333729-afac-4e17-b0f5-3f136d0f48f0">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_64333729-afac-4e17-b0f5-3f136d0f48f0">Properties: yes</span></span></p>
  </td>
  <td width="184" style="width: 137.85pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_30777c7b-4a0c-41b5-94dd-5a401ad40c2b"><a name="30777c7b-4a0c-41b5-94dd-5a401ad40c2b" id="id_30777c7b-4a0c-41b5-94dd-5a401ad40c2b" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">  <span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111"><a name="e300894f-a635-48cc-b34f-076cdf7c8111" id="id_e300894f-a635-48cc-b34f-076cdf7c8111" class="requality_id"></a>      
  </span></span></span><span lang="EN-US"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">data</span></span></p><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">subprogram</span></span></p><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">subprogram group</span></span></p><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">thread</span></span></p><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">thread group</span></span></p><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e300894f-a635-48cc-b34f-076cdf7c8111">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f"><a name="16069a8c-1714-4726-9a7b-6c6915b83e7f" id="id_16069a8c-1714-4726-9a7b-6c6915b83e7f" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">Connections: yes</span></span></p><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">Flows: yes</span></span></p><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">Modes: yes</span></span></p><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_16069a8c-1714-4726-9a7b-6c6915b83e7f">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> <span class="requality_text id_df752f2b-315d-4ce1-9178-37d93a859b00"><a name="df752f2b-315d-4ce1-9178-37d93a859b00" id="id_df752f2b-315d-4ce1-9178-37d93a859b00" class="requality_id"></a></span></span></p><span class="requality_text id_df752f2b-315d-4ce1-9178-37d93a859b00">

</span><p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_df752f2b-315d-4ce1-9178-37d93a859b00">(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_df752f2b-315d-4ce1-9178-37d93a859b00">        
</span></span></span><span lang="EN-US"><span class="requality_text id_df752f2b-315d-4ce1-9178-37d93a859b00">A thread group component type can contain
provides and requires data access, as well as port, feature group, provides and
requires subprogram access declarations, and provides and requires subprogram
group access declarations.</span>  I<span class="requality_text id_308ebe84-f1be-42af-a5b3-c31b2120b7cf"><a name="308ebe84-f1be-42af-a5b3-c31b2120b7cf" id="id_308ebe84-f1be-42af-a5b3-c31b2120b7cf" class="requality_id"></a>t can also contain flow specifications, modes
subclauses, and property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_abe44ef5-9592-4c4d-8a8e-bb347863c876"><a name="abe44ef5-9592-4c4d-8a8e-bb347863c876" id="id_abe44ef5-9592-4c4d-8a8e-bb347863c876" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_abe44ef5-9592-4c4d-8a8e-bb347863c876">        
</span></span></span><span lang="EN-US"><span class="requality_text id_abe44ef5-9592-4c4d-8a8e-bb347863c876">A thread group component implementation can
contain abstract, data, subprogram, subprogram group, thread, and thread group subcomponent
declarations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_5a505122-93dd-4e12-a01a-10a5a97901d3"><a name="5a505122-93dd-4e12-a01a-10a5a97901d3" id="id_5a505122-93dd-4e12-a01a-10a5a97901d3" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_5a505122-93dd-4e12-a01a-10a5a97901d3">        
</span></span></span><span lang="EN-US"><span class="requality_text id_5a505122-93dd-4e12-a01a-10a5a97901d3">A thread group implementation can contain a connections
subclause, a flows subclause, a modes subclause, and properties subclause. </span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ca165072-3bad-458e-a541-4b89f307bde4"><a name="ca165072-3bad-458e-a541-4b89f307bde4" id="id_ca165072-3bad-458e-a541-4b89f307bde4" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ca165072-3bad-458e-a541-4b89f307bde4">        
</span></span></span><span lang="EN-US"><span class="requality_text id_ca165072-3bad-458e-a541-4b89f307bde4">A thread group must not contain a subprogram
calls subclause.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to source text</span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Inheritable thread properties</span></span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Synchronized_Component: <b>inherit</b> <b>aadlboolean </b>=&gt; <b>true</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Active_Thread_Handling_Protocol: </span></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US">   inherit</span></b><span lang="EN-US"> Supported_Active_Thread_Handling_Protocols =&gt; abort</span></pre><pre><span lang="EN-US">Period: <b>inherit</b> Time</span></pre><pre><span lang="EN-US">Deadline: <b>inherit</b> Time =&gt; Period</span></pre><pre><span lang="EN-US">Dispatch_Offset: <b>inherit </b>Time</span></pre><pre style="text-align: justify;"><tt><span lang="EN-US">First_Dispatch_Time</span></tt><b><span lang="EN-US"> : inherit </span></b><span lang="EN-US">Time</span></pre><pre><span lang="EN-US">-- Scheduling properties</span></pre><pre><span lang="EN-US">Priority<span class="HTMLPreformattedChar5">:</span> <b>inherit</b> <b>aadlinteger</b></span></pre><pre><span lang="EN-US">Time_Slot: <b>list of aadl</b><b>integer </b></span></pre><pre><span lang="EN-US">Criticality: <b>aadlinteger</b></span></pre><pre><span lang="EN-US">-- execution time related properties</span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span lang="EN-US">-- mode related properties</span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US">-- startup properties</span></pre><pre><span class="CODE"><span lang="EN-US">Startup_Deadline: Time</span></span></pre><pre><span class="CODE"><span lang="EN-US">Startup_Execution_Time: Time_Range</span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying constraints for processor and memory binding</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">Property associations of thread groups are
inheritable (see Section </span><span lang="EN-US">11.3</span><span lang="EN-US">)
by contained subcomponents. This means if a contained thread does not have a
property value defined for a particular property, then the corresponding
property value for the thread group is used. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A thread group allows threads contained in processes to be logically
organized into a hierarchy.  A thread group type declares the features and
required subcomponent access through which threads contained in a thread group
can interact with components declared outside the thread group. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Thread groups may contain subprogram subcomponents and subprogram
groups  The code of such subprograms and subprogram groups resides in the
address space of the containing process.  The subprograms may be called by
threads contained in the thread group.  The subprograms may also be called from
outside the thread group if made accessible through a provides subprogram
access declaration or subprogram group access declaration.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Thread groups may contain data components.  They represent state
that may be shared between threads inside the thread group through access
connections to the requires data access features of those threads, and shared
outside the thread group through provides data access features of the thread
group.</span></p>

<p class="NumberedParagraph"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">  
</span></span></span><span lang="EN-US">A thread group implementation contains
threads and thread groups.  Thread group nesting permits threads to be
organized hierarchically.  A thread group implementation also contains
connections to specify the interactions between the contained subcomponents and
modes to represent different configurations of subsets of subcomponents and
connections as well as mode-specific property associations.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320315"></a><a name="_Toc169684082"></a><a name="_Toc167033731"></a><a name="_Toc168661849"></a><a name="_Toc86725660"></a><a name="_Toc86220697"></a><a name="_Toc86220233"></a><a name="_Toc86219852"></a><a name="_Toc86219747"></a><a name="_Toc79294982"></a><a name="_Ref69825972"></a><a name="_Ref69731434"></a><a name="_Ref69731230"></a><a name="_Ref69731203"></a><a name="_Ref69701542"><span lang="EN-US">5.6<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Process</span></a><span lang="EN-US">es</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A process represents a virtual address space, i.e., it represents a
space partition unit whose boundaries are enforced at runtime.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Runtime_Protection</span><span lang="EN-US"> process property indicates whether runtime protection is disabled. The
virtual address space contains the program formed by the source text associated
with the process and its subcomponents.  Threads of a process must be
explicitly declared.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: -32.5pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="92" style="width: 69.25pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="278" style="width: 208.75pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="186" style="width: 139.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="92" style="width: 69.25pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">process</span></b></p>
  </td>
  <td width="278" style="width: 208.75pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_1df93ebb-4f2d-4223-a7fc-a15586cf5260"><a name="1df93ebb-4f2d-4223-a7fc-a15586cf5260" id="id_1df93ebb-4f2d-4223-a7fc-a15586cf5260" class="requality_id"></a>Features:</span> </span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">       <span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160"><a name="83a66bd8-4503-4f06-ba19-d2511b0bd160" id="id_83a66bd8-4503-4f06-ba19-d2511b0bd160" class="requality_id"></a> 
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">port</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">feature group</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">provides data access</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">requires data access</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">provides subprogram access</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">requires subprogram access</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">provides subprogram group access</span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">requires subprogram group access </span></span></p><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_83a66bd8-4503-4f06-ba19-d2511b0bd160">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_92dfea86-2174-4745-9895-796640f1503c"><a name="92dfea86-2174-4745-9895-796640f1503c" id="id_92dfea86-2174-4745-9895-796640f1503c" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_92dfea86-2174-4745-9895-796640f1503c">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_92dfea86-2174-4745-9895-796640f1503c">Modes: yes</span></span></p><span class="requality_text id_92dfea86-2174-4745-9895-796640f1503c">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_92dfea86-2174-4745-9895-796640f1503c">Properties: yes</span></span></p>
  </td>
  <td width="186" style="width: 139.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_c6fecb46-009f-4793-a250-02878892dbe5"><a name="c6fecb46-009f-4793-a250-02878892dbe5" id="id_c6fecb46-009f-4793-a250-02878892dbe5" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5"><a name="be8ea2c0-435c-44e7-9da0-0dc04b0a66b5" id="id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5" class="requality_id"></a>·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">data</span></span></p><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">subprogram</span></span></p><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">subprogram group</span></span></p><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">thread</span></span></p><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">thread group</span></span></p><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_be8ea2c0-435c-44e7-9da0-0dc04b0a66b5">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e"><a name="4107f1c3-6535-46c2-a242-dd451778309e" id="id_4107f1c3-6535-46c2-a242-dd451778309e" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">Connections: yes</span></span></p><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">Flows: yes</span></span></p><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">Modes: yes</span></span></p><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4107f1c3-6535-46c2-a242-dd451778309e">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_02ff3849-9c7a-4134-a34f-51cb915cf281"><a name="02ff3849-9c7a-4134-a34f-51cb915cf281" id="id_02ff3849-9c7a-4134-a34f-51cb915cf281" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_02ff3849-9c7a-4134-a34f-51cb915cf281">        
</span></span></span><span lang="EN-US"><span class="requality_text id_02ff3849-9c7a-4134-a34f-51cb915cf281">A process component type can contain port, feature
group, provides and requires data access, provides and requires subprogram
access declarations, and provides and requires subprogram group access
declarations.</span>  <span class="requality_text id_a9c3753f-304c-48d8-9e68-ed14a0ae6bf7"><a name="a9c3753f-304c-48d8-9e68-ed14a0ae6bf7" id="id_a9c3753f-304c-48d8-9e68-ed14a0ae6bf7" class="requality_id"></a>It can also contain flow specifications, modes subclause, and
property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8df33b1b-7a7b-4934-a0ce-0d89c5a6c738"><a name="8df33b1b-7a7b-4934-a0ce-0d89c5a6c738" id="id_8df33b1b-7a7b-4934-a0ce-0d89c5a6c738" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8df33b1b-7a7b-4934-a0ce-0d89c5a6c738">        
</span></span></span><span lang="EN-US"><span class="requality_text id_8df33b1b-7a7b-4934-a0ce-0d89c5a6c738">A process component implementation can contain abstract,
data, subprogram, subprogram group, thread, and thread group subcomponent declarations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_66fb6358-f53c-4825-a214-2c5e94b04126"><a name="66fb6358-f53c-4825-a214-2c5e94b04126" id="id_66fb6358-f53c-4825-a214-2c5e94b04126" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_66fb6358-f53c-4825-a214-2c5e94b04126">        
</span></span></span><span lang="EN-US"><span class="requality_text id_66fb6358-f53c-4825-a214-2c5e94b04126">A process implementation can contain a
connections subclause, a flows subclause, a modes subclause, and a properties
subclause.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A thread group must not contain a subprogram
calls subclause.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">The complete source text associated with
a process component must form a complete and legal program as defined in the
applicable source language standard.  This source text shall include the source
text that corresponds to the complete set of subcomponents in the process’s
containment hierarchy along with the data and subprograms that are referenced
by required subcomponent declarations. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- Runtime enforcement of virtual address space boundary</span></span></pre><pre><tt><span lang="EN-US">Runtime_Protection</span></tt><span lang="EN-US"> : <b>inherit</b> <b>aadlboolean</b> </span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to source text</span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to virtual address space loading</span></span></pre><pre><span lang="EN-US">Load_Time:</span><span lang="EN-US"> Time_Range</span></pre><pre><span lang="EN-US">Load_Deadline: Time</span></pre><pre><span lang="EN-US"><span class="HTMLPreformattedChar">-- Inheritable thread properties</span></span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Synchronized_Component: <b>inherit</b> <b>aadlboolean </b>=&gt; <b>true</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US"> </span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Active_Thread_Handling_Protocol: </span></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US">   inherit</span></b><span lang="EN-US"> Supported_Active_Thread_Handling_Protocols =&gt; abort</span></pre><pre><span lang="EN-US">Period: <b>inherit</b> Time</span></pre><pre><span lang="EN-US">Deadline: <b>inherit</b> Time =&gt; Period</span></pre><pre><span lang="EN-US">Dispatch_Offset: <b>inherit </b>Time</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- execution time related properties</span></span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span lang="EN-US">-- Scheduling related properties</span></pre><pre><span lang="EN-US">Priority<span class="HTMLPreformattedChar5">:</span> <b>inherit</b> <b>aadlinteger</b></span></pre><pre><span lang="EN-US">-- mode related properties</span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US">Deactivation_Policy: <b>enumeration </b>(inactive, unload) =&gt; inactive<b> </b></span></pre><pre><span lang="EN-US"><span class="HTMLPreformattedChar">-- process initialization</span></span></pre><pre><span class="CODE"><span lang="EN-US">Startup_Deadline: Time</span></span></pre><pre><span class="CODE"><span lang="EN-US">Startup_Execution_Time: Time_Range</span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying constraints memory binding</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre>

<p class="DescriptionHeading"><span lang="EN-US" style="font-style: normal;"> </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Every process has its own virtual address space.  This address space
provides access to source code and data associated with the process and all its
contained components.  This address space boundary is by default enforced at
runtime, but can be disabled through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Runtime_Protection</span><span lang="EN-US">
property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Threads contained in a process execute within the virtual address
space of the process.    </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processes may contain subprogram subcomponents.  The code of such
subprograms resides in the address space of the process.  The calling semantics
to such subprograms are defined in Section </span><span lang="EN-US">5.2</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A process may contain mode declarations. In this case, each mode can
represent a different configuration of contained threads, their connections,
and mode-specific property associations. The transition between modes is
determined by the mode transition declarations and is triggered by the arrival
of <i>mode transition trigger events</i> (see Sections </span><span lang="EN-US">12</span><span lang="EN-US"> and </span><span lang="EN-US">13.6</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The associated source text for each process is compiled and linked
to form binary images in accordance with the applicable source language
standard.  These binary images must be loaded into memory before any thread
contained in a process can execute, i.e., enter its <i>perform thread
initialization</i> state.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The time to load binary images into the virtual address space of a
process is bounded by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Load_Deadline</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Load_Time</span><span lang="EN-US"> properties.  The failure to meet these timing requirements is
considered an error.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The process states, transitions, and actions are illustrated in Figure
8.  Once a processor of an execution platform is started, binary images making
up the virtual address space of processes bound to the processor are ready to
be loaded, which is indicated by <b>started(processor)</b>.  If the process is
bound to a virtual processor of a processor, then process loading begins when
the virtual processor is started, which is indicated by <b>started(vprocessor)</b>.
Loading may take zero time for binary images that have been preloaded in ROM,
PROM, or EPROM.  Completion of loading, which is indicated by <b>loaded(process)</b>,
triggers threads to be initialized (see Figure 5).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A process, i.e., its contained threads, can be stopped (also known
as a deferred abort), which is indicated by <b>stop(process)</b> , or by
stopping the virtual processor or processor to which the process is bound.  A
process is considered stopped when all threads of the process are halted, are
awaiting a dispatch, or are not part of the current mode and have executed their
finalize entrypoint.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
process, i.e., its contained threads, can be aborted, which is indicated by <b>abort(process)</b>. 
In this case, all contained threads terminate their execution immediately and
release any resources (see Figure 5, Figure 6, and </span><span lang="EN-US" style="color: windowtext;">Figure 7</span><span lang="EN-US">).  </span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="547" height="390" src="imgs/image020.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320417"></a><a name="_Toc167033809"></a><a name="_Toc86591130"></a><a name="_Toc79295057"></a><a name="_Ref57362061"></a><a name="_Ref32390285"><span lang="EN-US">Figure </span></a><span lang="EN-US">8</span><span lang="EN-US"> Process States and Actions</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation must link all associated source text for the complete
set of subcomponents of a process, including the process component itself and
all actual subcomponents specified for required subcomponents.  This set of
source compilation units must form a single complete and legal program as
defined by the applicable source language standard.  Linking of this set of
source compilation units is performed in accordance with the applicable source
language standard for the process.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the applicable source language standard used to implement a component permits a
mixture of source languages, then subcomponents may have different source
language property values. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">This
standard permits dynamic virtual memory management or dynamic library linking
after process loading has completed and thread execution has started.  However,
a method for implementing a system must assure that all deadline properties will
be satisfied to the required level of assurance for each thread.  </span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><a name="_Toc27797763"></a><a name="_Toc27449591"></a><a name="_Toc12428112"></a><a name="_Toc12428113"></a><a name="_Toc12428138"></a><a name="_Toc12428139"></a><a name="_Toc12428160"></a><a name="_Toc12428177"></a><a name="_Toc12428178"></a><a name="_Toc12428183"></a><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">An AADL process represents only a virtual
address space and requires at least one explicitly declared thread subcomponent
in order to be executable. The explicitly declared thread in AADL allows for
unambiguous specification of port connections to threads. In contrast, a POSIX
process represents both a protected address space and an implicit thread.</span></p>

<h1 style="margin: 12pt 0cm 12pt 18pt; line-height: 12pt;"><a name="_Toc318320316"></a><a name="_Ref187214545"></a><a name="_Toc169684083"></a><a name="_Toc167033733"></a><a name="_Toc168661850"></a><a name="_Toc86725662"></a><a name="_Toc86220699"></a><a name="_Toc86220146"></a><a name="_Toc86219854"></a><a name="_Toc86219749"></a><a name="_Toc79294984"></a><a name="_Ref57450727"></a><a name="_Ref57450719"></a><a name="_Ref32731482"></a><a name="_Toc27797764"></a><a name="_Ref27449793"></a><a name="_Toc27449592"><span lang="EN-US">6<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">Execution Platform Components</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This section describes the categories of execution platform
components that represent computing hardware: processor, virtual processor, memory,
bus, virtual bus; and the physical environment: device.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processors can execute threads.  Processors can contain memory
subcomponents. Processors can access memories and communicate with devices and
other processors over buses.  Threads, thread groups, and processes are bound
to processors.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Virtual processors are logical execution platform elements that can
execute threads.  Threads, thread groups, and processes can be bound to virtual
processors.   Virtual processors must be bound to or contained in processors. 
This determines the binding of threads to processors.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Memories represent randomly addressable storage capable of storing
binary images in the form of data and code. Memories can be accessed by
executing threads.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Buses support physical communication between processors, devices,
and memories.  A bus provides the resources necessary to perform exchanges of
control and data as specified by connections.  These resources include
bandwidth and protocols to perform the exchange.  A connection may be bound to
a sequence of buses and intermediate processors and devices in a manner that is
analogous to the binding of threads to processors.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Virtual buses represent a logical bus abstraction to model protocols
and virtual channels. Virtual buses can be contained in or bound to processors
and buses.  Connections can specify that they require specific protocols, or
certain quality of service from protocols of platform components they are bound
to.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Devices represent entities of the physical environment, e.g., an
engine, or entities that interface with the physical environment, e.g., a
sensor or an actuator. A device can interact with application software
components through their port and provides subprogram access features.  A
device may interact with other execution platform components through bus access
connections.  A device may achieve its functionality through device internal
software or may require device driver software to be executed by a processor. 
Binary images or threads cannot be bound to devices.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processors may include software that implements the capability of
the processor to schedule and execute threads and other services of the
processor.  Its source text and data in the form of binary images will be bound
to memories accessible from that processor.  The resource requirements of this
software are reflected in processor properties.    </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Execution platform components can be assembled into execution
platform systems, i.e., into systems of execution platform components to model
complex physical computing hardware components and software/hardware computing
systems, through the use of system components (see Section 7.1). The execution
platform systems and their components may denote physical computing hardware
for example, memory to represent a hard disk or RAM.  Execution platform
systems may also model abstracted storage, for example, a device or memory to
represent a database, depending on the purpose of the model.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
hardware represented by the execution platform components may be modeled in a
hardware description or simulation language.  Alternatively, it may be
represented using configuration data for programmable logic devices. A simulation
may be used to characterize the components.  Such descriptions can be
associated with the component by property association. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Execution
platform components can represent high-level abstractions of physical and
computing components.  A detailed AADL model of their implementation can be
represented by system implementations that are associated with the execution
platform component by property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).  This effectively models a layered
system architecture.  </span></p>

<h2 style="margin-top: 0cm;"><a name="_Ref503900681"></a><a name="_Toc2492772"></a><a name="_Toc535736349"></a><a name="_Toc535736029"></a><a name="_Toc535729871"></a><a name="_Toc532013604"></a><a name="_Toc318320317"></a><a name="_Ref187120752"></a><a name="_Toc169684084"></a><a name="_Toc167033734"></a><a name="_Toc168661851"></a><a name="_Toc86725663"></a><a name="_Toc86220700"></a><a name="_Toc86220235"></a><a name="_Toc86219855"></a><a name="_Toc86219750"></a><a name="_Toc79294985"></a><a name="_Toc194294466"></a><a name="_Toc194296591"></a><span lang="EN-US">6.1<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Processors</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A processor is an abstraction of hardware and software that is
responsible for scheduling and executing threads and virtual processors that
are bound to it.  A processor also may execute driver software that is declared
as part of devices that can be accessed from that processor.  Processors may
contain memories and may access memories and devices via buses.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="91" style="width: 68.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="282" style="width: 211.85pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="170" style="width: 127.25pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="91" style="width: 68.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">processor<span class="requality_text id_fddcc12f-bf11-477e-8a76-d42b35559348"><a name="fddcc12f-bf11-477e-8a76-d42b35559348" id="id_fddcc12f-bf11-477e-8a76-d42b35559348" class="requality_id"></a></span></span></b></p><span class="requality_text id_fddcc12f-bf11-477e-8a76-d42b35559348">
  </span></td>
  <td width="282" style="width: 211.85pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;"><span class="requality_text id_fddcc12f-bf11-477e-8a76-d42b35559348">
  </span><p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_fddcc12f-bf11-477e-8a76-d42b35559348">Features:</span> </span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">       <span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a"><a name="16b55d3c-bd80-40d9-b618-589952d7ba9a" id="id_16b55d3c-bd80-40d9-b618-589952d7ba9a" class="requality_id"></a> 
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">provides subprogram access</span></span></p><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">provides subprogram group access</span></span></p><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">port</span></span></p><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">feature group</span></span></p><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">requires bus access</span></span></p><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">provides bus access</span></span></p><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_16b55d3c-bd80-40d9-b618-589952d7ba9a">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_707fb7a0-37db-4e2d-a88e-ca84db88f4da"><a name="707fb7a0-37db-4e2d-a88e-ca84db88f4da" id="id_707fb7a0-37db-4e2d-a88e-ca84db88f4da" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_707fb7a0-37db-4e2d-a88e-ca84db88f4da">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_707fb7a0-37db-4e2d-a88e-ca84db88f4da">Modes: yes</span></span></p><span class="requality_text id_707fb7a0-37db-4e2d-a88e-ca84db88f4da">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_707fb7a0-37db-4e2d-a88e-ca84db88f4da">Properties: yes</span></span></p>
  </td>
  <td width="170" style="width: 127.25pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_ad64c60d-3363-448b-9c1d-86621999fb2a"><a name="ad64c60d-3363-448b-9c1d-86621999fb2a" id="id_ad64c60d-3363-448b-9c1d-86621999fb2a" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">  <span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9"><a name="e93c6bb8-a10c-4803-89d4-7af898f18ce9" id="id_e93c6bb8-a10c-4803-89d4-7af898f18ce9" class="requality_id"></a>      
  </span></span></span><span lang="EN-US"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">memory</span></span></p><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">bus</span></span></p><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">virtual processor</span></span></p><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">virtual bus</span></span></p><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e93c6bb8-a10c-4803-89d4-7af898f18ce9">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb"><a name="fc134c9b-08bd-4b82-88d5-1242eb39d9fb" id="id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">Connections: yes</span></span></p><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">Flows: yes</span></span></p><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">Modes: yes</span></span></p><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_fc134c9b-08bd-4b82-88d5-1242eb39d9fb">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_4e307d30-20b3-4c18-aca6-405b572063a2"><a name="4e307d30-20b3-4c18-aca6-405b572063a2" id="id_4e307d30-20b3-4c18-aca6-405b572063a2" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_4e307d30-20b3-4c18-aca6-405b572063a2">        
</span></span></span><span lang="EN-US"><span class="requality_text id_4e307d30-20b3-4c18-aca6-405b572063a2">A processor component type can contain port, feature
group, provides subprogram access, provides subprogram group access, and bus
access declarations.</span>  <span class="requality_text id_3fcd7916-f406-40e7-b6f9-bb25c343c25f"><a name="3fcd7916-f406-40e7-b6f9-bb25c343c25f" id="id_3fcd7916-f406-40e7-b6f9-bb25c343c25f" class="requality_id"></a>It may contain flow specifications, a modes subclause, as
well as property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_d8c0808f-01a2-4249-b601-6fd638792cca"><a name="d8c0808f-01a2-4249-b601-6fd638792cca" id="id_d8c0808f-01a2-4249-b601-6fd638792cca" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_d8c0808f-01a2-4249-b601-6fd638792cca">        
</span></span></span><span lang="EN-US"><span class="requality_text id_d8c0808f-01a2-4249-b601-6fd638792cca">A processor component implementation can contain
declarations of memory, bus, virtual bus, virtual processor, and abstract
subcomponents.  </span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_1e082322-a0f5-4c92-be4d-093304d645b7"><a name="1e082322-a0f5-4c92-be4d-093304d645b7" id="id_1e082322-a0f5-4c92-be4d-093304d645b7" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_1e082322-a0f5-4c92-be4d-093304d645b7">        
</span></span></span><span lang="EN-US"><span class="requality_text id_1e082322-a0f5-4c92-be4d-093304d645b7">A processor implementation can contain a modes
subclause, flows subclause, and a properties subclause.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_393787f0-4302-458a-9760-0d19d2e75071"><a name="393787f0-4302-458a-9760-0d19d2e75071" id="id_393787f0-4302-458a-9760-0d19d2e75071" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_393787f0-4302-458a-9760-0d19d2e75071">        
</span></span></span><span lang="EN-US"><span class="requality_text id_393787f0-4302-458a-9760-0d19d2e75071">A processor implementation can contain bus
access,</span></span><span lang="EN-US" style="font-size: 12pt; font-family: &quot;Times New Roman&quot;,&quot;serif&quot;; color: windowtext;"><span class="requality_text id_393787f0-4302-458a-9760-0d19d2e75071"> </span></span><span lang="EN-US"><span class="requality_text id_393787f0-4302-458a-9760-0d19d2e75071">subprogram access, subprogram group
access, port, feature, and feature group connection declarations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_9b12b439-8d7d-42f2-8586-a714e33d91d5"><a name="9b12b439-8d7d-42f2-8586-a714e33d91d5" id="id_9b12b439-8d7d-42f2-8586-a714e33d91d5" class="requality_id"></a>(L5)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_9b12b439-8d7d-42f2-8586-a714e33d91d5">        
</span></span></span><span lang="EN-US"><span class="requality_text id_9b12b439-8d7d-42f2-8586-a714e33d91d5">A processor implementation must not contain a
subprogram calls subclause.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- Hardware description properties</span></pre><pre><span lang="EN-US">Hardware_Description_Source_Text: <b>inherit</b> <b>list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Hardware_Source_Language: Supported_Hardware_Source_Languages </span></span></pre><pre style="text-align: justify;"><span lang="EN-US">-- Properties related to source text that provides thread scheduling services</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Processor initialization properties</span></span></pre><pre style="text-align: justify;"><span lang="EN-US"><span class="CODE">Startup_Deadline: Time</span></span></pre><pre><span lang="EN-US"><span class="CODE">Startup_Execution_Time: Time_Range</span></span></pre><pre style="text-align: justify;"><span lang="EN-US">-- Properties specifying provided thread execution support</span></pre><pre style="text-align: justify;"><span lang="EN-US">Thread_Limit: <b>aadlinteger</b> 0 .. Max_Thread_Limit </span></pre><pre><span lang="EN-US">Allowed_Dispatch_Protocol:<b> list of </b>Supported_Dispatch_Protocols</span></pre><pre><span lang="EN-US">Allowed_Period: <b>list</b> <b>of</b> Time_Range</span></pre><pre><span lang="EN-US">Scheduling_Protocol: <b>inherit list</b> <b>of</b> Supported_Scheduling_Protocols</span></pre><pre><tt><span lang="EN-US">Scheduler_Quantum</span></tt><span lang="EN-US"> : <b>inherit</b> Time </span></pre><pre><span lang="EN-US">Slot_Time: Time</span></pre><pre><span lang="EN-US">Frame_Period: Time</span></pre><pre><span lang="EN-US">-- acceptable priority value on threads and mapping into RTOS priority values</span></pre><pre><span lang="EN-US">Priority_Range: <b>range of aadlinteger</b></span></pre><pre><span lang="EN-US">Priority_Map: <b>list of</b> Priority_Mapping</span></pre><pre><span lang="EN-US">Process_Swap_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Thread_Swap_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US"><span class="CODE">Supported_Source_Language: <b>list of</b> Supported_Source_Languages</span></span></pre><pre><span lang="EN-US">-- Scaling of processor speed</span></pre><pre><span lang="EN-US"><tt>Scaling_Factor</tt> : <b>inherit</b> <b>aadlreal</b> </span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span lang="EN-US">-- Properties related to data movement in memory</span></pre><pre><span lang="EN-US">Assign_Time: <b>record</b> (</span></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre><span lang="EN-US">  -- Properties related to the hardware clock</span></pre><pre><span lang="EN-US">Clock_Jitter: Time</span></pre><pre><span lang="EN-US">Clock_Period: Time</span></pre><pre><span lang="EN-US">Clock_Period_Range: Time_Range</span></pre><pre><span lang="EN-US">-- Protocol support</span></pre><pre><span lang="EN-US">Provided_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">Provided_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span lang="EN-US">-- mode related properties</span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US">Deactivation_Policy: <b>enumeration </b>(inactive, unload) =&gt; inactive<b> </b></span></pre><pre><span lang="EN-US">-- runtime protection support of address spaces</span></pre><pre><span lang="EN-US">Runtime_Protection_Support : <b>aadlboolean </b></span></pre><pre><code><span lang="EN-US">-- Virtual machine layering</span></code></pre><pre><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></pre><pre><span lang="EN-US">NOTES:  </span></pre>

<p class="Note"><span lang="EN-US">The above is the list of the predefined
processor properties.  Additional processor properties may be declared in
user-defined property sets.  Candidates include properties that describe
capabilities and accuracy of a synchronized clock, e.g., drift rates,
differences across processors.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A processor is the execution platform component that is capable of
scheduling and executing threads. Threads will be bound to a processor for
their execution that supports the dispatch protocol required by the thread. The
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Dispatch_Protocol</span><span lang="EN-US"> property specifies the dispatch protocols that a processor
supplies.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Support for thread execution may be embedded in the processor
hardware or it may require software that implements processor functionality
such as thread scheduling, e.g., an operating system kernel or other software
virtual machine.  Such software must be bound to a memory component that is
accessible to the processor via the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Actual_Memory_Binding</span><span lang="EN-US"> property.  Services
provided by such software can be called through the provides subprogram access features
of a processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The code that threads execute and the data they access must be bound
to a memory component that is accessible to the processor on which the thread
executes.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a processor executes device driver software associated with a
device, then the processor must have access to the corresponding device
component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Flow specifications model logical flow through processors. For
example, they may represent requests for operating system services through
subprograms or ports.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The hardware description source text property may provide a
reference to source text that is a model of the hardware in a hardware
description language.  This provides support for the simulation of hardware.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Modes allow processor components to have different property values
under different operational processor modes.  Modes may be used to specify
different runtime selectable configurations of processor implementations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processor states and transitions are illustrated in the hybrid
automaton shown in Figure 9.  The labels in this hybrid automaton interact with
labels in the system hybrid automaton (see Figure 22), the virtual processor
hybrid automaton (see </span><span lang="EN-US">Figure 10</span><span lang="EN-US">),
and the process hybrid automaton (see Figure 8).  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The initial state of a processor is <i>stopped</i>. 
</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">When a processor is started, it enters the <i>processor
starting</i> state. In this state, the processor hardware is initialized and
any processor software that provides thread scheduling functionality is loaded
into memory and initialized. Note that the virtual address space load images of
processes may already have been loaded as part of a single load image that
includes the processor or virtual processor software.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Once the processor and its software for handling
virtual processors or processes is initialized, the processor transitions to
the <i>processor operational </i>state with <b>started(processor)</b>.  At this
point virtual processor, process, and in turn thread initialization will start.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">While
operational, a processor may be in different modes with different processing
characteristics reflected in appropriate property values.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">As a
result of a processor abort, any threads bound to the processor are aborted, as
indicated by <b>abort(processor) </b>in the hybrid automaton<b> </b>in Figure 9
and in the hybrid automata figures in Sections </span><span lang="EN-US">5.4</span><span lang="EN-US"> and </span><span lang="EN-US">5.6</span><span lang="EN-US">.  After that any virtual processor bound
to or contained in a processor is aborted.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
stop processor request results in a transition to the <i>processor stopping</i>
state at the next hyperperiod of the periodic threads bound to the processor or
to its virtual processors.  The length of the hyperperiod can be reduced by
using the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Synchronized_Components</span><span lang="EN-US"> property to minimize the number of periodic threads that must be
synchronized within the hyperperiod (see Section </span><span lang="EN-US">12</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
the next hyperperiod begins, the virtual processors and processes with threads
bound to the processor are informed about the stoppage request, as indicated by
<b>stop(processor)</b> in the hybrid automaton<b> </b>in Figure 9.  The process
hybrid automaton (see </span><span lang="EN-US">Figure 8</span><span lang="EN-US">)
in turn causes the thread hybrid automaton to respond, as indicated with <b>stop(processor)</b>
in the hybrid automaton in </span><span lang="EN-US">Figure 5</span><span lang="EN-US">. In this case, any threads bound to the processor are permitted to
complete their dispatch executions and perform any finalization before the
process is stopped, which is indicated by <b>stopped(process) </b>in </span><span lang="EN-US">Figure 8</span><span lang="EN-US">.  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="545" height="312" id="Picture 32" src="imgs/image021.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320418"></a><a name="_Toc167033810"></a><a name="_Toc86591131"></a><a name="_Toc79295058"></a><a name="_Ref52457065"></a><a name="_Ref52457070"><span lang="EN-US">Figure </span></a><span lang="EN-US">9</span><span lang="EN-US"> Processor States and Actions</span></p>

<p class="NumberedParagraph"><a name="_Toc27797766"></a><a name="_Toc27449594"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
processor may have ports through which it reports information to the
application software, e.g., to report error conditions.  Those ports are
identified in port connection declarations by the reserved word <b>processor</b>
(see Section </span></a><span lang="EN-US">9.1</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
processor may have provide subprogram or subprogram group access to represent
services that can be called by the application. A subprogram call identifies
such a service by the subprogram classifier and the binding to the specific
processor is implicit through the actual processor binding of the thread that
contains the call.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
processor component can include protocols in its abstraction.  These protocols
can be explicitly modeled as virtual bus subcomponents to satisfy protocol
requirements by connections.  The fact that a protocol is supported by a
processor is specified by a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
processor can contain a bus subcomponent that it makes externally accessible. 
This models a bus that is managed by the processor and other components can
connect to it.  In this case the processor is implicitly connected to this bus.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Different
processors may be different execution speeds.  This affects the execution time
specified for threads and subprograms.  The <b>in binding</b> statement of
property associations permits processor type specific execution times to be
declared.  The execution time of a thread or subprogram can also be scaled
according to scaling factors between different processors.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Scaling_Factor property</span><span lang="EN-US"> specifies the scaling factor with respect to a specified </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Reference_Processor</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
processor is an abstraction of a hardware processor and possibly a runtime
system.  If it is desirable, the internals of the processor can be modeled by
AADL as a system in its own right, i.e., an application system and an execution
platform.  This system implementation description can be associated with the
device component declaration by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Processing Requirements and
Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation is not required to monitor the startup deadline and
report an overflow as an error.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation may choose to enforce thread deadlines and maximum
compute execution time. Violations are reported as thread recoverable errors.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc86725664"></a><a name="_Toc86220701"></a><a name="_Toc86220236"></a><a name="_Toc86219856"></a><a name="_Toc86219751"></a><a name="_Toc79294986"></a><a name="_Toc318320318"></a><a name="_Toc169684085"></a><a name="_Toc167033735"></a><a name="_Toc168661852"><span lang="EN-US">6.2<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Virtual Processors</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual processor represents a logical resource that is capable of
scheduling and executing threads and other virtual processors bound to them.  Virtual
processors can be declared as a subcomponent of a processor or another virtual
processor, i.e., they are implicitly bound to the processor or virtual
processor they are contained in. Virtual processors can also be declared
separately, that is as a subcomponent of a system component, and explicitly
bound to a processor or virtual processor.  This allows virtual processors to
represent hierarchical schedulers that schedule thread and/or virtual
processors bound to them.  In a fully bound system every virtual processor and
thread is eventually bound to a physical processor.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="91" style="width: 68.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="273" style="width: 205.05pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="216" style="width: 162pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="91" style="width: 68.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">virtual processor</span></b></p>
  </td>
  <td width="273" style="width: 205.05pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_1072d117-eab8-4dab-879f-a28c4ec6fc6c"><a name="1072d117-eab8-4dab-879f-a28c4ec6fc6c" id="id_1072d117-eab8-4dab-879f-a28c4ec6fc6c" class="requality_id"></a>Features:</span> </span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">       <span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1"><a name="43f57b21-8342-4867-b444-a0bb077e20c1" id="id_43f57b21-8342-4867-b444-a0bb077e20c1" class="requality_id"></a> 
  </span></span></span><span lang="EN-US"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">provides subprogram access</span></span></p><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">provides subprogram group access</span></span></p><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">port</span></span></p><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">feature group</span></span></p><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_43f57b21-8342-4867-b444-a0bb077e20c1">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_d4c51e5d-8401-42d4-9e6b-24a85063aa29"><a name="d4c51e5d-8401-42d4-9e6b-24a85063aa29" id="id_d4c51e5d-8401-42d4-9e6b-24a85063aa29" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_d4c51e5d-8401-42d4-9e6b-24a85063aa29">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_d4c51e5d-8401-42d4-9e6b-24a85063aa29">Modes: yes</span></span></p><span class="requality_text id_d4c51e5d-8401-42d4-9e6b-24a85063aa29">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_d4c51e5d-8401-42d4-9e6b-24a85063aa29">Properties: yes</span></span></p>
  </td>
  <td width="216" style="width: 162pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_dda3cbbc-57e5-4499-a941-7d48439216d5"><a name="dda3cbbc-57e5-4499-a941-7d48439216d5" id="id_dda3cbbc-57e5-4499-a941-7d48439216d5" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35"><a name="8879daec-c9e5-465f-8f06-d0869c57fa35" id="id_8879daec-c9e5-465f-8f06-d0869c57fa35" class="requality_id"></a>·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">virtual processor</span></span></p><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">virtual bus</span></span></p><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_8879daec-c9e5-465f-8f06-d0869c57fa35">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c"><a name="22c9e2b2-b741-42d3-b407-bdaca9788f6c" id="id_22c9e2b2-b741-42d3-b407-bdaca9788f6c" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">Connections: yes</span></span></p><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">Flows: yes</span></span></p><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">Modes: yes</span></span></p><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_22c9e2b2-b741-42d3-b407-bdaca9788f6c">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_69c53d9e-523b-4b02-919c-bd3849d89af5"><a name="69c53d9e-523b-4b02-919c-bd3849d89af5" id="id_69c53d9e-523b-4b02-919c-bd3849d89af5" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_69c53d9e-523b-4b02-919c-bd3849d89af5">        
</span></span></span><span lang="EN-US"><span class="requality_text id_69c53d9e-523b-4b02-919c-bd3849d89af5">A virtual processor component type can contain
port, feature group, provides subprogram access, and subprogram group access
declarations.</span>  <span class="requality_text id_037bb9cf-4329-4011-9047-1bdbbc313c6b"><a name="037bb9cf-4329-4011-9047-1bdbbc313c6b" id="id_037bb9cf-4329-4011-9047-1bdbbc313c6b" class="requality_id"></a>It may contain flow specifications, a modes subclause, as well
as property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b4831f39-5409-43a4-935e-78ed07a15e1b"><a name="b4831f39-5409-43a4-935e-78ed07a15e1b" id="id_b4831f39-5409-43a4-935e-78ed07a15e1b" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b4831f39-5409-43a4-935e-78ed07a15e1b">        
</span></span></span><span lang="EN-US"><span class="requality_text id_b4831f39-5409-43a4-935e-78ed07a15e1b">A virtual processor component implementation can
contain declarations of virtual bus, virtual processor, and abstract
subcomponents</span>.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_7f428899-360a-4b0e-868a-6034c5cbae1d"><a name="7f428899-360a-4b0e-868a-6034c5cbae1d" id="id_7f428899-360a-4b0e-868a-6034c5cbae1d" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_7f428899-360a-4b0e-868a-6034c5cbae1d">        
</span></span></span><span lang="EN-US"><span class="requality_text id_7f428899-360a-4b0e-868a-6034c5cbae1d">A virtual processor implementation can contain a
modes subclause, flows subclause, and a properties subclause.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_7b85f34e-8a5b-469f-a412-4b24b2a8bebc"><a name="7b85f34e-8a5b-469f-a412-4b24b2a8bebc" id="id_7b85f34e-8a5b-469f-a412-4b24b2a8bebc" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_7b85f34e-8a5b-469f-a412-4b24b2a8bebc">        
</span></span></span><span lang="EN-US"><span class="requality_text id_7b85f34e-8a5b-469f-a412-4b24b2a8bebc">A virtual processor implementation must not
contain a subprogram calls subclause.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A virtual processor implementation can contain
subprogram access, subprogram group access, port, feature, and feature group
connections.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">In a fully bound system every virtual
processor must be directly or indirectly bound to, or directly or indirectly contained
in a physical processor.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C2)</span><span lang="EN-US">In a fully deployed system a requires
virtual bus binding of a virtual processor specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Virtual_Bus_Class</span><span lang="EN-US"> property must be satisfied by binding the virtual processor to a
virtual processor or processor that provides this virtual bus.  It is also
satisfied if the virtual processor is contained in a processor and the
respective virtual bus is bound to the processor.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="text-align: justify;"><span lang="EN-US">-- Properties related to source text that provides thread scheduling services</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Virtual processor initialization properties</span></span></pre><pre><span lang="EN-US"><span class="CODE">Startup_Execution_Time: Time_Range</span></span></pre><pre style="text-align: justify;"><span lang="EN-US"><span class="CODE">Startup_Deadline: Time</span></span></pre><pre style="text-align: justify;"><span lang="EN-US">-- Properties specifying provided thread execution support</span></pre><pre style="text-align: justify;"><span lang="EN-US">Thread_Limit: <b>aadlinteger</b> 0 .. Max_Thread_Limit </span></pre><pre><span lang="EN-US">Allowed_Dispatch_Protocol:<b> list of </b>Supported_Dispatch_Protocols</span></pre><pre><span lang="EN-US">Allowed_Period: <b>list</b> <b>of</b> Time_Range</span></pre><pre><span lang="EN-US">Scheduling_Protocol: <b>inherit list</b> <b>of</b> Supported_Scheduling_Protocols</span></pre><pre><span lang="EN-US">Slot_Time: Time</span></pre><pre><span lang="EN-US">Frame_Period: Time</span></pre><pre><span lang="EN-US">-- acceptable priority value on threads and mapping into RTOS priority values</span></pre><pre><span lang="EN-US">Priority_Range: <b>range of aadlinteger</b></span></pre><pre><span lang="EN-US">Priority_Map: <b>list of</b> Priority_Mapping</span></pre><pre><span lang="EN-US">Process_Swap_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Thread_Swap_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US"><span class="CODE">Supported_Source_Language: <b>list of</b> Supported_Source_Languages</span></span></pre><pre><span lang="EN-US">-- Properties of the dispatch characterstics of this virtual processor</span></pre><pre><span lang="EN-US">Period: <b>inherit</b> Time</span></pre><pre><span lang="EN-US">Dispatch_Protocol: Supported_Dispatch_Protocols</span></pre><pre><span lang="EN-US">Execution_Time: Time</span></pre><pre><span lang="EN-US">-- Protocol support</span></pre><pre><span lang="EN-US">Provided_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">Provided_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span lang="EN-US"><code>-- mode related properties</code></span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US">Deactivation_Policy: <b>enumeration </b>(inactive, unload) =&gt; inactive<b> </b></span></pre>

<p class="MsoNoteHeading" style="margin-bottom: 6pt;"><code><span lang="EN-US">--
need for and provision of address space protection</span></code></p>

<pre><span lang="EN-US"><tt>Runtime_Protection</tt> : <b>inherit</b> <b>aadlboolean</b> </span></pre><pre><span lang="EN-US">Runtime_Protection_Support : <b>aadlboolean </b></span></pre>

<p class="MsoNormal"><code><span lang="EN-US">-- Virtual machine layering</span></code></p>

<pre><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></pre><pre><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;"> </span></pre>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES: 
</span></p>

<p class="Note"><span lang="EN-US">The above is the list of the predefined virtual processor
properties.  Additional processor properties may be declared in user-defined
property sets.  Candidates include properties that describe capabilities and
accuracy of a synchronized clock, e.g., drift rates, differences across
processors.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual processor is the logical execution platform component that
is capable of scheduling and executing threads and other virtual processors.
Threads and virtual processors will be bound to a virtual processor or
processor for their execution.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Dispatch_Protocol</span><span lang="EN-US"> property
specifies the dispatch protocols that a virtual processor supplies, i.e., only
threads or virtual processors whose dispatch protocol is supported can be bound.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Support for thread execution may require software that implements virtual
processor functionality such as thread scheduling, e.g., an operating system
kernel or other software virtual machine.  Such software must be bound to a
memory component that is accessible to the processor via the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Actual_Memory_Binding</span><span lang="EN-US"> property.  Services provided by such software can be called through
the provides subprogram access features of a virtual processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual processor component can include protocols in its
abstraction.  These protocols can be explicitly modeled as virtual bus subcomponents
to satisfy protocol requirements by connections.  The fact that a protocol is
supported by a virtual processor can also be specified by a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual processor can be declared as a subcomponent of a processor
or another virtual processor; it can also be declared separately in a system
component and then bound to a processor or another virtual processor.  The
difference between the two uses of virtual processor is that in the case of the
subcomponent of a processor or virtual processor the binding of the virtual
processor is implicit in the containment relationship.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Flow specifications model logical flow through virtual processors.
For example, they may represent requests for operating system services through
subprograms or ports.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Modes allow virtual processor components to have different property
values under different operational virtual processor modes.  Modes may be used
to specify different runtime selectable configurations of virtual processor implementations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Virtual processor states and transitions are illustrated in the
hybrid automaton shown in </span><span lang="EN-US">Figure 10</span><span lang="EN-US">.  The hybrid automaton of a virtual processor interacts with the
hybrid automaton of the processor or virtual processor that it is bound to.  A
virtual processor is permitted to initialize itself after the processor and any
virtual processors are initialized, and before any processes or threads are initialized. 
Similarly, virtual processors are stopped after threads, processes, and virtual
processors contained in them are stopped.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="606" height="323" id="Picture 34" src="imgs/image022.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320419"></a><a name="_Ref187147848"><span lang="EN-US">Figure </span></a><span lang="EN-US">10</span><span lang="EN-US"> Virtual Processor States and Actions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The virtual processor is an logical abstraction of a processor.  If
it is desirable, the internals of the virtual processor can be modeled by AADL
as an application system in its own right.  For example, a virtual processor
may represent an operating system that can be described in terms of processes
and threads.  This system implementation description can be associated with the
device component declaration by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320319"></a><a name="_Toc169684086"></a><a name="_Toc167033736"></a><a name="_Toc168661853"><span lang="EN-US">6.3<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Memor</span></a><span lang="EN-US">y</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A memory component represents an execution platform component that
stores code and data binaries.  This execution platform component consists of
hardware such as randomly accessible physical storage, e.g., RAM, ROM, or more
complex permanent storage such as disks, reflective memory, or logical
storage.  Memories have properties such as the number and size of addressable
storage locations.  Subprograms, data, and processes – reflected in binary
images - are bound to memory components for access by processors when executing
threads.  A memory component may be contained in a processor or may be
accessible from a processor via a bus.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="91" style="width: 68.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="198" style="width: 148.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="180" style="width: 135pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="91" style="width: 68.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">memory</span></b></p>
  </td>
  <td width="198" style="width: 148.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_37ec5648-e19c-4361-8683-87dac77c8acc"><a name="37ec5648-e19c-4361-8683-87dac77c8acc" id="id_37ec5648-e19c-4361-8683-87dac77c8acc" class="requality_id"></a>Features</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536"><a name="0e983f3e-a322-437e-bcbb-78a5da6b2536" id="id_0e983f3e-a322-437e-bcbb-78a5da6b2536" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">requires bus access</span></span></p><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">provides bus access </span></span></p><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">feature group</span></span></p><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_0e983f3e-a322-437e-bcbb-78a5da6b2536">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_27f1ae03-42d2-4a4f-b226-0be90fa61f61"><a name="27f1ae03-42d2-4a4f-b226-0be90fa61f61" id="id_27f1ae03-42d2-4a4f-b226-0be90fa61f61" class="requality_id"></a>Flow specifications: no</span></span></p><span class="requality_text id_27f1ae03-42d2-4a4f-b226-0be90fa61f61">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_27f1ae03-42d2-4a4f-b226-0be90fa61f61">Modes: yes</span></span></p><span class="requality_text id_27f1ae03-42d2-4a4f-b226-0be90fa61f61">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_27f1ae03-42d2-4a4f-b226-0be90fa61f61">Properties: yes</span></span></p>
  </td>
  <td width="180" style="width: 135pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_b4710e3c-5615-40d3-93fc-a56872d24cf9"><a name="b4710e3c-5615-40d3-93fc-a56872d24cf9" id="id_b4710e3c-5615-40d3-93fc-a56872d24cf9" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa"><a name="2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa" id="id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa" class="requality_id"></a>memory</span></span></p><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">bus</span></span></p><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_2cbcdcdf-2db9-4dac-ac5d-3f8cdab1e0aa">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc"><a name="e0074527-9fd6-4cd1-b195-68d929cf6dfc" id="id_e0074527-9fd6-4cd1-b195-68d929cf6dfc" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">Connections: yes</span></span></p><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">Flows: no</span></span></p><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">Modes: yes</span></span></p><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e0074527-9fd6-4cd1-b195-68d929cf6dfc">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_529f5197-4008-4fbf-a1e0-8e582b07ed9f"><a name="529f5197-4008-4fbf-a1e0-8e582b07ed9f" id="id_529f5197-4008-4fbf-a1e0-8e582b07ed9f" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_529f5197-4008-4fbf-a1e0-8e582b07ed9f">        
</span></span></span><span lang="EN-US"><span class="requality_text id_529f5197-4008-4fbf-a1e0-8e582b07ed9f">A memory type can contain bus access
declarations, feature groups,</span> <span class="requality_text id_a3117dd8-3901-40bf-86cf-e2e411b49aad"><a name="a3117dd8-3901-40bf-86cf-e2e411b49aad" id="id_a3117dd8-3901-40bf-86cf-e2e411b49aad" class="requality_id"></a>a modes subclause, and property associations.  It
must not contain flow specifications.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_266e7917-908c-4100-aaf1-ead336cdee69"><a name="266e7917-908c-4100-aaf1-ead336cdee69" id="id_266e7917-908c-4100-aaf1-ead336cdee69" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_266e7917-908c-4100-aaf1-ead336cdee69">        
</span></span></span><span lang="EN-US"><span class="requality_text id_266e7917-908c-4100-aaf1-ead336cdee69">A memory implementation can contain abstract, memory,
and bus subcomponent declarations.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_29ace4d9-feeb-4360-b736-3112fd0afb0c"><a name="29ace4d9-feeb-4360-b736-3112fd0afb0c" id="id_29ace4d9-feeb-4360-b736-3112fd0afb0c" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_29ace4d9-feeb-4360-b736-3112fd0afb0c">        
</span></span></span><span lang="EN-US"><span class="requality_text id_29ace4d9-feeb-4360-b736-3112fd0afb0c">A memory implementation can contain a modes
subclause and property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_e96c20a9-302d-44d2-a94d-ceb82886b192"><a name="e96c20a9-302d-44d2-a94d-ceb82886b192" id="id_e96c20a9-302d-44d2-a94d-ceb82886b192" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e96c20a9-302d-44d2-a94d-ceb82886b192">        
</span></span></span><span lang="EN-US"><span class="requality_text id_e96c20a9-302d-44d2-a94d-ceb82886b192">A memory implementation can contain bus access
connection declarations.</span> Bus access connections can connect a memory
subcomponent to a bus subcomponent or a requires bus access feature, as well as
connect a provides bus access feature to a bus subcomponent.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_d9643aab-49b4-45ea-8944-dc443ea6bc67"><a name="d9643aab-49b4-45ea-8944-dc443ea6bc67" id="id_d9643aab-49b4-45ea-8944-dc443ea6bc67" class="requality_id"></a>(L5)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_d9643aab-49b4-45ea-8944-dc443ea6bc67">        
</span></span></span><span lang="EN-US"><span class="requality_text id_d9643aab-49b4-45ea-8944-dc443ea6bc67">A memory implementation must not contain flows
subclause, or subprogram calls subclause.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="text-align: justify; page-break-after: avoid;"><span lang="EN-US">-- Properties related memory as a resource and its access</span></pre><pre style="text-align: justify;"><span lang="EN-US">Memory_Protocol: <b>enumeration</b> (execute_only, read_only, write_only, read_write) =<b>&gt;</b> read_write </span></pre><pre style="text-align: justify;"><span lang="EN-US">Word_Size: Size <b>=&gt; </b>8<b> </b>bits<b> </b></span></pre><pre style="text-align: justify;"><span lang="EN-US">Byte_Count: <b>aadlinteger </b>0 <b>.. </b>Max_Byte_Count</span></pre><pre><span lang="EN-US">Word_Space: <b>aadl</b><b>integer </b>1 <b>.. </b>Max_Word_Space <b>=&gt; </b>1 </span></pre><pre style="text-align: justify;"><span lang="EN-US">Base_Address: <b>aadlinteger</b> <b>0 </b>..<b> Max_</b>Base_Address</span></pre><pre style="text-align: justify;"><span lang="EN-US">Read_Time: <b>record</b> <b>(</b></span></pre><pre style="text-align: justify;"><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">Write_Time: <b>record</b> <b>(</b></span></pre><pre style="text-align: justify;"><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre><span lang="EN-US">-- Hardware description properties</span></pre><pre><span lang="EN-US">Hardware_Description_Source_Text: <b>inherit</b> <b>list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Hardware_Source_Language: Supported_Hardware_Source_Languages </span></span></pre><pre><span lang="EN-US">-- mode related properties</span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US"><code>-- Virtual machine layering</code></span></pre><pre><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></pre><pre><code><span lang="EN-US"> </span></code></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Memory components are used to store binary images of source text,
i.e., code and data.  These images are loaded into memory representing the
virtual address space of a process and are accessible to threads contained in
the respective processes bound to the processor.  Such access is possible if
the memory is contained in this processor or is accessible to this processor
via a shared bus component.  Loading of binary images into memory may occur
during processor startup or the binary images may have been preloaded into
memory before system startup. An example of the latter case is PROM or EPROM
containing binary images.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A memory is accessible from a processor if the memory is contained
in a processor or is connected via a shared bus component and the </span><span class="HTMLPreformattedChar3"><span lang="EN-US">Allowed_Physical_Access</span></span><span lang="EN-US"> property value for that bus includes </span><span class="HTMLPreformattedChar3"><span lang="EN-US">Memory_Access</span></span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Memory components can have different property values under different
operational modes.</span></p>

<p class="NumberedParagraph"><a name="_Toc27797767"></a><a name="_Toc27449595"></a><a name="_Toc86725665"></a><a name="_Toc86220702"></a><a name="_Toc86220237"></a><a name="_Toc86219857"></a><a name="_Toc86219752"></a><a name="_Toc79294987"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The memory component is intended to be an abstraction of a physical
storage component.  This can be a memory component such as RAM, or it can
represent a more abstract storage component such as a map database. If it is
desirable, the internals of the memory can be modeled by AADL as a system in
its own right, i.e., an application system and an execution platform.  For
example, a map data base as a memory component can be modeled as a set of
processors and disks as well as the database software.  This system
implementation description can be associated with the memory component
declaration by the </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320320"></a><a name="_Toc169684087"></a><a name="_Toc167033737"></a><a name="_Toc168661854"><span lang="EN-US">6.4<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Buses</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A bus component represents an execution platform component that can
exchange control and data between memories, processors, and devices. This
execution platform component represents a communication channel, typically
hardware together with communication protocols. Supported communication
protocols can be explicitly modeled through virtual buses (see Section </span><span lang="EN-US">6.5</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processors, devices, and memories can communicate by accessing a
shared bus.  Such a shared bus can be located in the same system implementation
as the execution platform components sharing it or higher in the system
hierarchy.  Memory, processor, and device types, as well as the system type of
systems they are contained in, can declare a need for access to a bus through a
requires bus reference.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Buses can be connected directly to other buses by one bus requiring
access to another bus.  Buses connected in such a way can have different bus
classifier references.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Connections between software components that are bound to different
processors transmit their information across buses whose protocol supports the
respective connection category.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="91" style="width: 68.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="275" style="width: 206.35pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="162" style="width: 121.7pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="91" style="width: 68.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">bus</span></b></p>
  </td>
  <td width="275" style="width: 206.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_2026bcdf-947f-446f-80b5-5d9fc3bb609a"><a name="2026bcdf-947f-446f-80b5-5d9fc3bb609a" id="id_2026bcdf-947f-446f-80b5-5d9fc3bb609a" class="requality_id"></a>Features</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be"><a name="e6aadd34-5334-4906-a6b2-18ef501d30be" id="id_e6aadd34-5334-4906-a6b2-18ef501d30be" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">requires bus access</span></span></p><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">feature group</span></span></p><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e6aadd34-5334-4906-a6b2-18ef501d30be">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_922d2e13-f5f0-4253-b23c-6742d22d0fab"><a name="922d2e13-f5f0-4253-b23c-6742d22d0fab" id="id_922d2e13-f5f0-4253-b23c-6742d22d0fab" class="requality_id"></a>Flow specifications: no</span></span></p><span class="requality_text id_922d2e13-f5f0-4253-b23c-6742d22d0fab">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_922d2e13-f5f0-4253-b23c-6742d22d0fab">Modes: yes</span></span></p><span class="requality_text id_922d2e13-f5f0-4253-b23c-6742d22d0fab">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_922d2e13-f5f0-4253-b23c-6742d22d0fab">Properties: yes</span></span></p>
  </td>
  <td width="162" style="width: 121.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_7c0e37bc-5378-465b-9eb8-212b95916b3d"><a name="7c0e37bc-5378-465b-9eb8-212b95916b3d" id="id_7c0e37bc-5378-465b-9eb8-212b95916b3d" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_97e2085a-0296-4952-aa15-987b33145fdd"><a name="97e2085a-0296-4952-aa15-987b33145fdd" id="id_97e2085a-0296-4952-aa15-987b33145fdd" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_97e2085a-0296-4952-aa15-987b33145fdd">virtual bus</span></span></p><span class="requality_text id_97e2085a-0296-4952-aa15-987b33145fdd">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_97e2085a-0296-4952-aa15-987b33145fdd">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_97e2085a-0296-4952-aa15-987b33145fdd">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_97e2085a-0296-4952-aa15-987b33145fdd">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868"><a name="4eced512-8038-42d7-8491-31478609d868" id="id_4eced512-8038-42d7-8491-31478609d868" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">Connections: yes</span></span></p><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">Flows: no</span></span></p><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">Modes: yes</span></span></p><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_4eced512-8038-42d7-8491-31478609d868">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_699a2255-0a96-48c8-a10b-1bbde195b308"><a name="699a2255-0a96-48c8-a10b-1bbde195b308" id="id_699a2255-0a96-48c8-a10b-1bbde195b308" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_699a2255-0a96-48c8-a10b-1bbde195b308">        
</span></span></span><span lang="EN-US"><span class="requality_text id_699a2255-0a96-48c8-a10b-1bbde195b308">A bus type can have requires bus access
declarations</span>,<span class="requality_text id_3c5525c6-460f-4799-a077-53ea8c959d96"><a name="3c5525c6-460f-4799-a077-53ea8c959d96" id="id_3c5525c6-460f-4799-a077-53ea8c959d96" class="requality_id"></a> a modes subclause, and property associations</span>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_1b578a45-7ee8-47f6-81c4-2c5f18b60a1a"><a name="1b578a45-7ee8-47f6-81c4-2c5f18b60a1a" id="id_1b578a45-7ee8-47f6-81c4-2c5f18b60a1a" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_1b578a45-7ee8-47f6-81c4-2c5f18b60a1a">        
</span></span></span><span lang="EN-US"><span class="requality_text id_1b578a45-7ee8-47f6-81c4-2c5f18b60a1a">A bus type must not contain any flow
specifications.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_e2057311-c14e-47f9-96ee-715eca7fcd01"><a name="e2057311-c14e-47f9-96ee-715eca7fcd01" id="id_e2057311-c14e-47f9-96ee-715eca7fcd01" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e2057311-c14e-47f9-96ee-715eca7fcd01">        
</span></span></span><span lang="EN-US"><span class="requality_text id_e2057311-c14e-47f9-96ee-715eca7fcd01">A bus implementation can contain virtual bus and
abstract subcomponent declarations.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_1a376be9-33a9-4f99-ba14-e700d80fd948"><a name="1a376be9-33a9-4f99-ba14-e700d80fd948" id="id_1a376be9-33a9-4f99-ba14-e700d80fd948" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_1a376be9-33a9-4f99-ba14-e700d80fd948">        
</span></span></span><span lang="EN-US"><span class="requality_text id_1a376be9-33a9-4f99-ba14-e700d80fd948">A bus implementation can contain a modes
subclause and property associations.  </span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_9ee13037-fbcb-453a-a6b9-2a62f67af29e"><a name="9ee13037-fbcb-453a-a6b9-2a62f67af29e" id="id_9ee13037-fbcb-453a-a6b9-2a62f67af29e" class="requality_id"></a>(L5)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_9ee13037-fbcb-453a-a6b9-2a62f67af29e">        
</span></span></span><span lang="EN-US"><span class="requality_text id_9ee13037-fbcb-453a-a6b9-2a62f67af29e">A bus implementation must not contain flows
subclause, or subprogram calls subclause.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="text-align: justify; page-break-after: avoid;"><span lang="EN-US">-- Properties specifying bus transmission properties</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Allowed_Connection_Type: <b>list</b> <b>of</b> <b>enumeration </b></span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                        (Sampled_Data_Connection, Immediate_Data_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Delayed_Data_Connection, Port_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Data_Access_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Subprogram_Access_Connection)</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Physical_Access_Class: <b>list</b> <b>of</b> <b>classifier</b> ( device, processor, memory, bus )</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Physical_Access: <b>list</b> <b>of</b> <b>reference</b> ( device, processor, memory, bus )</span></pre><pre><span lang="EN-US">Allowed_Message_Size: Size_Range</span></pre><pre><span class="CODE"><span lang="EN-US">Transmission_Type: </span></span><b><span lang="EN-US">enumeration</span></b><span lang="EN-US"> ( push, pull )</span></pre><pre><span lang="EN-US">Transmission_Time: <b>record</b> (</span></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre><span lang="EN-US">Prototype_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match)</span></pre><pre><span lang="EN-US">-- Hardware description properties</span></pre><pre><span lang="EN-US">Hardware_Description_Source_Text: <b>inherit</b> <b>list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Hardware_Source_Language: Supported_Hardware_Source_Languages </span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">Access_Right : Access_Rights =&gt; read_write  </span></span></pre><pre><span lang="EN-US">-- Protocol support</span></pre><pre><span lang="EN-US">Provided_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">Provided_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span lang="EN-US">-- mode related properties</span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US"><code>-- Virtual machine layering</code></span></pre><pre><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></pre><pre><code><span lang="EN-US"> </span></code></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A bus support physical communication between processors, memories,
and devices.  This allows a processor to support execution of source text in
the form of code and data loaded as binary images into memory components.  A
bus allows a processor to access device hardware when executing device software.
A bus may also support different port and subprogram connections between thread
components bound to different processors.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Connection_Type</span><span lang="EN-US"> property indicates which forms of access a particular bus
supports.  The bus may constrain the size of messages communicated through data
or event data connections.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A bus component provides access between processors, memories, and
devices.  It is a shared component, for which access is required by each of the
respective components.  A device is accessible from a processor if the two
share a bus component.  A memory is accessible from a processor if the two
share a bus component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Buses can be directly connected to other buses.  This is represented
by one bus declaration specifying access to another bus in its requires
subclause.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Physical access to a bus can be restricted to certain types of
devices, memory, buses, and processors.  This is achieved with the property </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Physical_Access</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Bus components can have different property values under different
operational modes.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
bus component can include protocols in its abstraction.  Protocols provided by
a bus can be specified with the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property. 
They are matched against protocol requirements of connections and virtual buses
as specified by their </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Virtual_Bus_Class</span><span lang="EN-US"> property.  If desired instances of protocols supported by a bus can
be explicitly modeled as virtual bus subcomponents.  In that case the
connection or virtual bus requiring a specific protocol can be bound to the
specific virtual bus instance.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Virtual
buses (protocols) may be implemented in the bus hardware or in software.  The
virtual bus software executes on processors connected to the bus, whose bound
threads communicate over connections that require the protocol.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
bus is intended to be an abstraction of a physical bus or network.  If it is
desirable, the internals of the bus can be modeled by AADL as a system in its
own right, i.e., an application system and an execution platform.  This system
implementation description can be associated with the bus component declaration
by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation shall define how the final size of a transmission is
determined for a specific connection.  Implementation choices and restrictions
such as packetization and header and trailer information are not defined in
this standard.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation shall define the methods used for bus arbitration and
scheduling.  If desired this can be modeled by a notation of your choice and
associated with a bus via property.  Alternatively, it can be modeled through
an AADL system model and associated with the bus through an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"><a name="c6011ea8-3143-4bc5-9962-178d9c7680a9" id="id_c6011ea8-3143-4bc5-9962-178d9c7680a9" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">Hardware</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">public</span></span></b></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">bus</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> VME </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> VME;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">memory</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
Memory_Card </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">features</span></span></b></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   Card_Connector : </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">requires</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">bus
access</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> VME;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
Memory_Card;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">processor</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
PowerPC </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">features</span></span></b></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   Card_Connector : </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">requires bus
access</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> VME;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
PowerPC;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">processor implementation</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> PowerPC.Linux </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
PowerPC.Linux;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">system</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
Dual_Processor </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> Dual_Processor;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> Dual_Processor.PowerPC </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">subcomponents</span></span></b></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   System_Bus: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">bus</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> VME;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   Left: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">processor</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> PowerPC.Linux;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   Right: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">processor</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> PowerPC.Linux;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   Shared_Memory: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">memory</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
Memory_Card;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> </span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">connections</span></span></b></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   LCConn: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">bus access</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> System_Bus &lt;-&gt;
Left.Card_Connector;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   RCConn: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">bus access</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> System_Bus &lt;-&gt;
Right.Card_Connector;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">   SMConn: </span><b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">bus access</span></b><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9"> System_Bus &lt;-&gt;
Shared_Memory.Card_Connector;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end</span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">
Dual_Processor.PowerPC;</span></span></p><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">end </span></span></b><span lang="EN-US"><span class="requality_text id_c6011ea8-3143-4bc5-9962-178d9c7680a9">Hardware;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320321"></a><a name="_Ref196868319"></a><a name="_Toc169684088"></a><a name="_Toc167033738"></a><a name="_Toc168661855"><span lang="EN-US">6.5<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Virtual Buses</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual bus component represents logical bus abstraction such as a
virtual channel or communication protocol. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Virtual buses can be bound to buses, virtual buses, processors,
virtual processors, devices, or memory.  When bound to a bus, it may represent
multiple protocols supported by the bus or a virtual channel with a subset of
the bus bandwidth. When bound to a virtual bus it may represent a hierarchy of
protocols or virtual channels. When bound to a processor it may represent
protocols supported by a processor. When bound to a sequence of hardware
components it may represent a virtual channel or flow across these components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Virtual buses can be subcomponents of processors, buses, and other
virtual buses. This implies that they are bound to the processor, bus, or
virtual bus they are contained in.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Connections and virtual buses can indicate by property the protocols
they require by identifying the appropriate virtual bus or bus classifier.  A connection
can also indicate the desired level of quality of service, which must be
satisfied by the virtual bus or bus the connection is bound to.  Similarly, hardware
components can indicate by property the virtual buses they provide.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: -26.55pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="96" style="width: 72.25pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="280" style="width: 210.2pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="185" style="width: 138.45pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="96" style="width: 72.25pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">virtual bus</span></b></p>
  </td>
  <td width="280" style="width: 210.2pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_5a72b3fa-c48c-4360-8297-75a53a1641ec"><a name="5a72b3fa-c48c-4360-8297-75a53a1641ec" id="id_5a72b3fa-c48c-4360-8297-75a53a1641ec" class="requality_id"></a>Features</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">none</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cea77ea2-2398-4a31-8fcc-1274cf5a4438"><a name="cea77ea2-2398-4a31-8fcc-1274cf5a4438" id="id_cea77ea2-2398-4a31-8fcc-1274cf5a4438" class="requality_id"></a>Flow specifications: no</span></span></p><span class="requality_text id_cea77ea2-2398-4a31-8fcc-1274cf5a4438">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cea77ea2-2398-4a31-8fcc-1274cf5a4438">Modes: yes</span></span></p><span class="requality_text id_cea77ea2-2398-4a31-8fcc-1274cf5a4438">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_cea77ea2-2398-4a31-8fcc-1274cf5a4438">Properties: yes</span></span></p>
  </td>
  <td width="185" style="width: 138.45pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_4fc64bbc-ae5e-4f3f-9646-1b179caba55c"><a name="4fc64bbc-ae5e-4f3f-9646-1b179caba55c" id="id_4fc64bbc-ae5e-4f3f-9646-1b179caba55c" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US"><span class="requality_text id_3ae3a737-226a-4d61-8973-52049d72b0b1"><a name="3ae3a737-226a-4d61-8973-52049d72b0b1" id="id_3ae3a737-226a-4d61-8973-52049d72b0b1" class="requality_id"></a>virtual bus</span></span></p><span class="requality_text id_3ae3a737-226a-4d61-8973-52049d72b0b1">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_3ae3a737-226a-4d61-8973-52049d72b0b1">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3ae3a737-226a-4d61-8973-52049d72b0b1">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_3ae3a737-226a-4d61-8973-52049d72b0b1">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b"><a name="b3013f56-fe18-4ca4-9903-233107f5230b" id="id_b3013f56-fe18-4ca4-9903-233107f5230b" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">Connections: no</span></span></p><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">Flows: no</span></span></p><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">Modes: yes</span></span></p><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b3013f56-fe18-4ca4-9903-233107f5230b">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_d133e638-7147-4927-b445-b992f56d8d6f"><a name="d133e638-7147-4927-b445-b992f56d8d6f" id="id_d133e638-7147-4927-b445-b992f56d8d6f" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_d133e638-7147-4927-b445-b992f56d8d6f">        
</span></span></span><span lang="EN-US"><span class="requality_text id_d133e638-7147-4927-b445-b992f56d8d6f">A virtual bus type can have property
associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_80eed930-6647-4e80-8418-92094f7674c0"><a name="80eed930-6647-4e80-8418-92094f7674c0" id="id_80eed930-6647-4e80-8418-92094f7674c0" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_80eed930-6647-4e80-8418-92094f7674c0">        
</span></span></span><span lang="EN-US"><span class="requality_text id_80eed930-6647-4e80-8418-92094f7674c0">A virtual bus type must not contain flow
specifications.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_3bb68e1b-e662-4e76-ac64-c862e35b5a72"><a name="3bb68e1b-e662-4e76-ac64-c862e35b5a72" id="id_3bb68e1b-e662-4e76-ac64-c862e35b5a72" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_3bb68e1b-e662-4e76-ac64-c862e35b5a72">        
</span></span></span><span lang="EN-US"><span class="requality_text id_3bb68e1b-e662-4e76-ac64-c862e35b5a72">A virtual bus implementation can contain virtual
bus subcomponent declarations.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ec1759d3-cc29-447a-aaf0-1d071f4aacac"><a name="ec1759d3-cc29-447a-aaf0-1d071f4aacac" id="id_ec1759d3-cc29-447a-aaf0-1d071f4aacac" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ec1759d3-cc29-447a-aaf0-1d071f4aacac">        
</span></span></span><span lang="EN-US"><span class="requality_text id_ec1759d3-cc29-447a-aaf0-1d071f4aacac">A virtual bus implementation can contain a modes
subclause and property associations.  </span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_9d8437ed-ba6c-48fb-bf6d-e081213c21f5"><a name="9d8437ed-ba6c-48fb-bf6d-e081213c21f5" id="id_9d8437ed-ba6c-48fb-bf6d-e081213c21f5" class="requality_id"></a>(L5)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_9d8437ed-ba6c-48fb-bf6d-e081213c21f5">        
</span></span></span><span lang="EN-US"><span class="requality_text id_9d8437ed-ba6c-48fb-bf6d-e081213c21f5">A virtual bus implementation must not contain a
connections subclause, flows subclause, or subprogram calls subclause.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">In a fully deployed system virtual buses
must be directly or indirectly bound to processors or buses that support these
virtual buses, or they must be subcomponents of buses and processors. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="text-align: justify; page-break-after: avoid;"><span lang="EN-US">-- Properties specifying bus transmission properties</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Allowed_Connection_Type: <b>list</b> <b>of</b> <b>enumeration </b></span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                        (Sampled_Data_Connection, Immediate_Data_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Delayed_Data_Connection, Port_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Data_Access_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Subprogram_Access_Connection)</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">Allowed_Message_Size: Size_Range</span></pre><pre><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;"> </span></pre><pre><span class="CODE"><span lang="EN-US">Transmission_Type: </span></span><b><span lang="EN-US">enumeration</span></b><span lang="EN-US"> ( push, pull )</span></pre><pre><span lang="EN-US">Transmission_Time: <b>record</b> (</span></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre><span lang="EN-US">Prototype_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match)</span></pre><pre><span lang="EN-US">-- Protocol support</span></pre><pre><span lang="EN-US">Provided_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span lang="EN-US">Provided_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">Required_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Required_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">-- mode related properties</span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span lang="EN-US"><code>-- Virtual machine layering</code></span></pre><pre><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></pre><pre><code><span lang="EN-US"> </span></code></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual bus represents a virtual channel or communication
protocol. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class
</span><span lang="EN-US">property is used to indicate that a processor or bus
supports a protocol.  Similarly, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Virtual_Bus_Class </span><span lang="EN-US">property is
used to indicate that a protocol is required by a connection or virtual bus.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual bus can be a subcomponent of a virtual bus, bus, virtual
processor, processor, or system, it can be provided as indicated by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class </span><span lang="EN-US">property of a bus, virtual bus, virtual processor, or processor.  In
all cases, this indicates that the protocol represented by the virtual bus is
supported on the bus or processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a virtual bus requires another virtual bus as expressed by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Virtual_Bus_Class</span><span lang="EN-US"> property, this required access is satisfied by binding the protocol
to a processor or bus that provides this virtual bus as specified with the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A virtual bus can represent a portion of the bandwidth capacity of a
bus.  It can act as virtual channel that can make certain performance
guarantees.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Connection_Type</span><span lang="EN-US"> property indicates which forms of access a particular virtual bus
supports.  The virtual bus may constrain the size of messages communicated
through data or event data connections.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Virtual
bus components can have different property values under different operational
modes.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
it is desirable, the internals of the virtual bus can be modeled by AADL as an
application system in its own right, e.g., as a sender thread interacting with
a receiver thread.  This system implementation description can be associated
with the virtual bus component declaration by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US">
property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).  </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation shall define how the final size of a transmission is
determined for a specific connection.  Implementation choices and restrictions
such as packetization and header and trailer information are not defined in
this standard.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation shall define the methods used for bus arbitration and
scheduling. If desired this can be modeled by a notation of your choice and
associated with a virtual bus via a property. Alternatively, it can be modeled
through an AADL system model and associated with the bus through an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"><a name="f718500d-b3c5-4eb0-9453-b87a02633244" id="id_f718500d-b3c5-4eb0-9453-b87a02633244" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">Hardware</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">public</span></span></b></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">bus</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> Ethernet </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">end</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> Ethernet;</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">virtual bus</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> IP_TCP </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">end</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">
IP_TCP;</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> </span></span></b></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">virtual bus</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> HTTP </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">properties</span></span></b></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">  Allowed_Connection_Binding_Class =&gt; </span><b><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">classifier
(</span></b><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">IP_TCP);</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">end</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> HTTP;</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">processor</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> PowerPC</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">end</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> PowerPC;</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">processor implementation</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> PowerPC.Linux</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">subcomponents</span></span></b></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">  IP_TCP: </span><b><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">virtual bus</span></b><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244"> IP_TCP; </span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">end</span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">
PowerPC.Linux;</span></span></p><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">end </span></span></b><span lang="EN-US"><span class="requality_text id_f718500d-b3c5-4eb0-9453-b87a02633244">Hardware;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320322"></a><a name="_Toc169684089"></a><a name="_Toc167033739"></a><a name="_Toc168661856"></a><a name="_Toc86725666"></a><a name="_Toc86220703"></a><a name="_Toc86220238"></a><a name="_Toc86219858"></a><a name="_Toc86219753"></a><a name="_Toc79294988"><span lang="EN-US">6.6<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Device</span></a><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A device component represents dedicated hardware within the system, entities
in the external environment, or entities that interface with the external
environment.  A device may represent a physical entity or its (simulated)
software equivalent.  A device may exhibit simple or complex behaviors. 
Devices may internally have a processor, memory and software that can be
modeled in a separate system declaration and associated with the device through
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property.  Devices are logically connected to application software
components and physically connected to processors via buses.  If the device has
associated software such as device drivers that must reside in a memory and
execute on a processor external to the device, this can be specified through
appropriate property values for the device. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A device interacts with both execution platform components and
application software components.  A device can have physical connections to
processors via a bus.  This models software executing on a processor accessing
the physical device.  A device also has logical connections to application
software components. Those logical connections are represented by connection declarations
between device ports and application software component ports.  For any logical
connection between a device and a thread executing application source text,
there must be a physical connection in the execution platform.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A device can be viewed to be a primary part of the application
system. In this case, it is natural to place the device together with the
application software components.  The physical connection to processors must
follow the system hierarchy.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A device may be viewed to be primarily part of the execution
platform. In this case, it is placed in proximity of other execution platform
components. The logical connections have to follow the system hierarchy to
connect to application software components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Examples of devices are sensors and actuators that interface with
the external physical world, or standalone physical systems (such as a GPS) or
dedicated hardware (such as counters or timers).  Devices communicate with
embedded application systems through ports and connections and with the
computing hardware through bus access.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: -35.55pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="96" style="width: 72.25pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="276" style="width: 206.9pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="180" style="width: 135.1pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="96" style="width: 72.25pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">device<span class="requality_text id_2bea3b18-5b25-4d50-aee2-62a02d61608c"><a name="2bea3b18-5b25-4d50-aee2-62a02d61608c" id="id_2bea3b18-5b25-4d50-aee2-62a02d61608c" class="requality_id"></a></span></span></b></p><span class="requality_text id_2bea3b18-5b25-4d50-aee2-62a02d61608c">
  </span></td>
  <td width="276" style="width: 206.9pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;"><span class="requality_text id_2bea3b18-5b25-4d50-aee2-62a02d61608c">
  </span><p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_2bea3b18-5b25-4d50-aee2-62a02d61608c">Features</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        <span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e"><a name="aae46553-ec3c-444b-a586-aa58aed2821e" id="id_aae46553-ec3c-444b-a586-aa58aed2821e" class="requality_id"></a>
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">port</span></span></p><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">feature group</span></span></p><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">provides subprogram access</span></span></p><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">provides subprogram group access</span></span></p><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">requires bus access</span></span></p><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">provides bus access</span></span></p><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_aae46553-ec3c-444b-a586-aa58aed2821e">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_108f0491-6e09-4600-89a9-fb406e7f7d03"><a name="108f0491-6e09-4600-89a9-fb406e7f7d03" id="id_108f0491-6e09-4600-89a9-fb406e7f7d03" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_108f0491-6e09-4600-89a9-fb406e7f7d03">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_108f0491-6e09-4600-89a9-fb406e7f7d03">Modes: yes</span></span></p><span class="requality_text id_108f0491-6e09-4600-89a9-fb406e7f7d03">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_108f0491-6e09-4600-89a9-fb406e7f7d03">Properties: yes</span></span></p>
  </td>
  <td width="180" style="width: 135.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_18688013-21cd-43ea-8697-af0d5b957228"><a name="18688013-21cd-43ea-8697-af0d5b957228" id="id_18688013-21cd-43ea-8697-af0d5b957228" class="requality_id"></a>Subcomponents</span>:</span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996"><a name="e409046e-d3e3-4572-a213-33ddb11d8996" id="id_e409046e-d3e3-4572-a213-33ddb11d8996" class="requality_id"></a>·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">bus</span></span></p><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">virtual bus</span></span></p><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">data</span></span></p><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_e409046e-d3e3-4572-a213-33ddb11d8996">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63"><a name="01018d1c-54ed-40a0-91cc-74650b6a3f63" id="id_01018d1c-54ed-40a0-91cc-74650b6a3f63" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">Connections: yes</span></span></p><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">Flows: yes</span></span></p><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">Modes: yes</span></span></p><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_01018d1c-54ed-40a0-91cc-74650b6a3f63">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_c8e2a316-976a-4e33-9ccf-0fb92e5868b2"><a name="c8e2a316-976a-4e33-9ccf-0fb92e5868b2" id="id_c8e2a316-976a-4e33-9ccf-0fb92e5868b2" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_c8e2a316-976a-4e33-9ccf-0fb92e5868b2">        
</span></span></span><span lang="EN-US"><span class="requality_text id_c8e2a316-976a-4e33-9ccf-0fb92e5868b2">A device type can contain port, feature group, provides
subprogram access, provides subprogram group access, bus access declarations,</span>
<span class="requality_text id_66633432-c364-45cc-9a5f-9fa5aa548149"><a name="66633432-c364-45cc-9a5f-9fa5aa548149" id="id_66633432-c364-45cc-9a5f-9fa5aa548149" class="requality_id"></a>flow specifications, a modes subclause, as well as property associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_76735088-d60e-4380-80eb-3fe089d3ad8b"><a name="76735088-d60e-4380-80eb-3fe089d3ad8b" id="id_76735088-d60e-4380-80eb-3fe089d3ad8b" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_76735088-d60e-4380-80eb-3fe089d3ad8b">        
</span></span></span><span lang="EN-US"><span class="requality_text id_76735088-d60e-4380-80eb-3fe089d3ad8b">A device component implementation must not
contain a subprogram calls subclause.</span>  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_314e3eaa-86b1-4f69-b7c1-ea46dcb31aa4"><a name="314e3eaa-86b1-4f69-b7c1-ea46dcb31aa4" id="id_314e3eaa-86b1-4f69-b7c1-ea46dcb31aa4" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_314e3eaa-86b1-4f69-b7c1-ea46dcb31aa4">        
</span></span></span><span lang="EN-US"><span class="requality_text id_314e3eaa-86b1-4f69-b7c1-ea46dcb31aa4">A device implementation can contain abstract, data,
virtual bus, and bus subcomponents,</span> <span class="requality_text id_24dfd983-334b-4b6a-b787-3ee94384d45c"><a name="24dfd983-334b-4b6a-b787-3ee94384d45c" id="id_24dfd983-334b-4b6a-b787-3ee94384d45c" class="requality_id"></a>bus access connections, a modes subclause,
a flows subclause, and property associations.</span>  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- Hardware description properties</span></pre><pre><span lang="EN-US">Hardware_Description_Source_Text: <b>inherit</b> <b>list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Hardware_Source_Language: Supported_Hardware_Source_Languages </span></span></pre><pre><span lang="EN-US">-- Properties specifying device driver software that must be </span></pre><pre><span lang="EN-US">-- executed by a processor </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span lang="EN-US"><span class="CODE">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></pre><pre><span lang="EN-US">-- Properties specifying the execution properties of the device or its driver </span></pre><pre><span lang="EN-US">Dispatch_Protocol: Supported_Dispatch_Protocols</span></pre><pre><span lang="EN-US">Dispatch_Trigger: <b>list of</b> <b>reference </b>(port)</span></pre><pre><span lang="EN-US">Period: <b>inherit</b> Time</span></pre><pre><span lang="EN-US">Compute_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Deadline: <b>inherit</b> Time =&gt; Period</span></pre><pre><span lang="EN-US">-- scheduling properties</span></pre><pre><span lang="EN-US">Time_Slot: <b>list of aadl</b><b>integer </b></span></pre><pre><span lang="EN-US">Priority<span class="HTMLPreformattedChar5">:</span> <b>inherit</b> <b>aadlinteger</b></span></pre><pre><span lang="EN-US"><span class="HTMLPreformattedChar">-- Properties specifying constraints for processor and memory binding</span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- for the device driver software</span></span></pre><pre><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier </b>(memory, system, processor)    </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory,<b> </b>system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- protocol support</span></span></pre><pre><span lang="EN-US">Provided_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">Provided_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- mode related properties</span></span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><code><span lang="EN-US">-- Virtual machine layering</span></code></pre><pre><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></pre><pre><code><span lang="EN-US"> </span></code></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL device components model dedicated hardware or physical entities
in the external environment, e.g., a GPS system, or  entities that interface
with an external environment, e.g., sensors and actuators as interface between
a physical plant and a control system. Devices may represent a physical entity
or its (simulated) software equivalent.  They may exhibit simple behavior,
e.g., a timer, or complex behaviors, e.g., a camera or GPS.  Devices are
logically connected to application software components and physically connected
to processors. The device functionality may be fully embedded in the device
hardware, or it may be provided by device-specific driver software.  </span></p>

<p class="NumberedParagraph"><span class="HTMLPreformattedChar3"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">  
</span></span></span><span lang="EN-US">A device is accessible from a processor
if the device is connected via a shared bus component</span><span class="HTMLPreformattedChar3"><span lang="EN-US">. </span></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span class="HTMLPreformattedChar3"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">A
device declaration can include flow specifications that indicate that a device
is a flow source, a flow sink, or a flow path exists through a device.</span></span></p>

<p class="NumberedParagraph"><a name="_Toc27797768"></a><a name="_Toc27449596"></a><a name="_Toc8550379"></a><a name="_Toc2492781"></a><a name="_Toc535736357"></a><a name="_Toc535736037"></a><a name="_Toc535729879"></a><a name="_Toc532013612"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Device components can have different property values under different
operational modes. </span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
device component can contain a data subcomponent to represent persistent state.
This data subcomponent cannot be made accessible via data access. Device
behavior can be specified via Behavior Annex subclauses, which can refer to the
data subcomponent. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Embedded
application software interacts with devices through port connections and
through subprogram calls.  Data ports can be used to represent device
registers.  Event and event data ports can be used to represent signals and
interrupts that trigger execution of software or that initiate a reaction by
the device.  Subprogram calls reflect functionality executed by the device. 
This functionality may be fully implemented in the device hardware or through a
device driver.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Protocol </span><span lang="EN-US">property determines the execution behavior of the device.  A device
can execute periodically or event-driven.  Periodic execution means that the
device polls the external environment periodically to produce a periodic data stream
to the application, or that it samples input from the application
periodically.  Event-driven execution means that the device generates events,
e.g., a clock or timer, that it observes events in the external environment and
passes them to the application, e.g., flipping of a switch, or that it responds
to events or event data being sent by the application, e.g., a signal to turn
on a light.  The input or output rate on device ports can be specified through
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Rate</span><span lang="EN-US"> property.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Trigger</span><span lang="EN-US"> property can be used to specify a subset of event or event data
ports that can trigger a device dispatch.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
interface to a device may be through a device driver.  The features of the
device type may represent the interface to the device via the device driver.  The
execution behavior of the device driver is specified by the device dispatch
protocol. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
device driver may execute as part of the underlying operating system kernel. 
In this case, we can specify the driver characteristics as properties on the
device itself, such as the code size, data size, and stack size.  Binding
properties specify the processor whose runtime system includes the driver.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
device driver may execute in a separate address space from the operating system
kernel.  In this case, the binding property may specify a virtual processor as
target.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
device driver may execute as an application thread.  In this case, the driver
is modeled by an AADL thread.  This thread provides the device interface to the
application and interfaces with the device registers of the physical device,
represented by the AADL device component. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
device can contain a bus subcomponent that it makes externally accessible. 
This models a bus that is managed by the device and other components can
connect to it.  In this case the device is implicitly connected to this bus.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
device can support communication protocols as expressed by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property.  Instances of such protocols can also be explicitly
represented by virtual bus subcomponents.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
device is intended to be an abstraction of a physical component in the embedded
system environment.  If it is desirable, the internals of the device can be
modeled by AADL as a system in its own right, i.e., an application system and
an execution platform.  For example, a digital camera as a device can be
modeled as a set of processors and application software that handles the taking
of images and their transfer from the camera to a processor via a USB bus
connection.  This system implementation description can be associated with the
device component declaration by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">This
software must reside as a binary image on memory components and is executed on
a processor component. The executing processor that has access to the device
must be connected to the device via a bus.  The memory storing the binary image
must be accessible to the processor.  Device driver software may be modeled
implicitly through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Text</span><span lang="EN-US"> and related properties, or it may be modeled explicitly by a
separate thread declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
the implicit model the execution of the device driver software may be
considered to be part of the runtime system of a processor to which the device
is connected, or it may be treated as an implicitly declared thread.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"><a name="e5c7113f-b94b-4854-91a1-ffb1af97eb5a" id="id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a" class="requality_id"></a>Package </span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">Equipment</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: rgb(127, 0, 85);"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">with</span></span></b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> Buses, UserTypes, </span><u><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">Simulation</span></u><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">device</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> </span></span><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">Camera</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">features</span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">  usbport:
</span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">requires bus access</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> Buses::USB.USB2;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">  image: </span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">out
event data port</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> UserTypes::imageformat.jpg;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">
</span></span><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">Camera</span><span style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">;</span></span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> </span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">device </span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">temperature_sensor</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">features</span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> 
serialline: </span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">requires bus access</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> Buses::RS232;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> 
temp_reading: </span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">out data port</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> UserTypes::Temperature.Celsius;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">end</span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> temperature_sensor;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> </span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">device
implementation </span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">temperature_sensor.hardware</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">properties</span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">  Hardware_Description_Source_Text
=&gt; “TemperatureSensorHardwareModel.mdl”;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">end</span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> temperature_sensor.hardware;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> </span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">device
implementation </span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">temperature_sensor.simulation</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">properties</span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> 
Simulation::SensorReadings =&gt; “SensorTrace1.xls”;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">end</span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> temperature_sensor.simulation;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> </span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">device </span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">Timer</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">features</span></span></b></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> 
SignalWire: </span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">requires bus access</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> Wire.Gauge12;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">  SetTime:
</span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">in event data port</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> UserTypes::Time;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> 
TimeExpired: </span><b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">out event port</span></b><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">end</span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a"> Timer;</span></span></p><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">end </span></span></b><span lang="EN-US"><span class="requality_text id_e5c7113f-b94b-4854-91a1-ffb1af97eb5a">Equipment;</span></span></p>

<h1 style="margin: 12pt 0cm 12pt 18pt; line-height: 12pt;"><a name="_Ref27449840"></a><a name="_Toc318320323"></a><a name="_Toc169684090"></a><a name="_Toc167033740"></a><a name="_Toc168661857"></a><a name="_Toc86725667"></a><a name="_Toc86220704"></a><a name="_Toc86220147"></a><a name="_Toc86219859"></a><a name="_Toc86219754"></a><a name="_Toc79294989"></a><a name="_Toc27797769"></a><a name="_Ref27450083"><span lang="EN-US">7<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">System Composition</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Systems are organized into a hierarchy of components to reflect the
structure of actual systems being modeled.  This hierarchy is modeled by <i>system</i>
declarations to represent a composition of components into composite
components.</span><span lang="EN-US">  A <i>system instance</i> models an
instance of an application system and its binding to a system that contains
execution platform components.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320324"></a><a name="_Toc169684091"></a><a name="_Toc167033741"></a><a name="_Toc168661858"></a><a name="_Toc86725668"></a><a name="_Toc86220705"></a><a name="_Toc86220239"></a><a name="_Toc86219860"></a><a name="_Toc86219755"></a><a name="_Toc79294990"></a><a name="_Ref56531504"></a><a name="_Ref35013583"></a><a name="_Toc27797770"></a><a name="_Toc27449598"><span lang="EN-US">7.1<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Systems</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system<i> </i>represents an assembly of interacting application
software, execution platform, and system components.  Systems can have multiple
modes, each representing a possibly different configuration of components and
their connectivity contained in the system.  Systems may require access to data
and bus components declared outside the system and may provide access to data
and bus components declared within.  Systems may be hierarchically nested. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="91" style="width: 68.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Category</span></b></p>
  </td>
  <td width="276" style="width: 206.75pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="187" style="width: 140.1pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="center" class="MsoHeader" style="margin: 2pt 0cm; text-align: center; page-break-after: avoid;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="91" style="width: 68.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center; page-break-after: avoid;"><b><span lang="EN-US" style="font-size: 10pt;">system</span></b></p>
  </td>
  <td width="276" style="width: 206.75pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_95efbb1a-1031-480c-b76f-30d92dac5c87"><a name="95efbb1a-1031-480c-b76f-30d92dac5c87" id="id_95efbb1a-1031-480c-b76f-30d92dac5c87" class="requality_id"></a>Features:</span> </span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9"><a name="dd34441f-3daf-4f43-8003-9fa18e047ae9" id="id_dd34441f-3daf-4f43-8003-9fa18e047ae9" class="requality_id"></a>port</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">feature group</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">provides subprogram access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">requires subprogram access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">provides subprogram group access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">requires subprogram group access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">provides bus access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">requires bus access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">provides data access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">requires data access</span></span></p><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_dd34441f-3daf-4f43-8003-9fa18e047ae9">feature</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_41481a14-5601-40ea-8c9f-32815ff47aa9"><a name="41481a14-5601-40ea-8c9f-32815ff47aa9" id="id_41481a14-5601-40ea-8c9f-32815ff47aa9" class="requality_id"></a>Flow specifications: yes</span></span></p><span class="requality_text id_41481a14-5601-40ea-8c9f-32815ff47aa9">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_41481a14-5601-40ea-8c9f-32815ff47aa9">Modes: yes</span></span></p><span class="requality_text id_41481a14-5601-40ea-8c9f-32815ff47aa9">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_41481a14-5601-40ea-8c9f-32815ff47aa9">Properties: yes</span></span></p>
  </td>
  <td width="187" style="width: 140.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table" style="page-break-after: avoid;"><span lang="EN-US" style="font-size: 10pt;"><span class="requality_text id_1deb792a-ffbd-427a-b189-0aed7c478e19"><a name="1deb792a-ffbd-427a-b189-0aed7c478e19" id="id_1deb792a-ffbd-427a-b189-0aed7c478e19" class="requality_id"></a>Subcomponents:</span></span></p>
  <p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504"><a name="bbe06b03-424e-4c8b-8a1d-0ee0bdb07504" id="id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504" class="requality_id"></a>·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">data</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">subprogram</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">subprogram group</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">process</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">processor</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">virtual
  processor                                                                                                                                                                            
                                                               </span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">memory</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">bus</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">virtual bus</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">device</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">system</span></span></p><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">
  </span><p class="table-indent" style="page-break-after: avoid;"><span lang="EN-US" style="font-family: Symbol;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">·</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">        
  </span></span></span><span lang="EN-US"><span class="requality_text id_bbe06b03-424e-4c8b-8a1d-0ee0bdb07504">abstract</span></span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8"><a name="b716fa50-47cc-43f9-9236-d60e7fae98d8" id="id_b716fa50-47cc-43f9-9236-d60e7fae98d8" class="requality_id"></a>Subprogram calls: no</span></span></p><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">Connections: yes</span></span></p><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">Flows: yes</span></span></p><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">Modes: yes</span></span></p><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">
  </span><p class="table-indent" style="margin-left: 0cm; text-indent: 0cm; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_b716fa50-47cc-43f9-9236-d60e7fae98d8">Properties: yes</span></span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_65434cce-7d57-4300-90bc-46150d9509b2"><a name="65434cce-7d57-4300-90bc-46150d9509b2" id="id_65434cce-7d57-4300-90bc-46150d9509b2" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_65434cce-7d57-4300-90bc-46150d9509b2">        
</span></span></span><span lang="EN-US"><span class="requality_text id_65434cce-7d57-4300-90bc-46150d9509b2">A system component type can contain subprogram,
subprogram group, data and bus access declarations, port, feature group
declarations.</span>  <span class="requality_text id_8a4135df-76b7-451c-be4c-b7d0ef602c08"><a name="8a4135df-76b7-451c-be4c-b7d0ef602c08" id="id_8a4135df-76b7-451c-be4c-b7d0ef602c08" class="requality_id"></a>It can also contain flow specifications as well as property
associations.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_a7a306c5-0ead-476c-b090-50fd20dbc1de"><a name="a7a306c5-0ead-476c-b090-50fd20dbc1de" id="id_a7a306c5-0ead-476c-b090-50fd20dbc1de" class="requality_id"></a>(L2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a7a306c5-0ead-476c-b090-50fd20dbc1de">        
</span></span></span><span lang="EN-US"><span class="requality_text id_a7a306c5-0ead-476c-b090-50fd20dbc1de">A system component implementation can contain abstract,
data, subprogram, subprogram group, process, and system subcomponent
declarations as well as execution platform components, i.e., processor, virtual
processor, memory, bus, virtual bus, and device.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b8cbba01-2ce6-408a-80da-b0d91475affd"><a name="b8cbba01-2ce6-408a-80da-b0d91475affd" id="id_b8cbba01-2ce6-408a-80da-b0d91475affd" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b8cbba01-2ce6-408a-80da-b0d91475affd">        
</span></span></span><span lang="EN-US"><span class="requality_text id_b8cbba01-2ce6-408a-80da-b0d91475affd">A system implementation can contain a modes
subclause, a connections subclause, a flows subclause, and property associations.</span> 
</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_fe707633-cf43-4ce3-b9ef-2bd667f21e9a"><a name="fe707633-cf43-4ce3-b9ef-2bd667f21e9a" id="id_fe707633-cf43-4ce3-b9ef-2bd667f21e9a" class="requality_id"></a>(L4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_fe707633-cf43-4ce3-b9ef-2bd667f21e9a">        
</span></span></span><span lang="EN-US"><span class="requality_text id_fe707633-cf43-4ce3-b9ef-2bd667f21e9a">A thread group must not contain a subprogram
calls subclause.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to source text</span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Process property that can be specified at the system level as well</span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Runtime enforcement of address space boundaries</span></span></pre><pre><span lang="EN-US">Runtime_Protection : <b>inherit</b> <b>aadlboolean</b> </span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Inheritable thread properties</span></span></pre><pre style="text-align: justify;"><span lang="EN-US">Synchronized_Component: <b>inherit</b> <b>aadlboolean </b>=&gt; <b>true</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Active_Thread_Handling_Protocol: </span></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US">   inherit</span></b><span lang="EN-US"> Supported_Active_Thread_Handling_Protocols =&gt; abort</span></pre><pre><span lang="EN-US">Period: <b>inherit</b> Time</span></pre><pre><span lang="EN-US">Deadline: <b>inherit</b> Time =&gt; Period</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- execution time related properties </span></span></pre><pre><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- scheduling properties</span></span></pre><pre><span lang="EN-US">Time_Slot: <b>list of aadl</b><b>integer </b></span></pre><pre><span lang="EN-US">Priority<span class="HTMLPreformattedChar5">:</span> <b>inherit</b> <b>aadlinteger</b></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related binding of software component source text in </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- systems to processors and memory</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></pre><pre><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Collocated: <b>record </b>( </span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre><span lang="EN-US">Not_Collocated: <b>record </b>( </span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related systems as execution platforms </span></span></pre><pre><span class="CODE"><span lang="EN-US">Hardware_Source_Language: Supported_Hardware_Source_Languages </span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- mode related properties</span></span></pre><pre><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to startup of processor contained in a system</span></span></pre><pre><span class="CODE"><span lang="EN-US">Startup_Deadline: Time</span></span></pre><pre><span class="CODE"><span lang="EN-US">Startup_Execution_Time: Time_Range</span></span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to system load times</span></span></pre><pre><span lang="EN-US">Load_Time:</span><span lang="EN-US"> Time_Range</span></pre><pre><span lang="EN-US">Load_Deadline: Time</span></pre><pre><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties related to the hardware clock</span></span></pre><pre><span lang="EN-US">Clock_Jitter: Time</span></pre><pre><span lang="EN-US">Clock_Period: Time</span></pre><pre><span lang="EN-US">Clock_Period_Range: Time_Range</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system component represents an assembly of software and execution
platform components.  All subcomponents of a system are considered to be
contained in that system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Some system components consist of purely software components all of
which must be bound to execution platform components outside the system itself.
An example is an application software system.  Some system components consist
purely of computing hardware components. They represent aggregations of processor,
memory, and bus components that act as the hardware platform. Some system
component is a composition of devices and buses that represent the physical
environment that the embedded software system interacts with.  Some system
components may be combinations of the above.  Some system components are
self-contained in that all contained software components are bound to execution
platform components contained within the same system.  Such self-contained systems
may have external connectivity in the form of logical connection points
represented by ports and physical connection points in the form of required or
provided bus access.  Examples, of such systems are database servers, GPS
receivers, and digital cameras.  Such self-contained systems with an external
interface may represent the implementation of devices. The device
representation takes a black-box perspective, while the system representation
takes a white-box perspective and is associated with the device through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system component can contain a modes subclause.  Each mode can
represent an alternative system configuration of contained subcomponents and </span><span lang="EN-US">their connecti</span><span lang="EN-US">ons.  The transition between
modes is determined by the mode transition declarations of specific property
associations.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Processing methods may restrict data, subprogram, and subprogram
group subcomponents to be part of only one process address space.  In that case
they may require those subcomponents to be placed inside a process, thread
group, or thread, and not be allowed in system implementations.</span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US"> </span></p>

<h1 style="margin: 12pt 0cm 12pt 18pt; line-height: 12pt;"><a name="_Ref56323788"></a><a name="_Ref52456111"></a><a name="_Ref37209256"></a><a name="_Ref37140938"></a><a name="_Ref34916976"></a><a name="_Ref33947001"></a><a name="_Toc27797772"></a><a name="_Toc318320325"></a><a name="_Ref208067885"></a><a name="_Toc169684092"></a><a name="_Toc167033742"></a><a name="_Toc168661859"></a><a name="_Ref148768051"></a><a name="_Ref148768044"></a><a name="_Toc86725669"></a><a name="_Toc86220706"></a><a name="_Toc86220148"></a><a name="_Toc86219861"></a><a name="_Toc86219756"></a><a name="_Toc79294991"></a><a name="_Ref55897797"></a><a name="_Ref46724920"></a><a name="_Toc27797774"></a><a name="_Toc27449602"></a><a name="_Toc8550388"></a><a name="_Toc2492790"></a><a name="_Toc535736366"></a><a name="_Toc535736046"></a><a name="_Ref535730199"></a><a name="_Ref535730173"></a><a name="_Toc535729888"><span lang="EN-US">8<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Features and Shared Access</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>feature</i> is a part of a component type definition that
specifies how that component interfaces with other components in the system.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Feature groups</span></i><span lang="EN-US"> represent groups of
component features.  Feature groups can contain feature groups. Feature groups
can be used anywhere features can be used.  Within a component, the features of
a feature group can be connected to individually.  Outside a component, feature
groups can be connected as a single unit.  Feature groups can be partially
defined without specifying the elements to play the role of an abstract feature. 
It can later be refined into a group of one or more features.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Port</span></i><span lang="EN-US"> features represent a communication
interface for the exchange of data and events between components.  Ports are
classified into data ports, event ports, and event data ports.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Subprogram access</span></i><span lang="EN-US"> features represent
access to a subprogram to be called from other components, and the need for a
component to call a subprogram instance locally, i.e., a subprogram that is
declared in the containing process or one of its subcomponents, or to call a
subprogram remotely, i.e., a subprogram instance in another process.  When used
in data components subprogram access features represent subprograms (methods)
through which the data component is manipulated.  When used in subprogram
groups subprogram access features represent the subprograms of a subprogram
library.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Subprogram group access </span></i><span lang="EN-US">features
represent sharing and required access to a subprogram library.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Parameter</span></i><span lang="EN-US"> features represent data values
that can be passed into and out of subprograms.  Parameters are typed with a
data classifier reference.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Data access </span></i><span lang="EN-US">represents communication via
shared access to data components.  A data component declared inside a component
implementation is specified to be accessible to components outside using a
provides access feature declaration.  A component may indicate that it requires
access to a data subcomponent declared outside utilizing a requires access
feature declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Bus access </span></i><span lang="EN-US">represents physical
connectivity of processors, memory, devices, and buses through buses.  A bus
component declared inside a component implementation is specified to be
accessible to components outside using a provides access feature declaration. 
A component may indicate that it requires access to a bus utilizing a requires
access feature declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Features can be declared as one-dimensional feature arrays.  Such
feature arrays complement component arrays and allow for connection patterns
that connect a feature of each of the component array elements to a feature
array element of one component. An example use is redundant replicas of a
component passing their output to a voting component or a routing component.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<p class="MsoNormal"><a name="RootFeature"><span class="HTMLPreformattedChar1"><span lang="EN-US">feature ::= </span></span></a></p>

<pre><span lang="EN-US">    ( abstract_feature_spec |</span></pre><pre><span lang="EN-US">      port_spec | </span></pre><pre><span lang="EN-US">      feature_group_spec |</span></pre><pre><span lang="EN-US">      subcomponent_access_spec |</span></pre><pre><span lang="EN-US">     parameter_spec )</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">    [ array_dimension ]</span></pre><pre><span lang="EN-US">    [ <b>{</b> { <i>feature</i>_contained_property_association }<sup>+ </sup><b>} </b>] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">subcomponent_access_spec ::= </span></pre><pre><span lang="EN-US">    subprogram_access_spec | subprogram_group_access_spec </span></pre><pre><span lang="EN-US">    | data_access_spec | bus_access_spec</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_refinement ::= </span></pre><pre><span lang="EN-US">    </span><span lang="FR">abstract_feature_refinement</span></pre><pre><span lang="FR">    port_refinement | </span></pre><pre><span lang="FR">    feature_group_refinement |</span></pre><pre><span lang="FR">    subcomponent_access_refinement |</span></pre><pre><span lang="FR">    parameter_refinement</span></pre><pre style="page-break-after: avoid;"><span lang="FR">    [ array_dimension ]</span></pre><pre><span lang="FR">    [ <b>{</b> { <i>feature</i>_contained_property_association }<sup>+ </sup><b>} </b>] <b>;</b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">subcomponent_access_refinement ::= </span></pre><pre><span lang="FR">    subprogram_access_refinement | subprogram_group_access_refinement </span></pre><pre><span lang="FR">    </span><span lang="EN-US">| data_access_refinement | bus_access_refinement</span></pre>

<p class="MsoNormal"><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_614d4ad2-53ff-4a9b-9234-08c8bc44b9c9"><a name="614d4ad2-53ff-4a9b-9234-08c8bc44b9c9" id="id_614d4ad2-53ff-4a9b-9234-08c8bc44b9c9" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_614d4ad2-53ff-4a9b-9234-08c8bc44b9c9">       
</span></span></span><span lang="EN-US"><span class="requality_text id_614d4ad2-53ff-4a9b-9234-08c8bc44b9c9">The defining identifier of a feature must be
unique within the namespace of the associated component type.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Thread features may not be declared using the
predeclared ports names </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete
</span><span lang="EN-US">or</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">
Error</span><span lang="EN-US">.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Each refining feature identifier that appears in
a feature refinement declaration must also appear in a feature declaration of a
component type being extended.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A feature is referenced in one of two ways. 
Within the component implementations for a component type, a feature declared
in the type is named in the implementations by its identifier.  Within
component implementations that contain subcomponents with features, a
subcomponent feature is named by the subcomponent identifier and the feature
identifier separated by a “.” (dot).</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The path of a contained property association for
a feature must refer to an element of a feature group.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Each feature can be refined at most once in the
same type extension.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature refinement declaration of a feature
and the original feature must both be declared as port, parameter, access
feature, or feature group, or the original feature must be declared as abstract
feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_b7e5e10f-389d-4724-8f5b-4138a581755e"><a name="b7e5e10f-389d-4724-8f5b-4138a581755e" id="id_b7e5e10f-389d-4724-8f5b-4138a581755e" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_b7e5e10f-389d-4724-8f5b-4138a581755e">        
</span></span></span><span lang="EN-US"><span class="requality_text id_b7e5e10f-389d-4724-8f5b-4138a581755e">Feature arrays must only be declared for
threads, devices, and processors.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature refinement specifies an array
dimension, then the feature being refined must have an array dimension.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the refinement specifies an array dimension
size, then the feature being refined must not have an array dimension size.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A contained property association must only be
used when the feature is a feature group.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of a feature with a classifier
reference, the classifier of the refined feature declaration in a component
type extension must adhere to the classifier refinement rules as indicated by
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Substitution_Rule</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">4.5</span><span lang="EN-US">).   By default, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Match</span><span lang="EN-US"> rule applies, i.e., an incomplete classifier reference can be
completed.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Standard Properties</span></p>

<pre><span lang="EN-US">Acceptable_Array_Size: <b>list of </b>Size_Range </span></pre><pre><span lang="EN-US">Required_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span lang="EN-US">Required_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
feature declaration specifies an interaction point with other components. 
Features can be connected to features of other components external to the
component, and they can also be connected to subcomponents within component
implementations associated with the component type with the feature
declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
refined feature declaration may complete an incomplete component classifier
reference and declare feature property associations.  A feature refinement may
replace a classifier reference according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Substitution_Rule</span><span lang="EN-US"> property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;"><span class="requality_text id_75c26c41-98a0-4d2d-aa52-51e9a8ce64bf"><a name="75c26c41-98a0-4d2d-aa52-51e9a8ce64bf" id="id_75c26c41-98a0-4d2d-aa52-51e9a8ce64bf" class="requality_id"></a>(12)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_75c26c41-98a0-4d2d-aa52-51e9a8ce64bf">  </span></span></span><span lang="EN-US"><span class="requality_text id_75c26c41-98a0-4d2d-aa52-51e9a8ce64bf">Features
can be declared with an array dimension, if the component is a thread, device,
or processor.</span>  In this case, each element of the feature array is connected to
a different element of an ultimate source or destination component array.  Feature
refinement declarations can complete the array dimension with a size
specification, but it cannot change the size. The array dimension and size is
inherited by the refined feature, if it is not explicitly declared. The
specified array dimensions indicate the maximum size array size.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
example, we may have a voting component that takes input from multiple
instances of the same processing component, as shown in </span><span lang="EN-US">Figure 11</span><span lang="EN-US">.  We can declare the processing
component as an array of subcomponents, and the single instance of the voting
component with a port array.  We can then declare a connection from the
outgoing port of the processing subcomponent to the port of the voting
component declared with array dimensions.  The connection can have a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Pattern</span><span lang="EN-US"> property of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One_To_One</span><span lang="EN-US"> (see Section </span><span lang="EN-US">9.2.3</span><span lang="EN-US">)
to indicate that each processing component output is connected to a separate
port of the voting component.  This is illustrated in the example below.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="279" height="111" src="imgs/image023.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320420"></a><a name="_Ref207463104"><span lang="EN-US">Figure </span></a><span lang="EN-US">11</span><span lang="EN-US"> Port Array in a Voting Pattern</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
feature may specify desired quality of service or a particular protocol to be
used for connections through the feature.  This property must be consistent
with the same property associated with the connection.</span></p>

<h2><a name="_Toc318320326"><span lang="EN-US">8.1<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Abstract Features</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Abstract features represent placeholders for concrete features,
i.e., ports, parameters, and the different kinds of access features.  Abstract
features are typically used in incomplete component type declarations,
especially those that play the role of a template.  They can be used in
conjunction with prototypes and allow users to refine such features to concrete
features.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre><a name="AbstractFeature"></a><a name="Feature"><span lang="EN-US">abstract_feature_spec ::=</span></a></pre><pre><b><span lang="EN-US">     </span></b><i><span lang="EN-US">defining_abstract_feature_</span></i><span lang="EN-US">identifier :</span></pre><pre><b><span lang="EN-US">     </span></b><span lang="EN-US"> [ <b> in </b>| <b>out </b>] <b>feature</b> [ <i>feature_prototype</i>_identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">abstract_feature_refinement ::= </span></pre><pre><span lang="EN-US">    ( <i>defining<b>_</b>abstract_feature_</i>identifier<b> </b>:<b> refined to</b></span></pre><pre><span lang="EN-US">      [ <b> in </b>| <b>out </b>] <b>feature</b> [ <i>feature_prototype</i>_identifier ] )</span></pre><pre><span lang="EN-US">    | port_refinement | feature_group_refinement </span></pre><pre><span lang="EN-US">    | subcomponent_access_refinement | parameter_refinement</span></pre><pre><span lang="EN-US">        </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The feature direction in a refined feature
declaration must be identical to the feature direction in the feature declaration
being refined, or the feature being refined must not have a direction.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the direction of an abstract feature is
specified, then the direction must be satisfied by the refinement (see also the
rules for feature prototypes in Section </span><span lang="EN-US">4.7</span><span lang="EN-US">); in the case of ports the direction
must be <b>in</b> or <b>out</b>;  in the case of data access, the access right
must be read-only for <b>in</b> and write-only for <b>out</b>;  in the case of
bus access, subprogram access and subprogram group access the direction must
not be <b>in </b>nor <b>out</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_f7e8fb79-8340-4b7d-8240-3338d5f61a86"><a name="f7e8fb79-8340-4b7d-8240-3338d5f61a86" id="id_f7e8fb79-8340-4b7d-8240-3338d5f61a86" class="requality_id"></a>(L3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_f7e8fb79-8340-4b7d-8240-3338d5f61a86">        
</span></span></span><span lang="EN-US"><span class="requality_text id_f7e8fb79-8340-4b7d-8240-3338d5f61a86">An abstract feature with a feature prototype
identifier and the prototype being referenced must both specify the same
direction or no direction.</span> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An abstract feature refinement declaration of a
feature with a feature prototype reference must only add property associations.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><a name="_Toc2493324"></a><a name="_Toc2492791"></a><a name="_Toc2492688"></a><a name="_Toc535736367"></a><a name="_Toc535736047"></a><a name="_Ref535732536"></a><a name="_Ref535732514"></a><a name="_Ref535730364"></a><a name="_Toc535729889"></a><a name="_Toc8550389"></a><a name="_Toc8550390"></a><a name="_Toc2492795"></a><a name="_Toc535736371"></a><a name="_Toc535736051"></a><a name="_Toc535729893"><span lang="EN-US">Semantics</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component type can contain an abstract feature declaration that
can later be refined into a feature group, port feature, access feature, or
parameter.  An abstract feature may be specified with a direction; this
direction must be satisfied by any refinement according to legality rules.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component type can contain an abstract feature declaration with a
feature prototype reference.  In that case it is a placeholder for the feature that
acts as a parameter to the component type. The actual feature will be supplied
as part of the prototype binding when the component type is referenced, e.g.,
in a subcomponent declaration.  </span></p>

<h2><a name="_Toc86725670"></a><a name="_Toc86220707"></a><a name="_Toc86220240"></a><a name="_Toc86219862"></a><a name="_Toc86219757"></a><a name="_Toc79294992"></a><a name="_Ref67243721"></a><a name="_Ref67236099"></a><a name="_Ref67236093"></a><a name="_Toc27797776"></a><a name="_Toc27449604"></a><a name="_Toc318320327"></a><a name="_Ref189930252"></a><a name="_Toc169684093"></a><a name="_Toc167033743"></a><a name="_Toc168661860"></a><a name="_Toc46561648"></a><a name="_Toc46730371"></a><a name="_Toc46754858"></a><a name="_Toc46766164"></a><a name="_Toc46766282"></a><a name="_Toc46767090"></a><a name="_Toc46767337"></a><a name="_Toc46767460"></a><a name="_Toc46767572"></a><a name="_Toc48460928"></a><a name="_Toc48471917"></a><a name="_Toc49575263"></a><a name="_Toc49679311"></a><a name="_Toc49829028"></a><a name="_Toc51491836"></a><a name="_Toc52350846"></a><a name="_Toc52460825"></a><a name="_Toc52461856"></a><a name="_Toc52690883"></a><a name="_Toc52789185"></a><a name="_Toc52790359"></a><a name="_Toc52847260"></a><a name="_Toc52853336"></a><a name="_Toc46561652"></a><a name="_Toc46730375"></a><a name="_Toc46754862"></a><a name="_Toc46766168"></a><a name="_Toc46766286"></a><a name="_Toc46767094"></a><a name="_Toc46767341"></a><a name="_Toc46767464"></a><a name="_Toc46767576"></a><a name="_Toc48460932"></a><a name="_Toc48471921"></a><a name="_Toc49575267"></a><a name="_Toc49679315"></a><a name="_Toc49829032"></a><a name="_Toc51491840"></a><a name="_Toc52350850"></a><a name="_Toc52460829"></a><a name="_Toc52461860"></a><a name="_Toc52690887"></a><a name="_Toc52789189"></a><a name="_Toc52790363"></a><a name="_Toc52847264"></a><a name="_Toc52853340"></a><a name="_Toc46561673"></a><a name="_Toc46730396"></a><a name="_Toc46754883"></a><a name="_Toc46766189"></a><a name="_Toc46766307"></a><a name="_Toc46767115"></a><a name="_Toc46767362"></a><a name="_Toc46767485"></a><a name="_Toc46767597"></a><a name="_Toc48460953"></a><a name="_Toc48471942"></a><a name="_Toc49575288"></a><a name="_Toc49679336"></a><a name="_Toc49829053"></a><a name="_Toc51491861"></a><a name="_Toc52350871"></a><a name="_Toc52460850"></a><a name="_Toc52461881"></a><a name="_Toc52690908"></a><a name="_Toc52789210"></a><a name="_Toc52790384"></a><a name="_Toc52847285"></a><a name="_Toc52853361"></a><a name="_Toc46561680"></a><a name="_Toc46730403"></a><a name="_Toc46754890"></a><a name="_Toc46766196"></a><a name="_Toc46766314"></a><a name="_Toc46767122"></a><a name="_Toc46767369"></a><a name="_Toc46767492"></a><a name="_Toc46767604"></a><a name="_Toc48460960"></a><a name="_Toc48471949"></a><a name="_Toc49575295"></a><a name="_Toc49679343"></a><a name="_Toc49829060"></a><a name="_Toc51491868"></a><a name="_Toc52350878"></a><a name="_Toc52460857"></a><a name="_Toc52461888"></a><a name="_Toc52690915"></a><a name="_Toc52789217"></a><a name="_Toc52790391"></a><a name="_Toc52847292"></a><a name="_Toc52853368"></a><a name="_Toc46561681"></a><a name="_Toc46730404"></a><a name="_Toc46754891"></a><a name="_Toc46766197"></a><a name="_Toc46766315"></a><a name="_Toc46767123"></a><a name="_Toc46767370"></a><a name="_Toc46767493"></a><a name="_Toc46767605"></a><a name="_Toc48460961"></a><a name="_Toc48471950"></a><a name="_Toc49575296"></a><a name="_Toc49679344"></a><a name="_Toc49829061"></a><a name="_Toc51491869"></a><a name="_Toc52350879"></a><a name="_Toc52460858"></a><a name="_Toc52461889"></a><a name="_Toc52690916"></a><a name="_Toc52789218"></a><a name="_Toc52790392"></a><a name="_Toc52847293"></a><a name="_Toc52853369"></a><a name="_Toc46561686"></a><a name="_Toc46730409"></a><a name="_Toc46754896"></a><a name="_Toc46766202"></a><a name="_Toc46766320"></a><a name="_Toc46767128"></a><a name="_Toc46767375"></a><a name="_Toc46767498"></a><a name="_Toc46767610"></a><a name="_Toc48460966"></a><a name="_Toc48471955"></a><a name="_Toc49575301"></a><a name="_Toc49679349"></a><a name="_Toc49829066"></a><a name="_Toc51491874"></a><a name="_Toc52350884"></a><a name="_Toc52460863"></a><a name="_Toc52461894"></a><a name="_Toc52690921"></a><a name="_Toc52789223"></a><a name="_Toc52790397"></a><a name="_Toc52847298"></a><a name="_Toc52853374"></a><span lang="EN-US">8.2<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Feature Groups and Feature Group Types</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Feature groups represent groups of component features or feature
groups.  Within a component, the features of a feature group can be connected
to individually.  Outside a component, feature groups can be connected as a
single unit.  This grouping concept allows the number of connection
declarations to be reduced, especially at higher levels of a system when a
number of features from one subcomponent and its contained subcomponents must
be connected to features in another subcomponent and its contained
subcomponents.  The content of a feature group is declared through a feature
group type declaration.  This declaration is then referenced when feature
groups are declared as component features. Feature groups can be declared for
any kind of feature, for ports, and for access features.  </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="FeatureGroup"><span lang="EN-US">-- Defining the content structure of a feature group</span></a></pre><pre><span lang="EN-US">feature_group_type ::=</span></pre><pre><span lang="EN-US">    <b>feature</b> <b>group</b> <i>defining</i>_identifier</span></pre><pre><span lang="EN-US">    [ <b>prototypes </b>( {<b> </b>prototype }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">    [ <b>features </b>{<b> </b>feature }<sup>+</sup> ]</span></pre><pre><span lang="EN-US">    [ <b>inverse of</b> unique_feature_group_type_reference ]</span></pre><pre><span lang="EN-US">    [ <b>properties</b> ( { <i>feature_group</i>_contained_property_association }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">    { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">end</span></b><span lang="EN-US"> <i>defining</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_type_extension ::=</span></pre><pre><span lang="EN-US">    <b>feature</b> <b>group</b> <i>defining</i>_identifier </span></pre><pre><span lang="EN-US">    <b>extends</b> unique_feature_group_type_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">    [ <b>prototypes </b>( {<b> </b>prototype | prototype_refinement }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">    [ <b>features </b>{<b> </b>feature | feature_refinement }<sup>+</sup> ]</span></pre><pre><span lang="EN-US">    [ <b>inverse of</b> unique_feature_group_type_reference ]</span></pre><pre><span lang="EN-US">[ <b>properties</b> ( { <i>feature_group</i>_contained_property_association }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US"> { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">end</span></b><span lang="EN-US"> <i>defining</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">-- declaring a feature group as component feature</span></pre><pre><span lang="EN-US">feature_group_spec ::=</span></pre><pre><span lang="EN-US">  <i>defining_feature_group</i>_identifier : [ <b>in </b>| <b>out </b>] <b>feature</b> <b>group </b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">[ [ <b>inverse of</b> ] </span></pre><pre><span lang="EN-US">        ( unique_feature_group_type_reference | <i>prototype­_</i>identifier ) ] </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_refinement ::=</span></pre><pre><span lang="EN-US">  <i>defining_feature_group</i>_identifier : <b>refined to </b>[ <b>in </b>| <b>out </b>] <b>feature</b> <b>group </b></span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ [ <b>inverse of </b>] </span></pre><pre><span lang="EN-US">          ( unique_feature_group_type_reference | <i>prototype_</i>identifier ) ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_feature_group_type_reference ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    [ package_name <b>::</b> ] <i>feature_group_type</i>_identifier </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_2645b8c8-18a7-4e80-836c-eb505b541906"><a name="2645b8c8-18a7-4e80-836c-eb505b541906" id="id_2645b8c8-18a7-4e80-836c-eb505b541906" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_2645b8c8-18a7-4e80-836c-eb505b541906">       
</span></span></span><span lang="EN-US"><span class="requality_text id_2645b8c8-18a7-4e80-836c-eb505b541906">The defining identifier of a feature group type
must be unique within the package namespace of the package where the feature
group type is declared.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842"><a name="52d716ea-c4f4-4539-ae52-0e4256643842" id="id_52d716ea-c4f4-4539-ae52-0e4256643842" class="requality_id"></a>(N2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842">       
</span></span></span><span lang="EN-US"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842">Each feature group type provides a local
namespace.  The defining identifiers of prototype, feature, </span></span><span lang="EN-US"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842">and </span></span><span lang="EN-US"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842">feature </span></span><span lang="EN-US"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842">group</span></span><span lang="EN-US"><span class="requality_text id_52d716ea-c4f4-4539-ae52-0e4256643842"> declarations in a feature group type must be unique within the
namespace of the feature group type.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_87ebb962-ed32-4f6f-b969-b14f79046591"><a name="87ebb962-ed32-4f6f-b969-b14f79046591" id="id_87ebb962-ed32-4f6f-b969-b14f79046591" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_87ebb962-ed32-4f6f-b969-b14f79046591">       
</span></span></span><span lang="EN-US"><span class="requality_text id_87ebb962-ed32-4f6f-b969-b14f79046591">The local namespace of a feature group type
extension includes the defining identifiers in the local namespace of the feature
group type being extended. This means, the defining identifiers of prototype, feature,
or feature group declarations in a feature group type extension must not exist
in the local namespace of the feature group type being extended.</span> The defining
identifiers of prototype, feature, or feature group refinements in a feature group
type extension must refer to a prototype, feature, or feature group in the
local namespace of an ancestor feature group type.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_30ac97df-6ded-4c78-b15f-fa437c502b79"><a name="30ac97df-6ded-4c78-b15f-fa437c502b79" id="id_30ac97df-6ded-4c78-b15f-fa437c502b79" class="requality_id"></a>(N4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_30ac97df-6ded-4c78-b15f-fa437c502b79">       
</span></span></span><span lang="EN-US"><span class="requality_text id_30ac97df-6ded-4c78-b15f-fa437c502b79">The defining feature identifiers of feature
group declarations must be unique in the local name space of the component type
containing the feature group declaration. </span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining feature group identifier of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">feature_refinement</span><span lang="EN-US"> declarations in component types must exist in the local namespace
of the component type being extended and must refer to a feature or feature group.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The package name of the unique feature group
type reference must refer to a package name in the global namespace. The feature
group type identifier of the unique feature group type reference must refer to
a feature group type identifier in the named package.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype reference in a feature group
declaration must refer to a prototype of the component type or feature group
type that contains the feature group declaration.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature group type may contain zero or more
elements, i.e., feature or feature groups.  If it contains zero elements, then
the feature group type may be declared to be the inverse of another feature group
type.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature group type can be declared to be the
inverse of another feature group type, as indicated by the reserved words <b>inverse
of</b> and the name of a feature group type.  Any feature group type named in
an <b>inverse of</b> statement cannot itself contain an <b>inverse of</b>
statement.  This means that several feature groups can be declared to be the
inverse of one feature group, e.g., </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">B inverse of A</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">C inverse of A</span><span lang="EN-US"> is acceptable.  However, chaining of inverses is not permitted,
e.g., </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">B inverse of A</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">C
inverse of B</span><span lang="EN-US"> is not acceptable.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Only feature group types without <b>inverse of </b>or
feature group types with features and <b>inverse of </b>can be extended.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature group type that is an extension of
another feature group type without an <b>inverse of </b>cannot contain an <b>inverse
of</b> statement. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The feature group type that is an extension of
another feature group type with features and <b>inverse of</b> that adds
features must have an <b>inverse of </b>to identify the feature group type
whose inverse it is.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature group declaration with an <b>inverse
of</b> statement must only reference feature group types without an <b>inverse
of</b> statement.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature group refinement may be refined to only
add property associations. In this case inclusion of the feature group type
reference is optional.</span></p>

<p class="MsoNormal"><span lang="EN-US">Two feature group types are considered to
complement each other if the following holds: </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The number of feature or feature groups
contained in the feature group and its complement must be identical;</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Each of the declared features or feature groups
in a feature group must be a pair-wise complement with that in the feature group
complement, with pairs determined by declaration order. In the case of feature
group type extensions, the feature and feature group declarations in the
extension are considered to be declared after the declarations in the feature
group type being extended;</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If both feature group types have zero features, then they are considered
to complement each other;</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Ports are pair-wise complementary if they satisfy the port
connection rules specified in Section </span><span lang="EN-US">9.2.1</span><span lang="EN-US">.  This includes appropriate port direction
and matching of data component classifier references according to classifier
matching rules (see Section </span><span lang="EN-US">9.5</span><span lang="EN-US">
legality rules </span><span lang="EN-US">(L3)</span><span lang="EN-US"> and </span><span lang="EN-US">(L4)</span><span lang="EN-US">;</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L12)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Access features are pair-wise complementary if they satisfy the
access connection rules in Section </span><span lang="EN-US">9.4</span><span lang="EN-US">.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L13)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If an <b>in </b>or <b>out </b>direction is specified as part of a
feature group declaration, then all features inside the feature group must
satisfy this direction. </span></p>

<p class="Note"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">Aggregate data ports can be modeled in AADL V2 by
a data port with a data component classifier that has data subcomponents for
each of the element ports. This replaces the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Aggregate_Data_Port</span><span lang="EN-US">
on port groups in the original AADL standard. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- Port properties defined to be <b>inherit</b>, thus can be associated with a</span></pre><pre><span lang="EN-US">-- feature group to apply to all contained ports.</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A feature group declaration represents groups of component features.
As such each feature group of a component type can represent a separate
interface to the component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A feature group of a component can be connected to another component
through a single connection declaration.  It represents a connection for each
of the feature inside the feature group.  Feature groups can contain feature
groups.  This supports nested grouping of features for different levels of the
modeled system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Within a component, the features of a feature group can be connected
to individually to subcomponents.  The members of the feature group are
declared in a feature group type declaration that is referenced by the feature group
declaration. The referenced feature group type determines the feature group compatibility
for a feature group connection.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The <b>inverse of</b> reserved words of a feature group type
declaration indicate that the feature group type represents the complement to
the referenced feature group type.  The legality of feature group connections is
affected by the complementary nature of feature groups (see Section </span><span lang="EN-US">9.5</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Features can be declared without feature group types or with feature
group types without features. They are considered to be incomplete feature
group specifications.  Feature group types can later be added in a feature
group refinement.  Features can later be inserted directly into the feature
group type or the feature group type can later be refined into feature group
types with one or more features.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"><a name="01ddd514-1654-4932-8f0f-c3b0a1f4976a" id="id_01ddd514-1654-4932-8f0f-c3b0a1f4976a" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">GPS_Interface</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">public</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">with</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> GPSLib;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature
group</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> GPSbasic_socket </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">features</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   Wakeup: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">in event port</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   Observation: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">out data port</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPSLib::position;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPSbasic_socket;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature group</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> GPSbasic_plug </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">features</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   WakeupEvent: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">out event port</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   ObservationData: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">in data port </span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">GPSLib::position;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   </span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">-- the
features must match in same order with opposite direction</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   inverse of </span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">GPSbasic_socket</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPSbasic_plug;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature group</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> MyGPS_plug</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   -- second feature group as inverse of
the original</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   -- no chaining in inverse and </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   -- no pairwise inverse references are
allowed </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   inverse of </span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">GPSbasic_socket</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
MyGPS_plug;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature group</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> GPSextended_socket </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">extends</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> GPSbasic_socket </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">features</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   Signal: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">out event port</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   Cmd: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">in data port</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPSLib::commands;  </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPSextended_socket;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">process</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
Satellite_position </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">features</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   position:   </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature group</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPSBasic_socket;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
Satellite_position;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">process</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPS_System</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">features</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   position: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature group</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">inverse
of </span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">GPSbasic_socket;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPS_System;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">system</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
Satellite</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> Satellite;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> </span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a"> Satellite.others</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">subcomponents</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   SatPos: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">process</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
Satellite_position;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   </span></span><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">MyGPS: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">process</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
GPS_System;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">connections</span></span></b></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">   satconn: </span><b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">feature group</span></b><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
Satpos.position &lt;-&gt; MyGPS.position;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end</span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">
Satellite.others;</span></span></p><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">end </span></span></b><span lang="EN-US"><span class="requality_text id_01ddd514-1654-4932-8f0f-c3b0a1f4976a">GPS_Interface;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320328"></a><a name="_Toc169684094"></a><a name="_Toc167033744"></a><a name="_Toc168661861"></a><a name="_Ref167031667"></a><a name="_Ref166489210"><span lang="EN-US">8.3<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Port</span></a><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Ports are logical connection points between components that can be
used for the transfer of control and data between threads or between a thread
and a processor or device.  Ports are directional, i.e., an output port is
connected to an input port.  Ports can pass data, events, or both.  Data
transferred through ports is typed.  From the perspective of the application
source text, data ports are accessible in the source text as data variables.
From the perspective of the application source text, event ports represent
event queues whose size is accessible.  Incoming events may trigger thread
dispatches or mode transitions, or they may simply be queued for processing by
the recipient.  From the perspective of the application source text, event data
ports represent message queues whose content can be retrieved. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The content of incoming ports are frozen at a specified time, by
default at dispatch time.  This means that the content of the port that is
accessible to the recipient does not change during the execution of a dispatch
even though the sender may send new values.  Properties specify the input and
output timing characteristics of ports. Actual event and data transfer may be
initiated by the runtime system of the execution platform or by </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime service calls in the application source text.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL distinguishes between three port categories. <i>Event data ports</i>
are ports through which data is sent and received. The arrival of data at the
destination may trigger a dispatch or a mode switch.  The data may be queued if
the destination component is busy. Event data ports effectively represent
message ports. <i>Data ports</i> are event data ports with a queue size of one
in which the newest arrival is kept. By default arrival of data at data ports
does not trigger a dispatch. Data ports effectively represent unqueued ports
that communicate state information, such as signal streams that are sampled and
processed in control loops.  <i>Event ports</i> are event data ports with empty
message content.  Event ports effectively represent discrete events in the
physical environment, such as a button push, in the computing platform, such as
a clock interrupt, or a logical discrete event, such as an alarm.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PortClassifier"><span lang="EN-US">port_spec ::=  </span></a></pre><pre style="page-break-after: avoid;"><span lang="EN-US">    <i>defining_port</i>_identifier : ( <b>in</b> | <b>out</b> | <b>in out</b> ) port_type </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">port_refinement ::=  </span></pre><pre><span lang="EN-US">    <i>defining_port</i>_identifier : <b>refined to</b> </span></pre><pre><span lang="EN-US">        ( <b>in</b> | <b>out</b> | <b>in out</b> ) port_type </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="FR">port_type ::= </span></pre><pre><b><span lang="FR">     data port</span></b><span lang="FR"> [ <i>data</i>_unique_component_classifier_reference </span></pre><pre><span lang="FR">               </span><span lang="EN-US">| <i>data_component_prototype</i>_identifier ] </span></pre><pre><span lang="EN-US">    |  <b>event data port</b> [ <i>data</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">                       | <i>data_component_prototype_</i>identifier ]</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    |  <b>event port </b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A defining port identifier must adhere to the
naming rules specified for all features (see Section 8).</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of a port refinement declaration
must also appear in a feature declaration of a component type being extended
and must refer to a port or an abstract feature.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The unique component type identifier of the data
classifier reference must be the name of a data component type. The data
implementation identifier, if specified, must be the name of a data component
implementation associated with the data component type.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier of a prototype reference,
if specified, must exist in the namespace of the component type or feature
group type that contains the feature declaration.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_48804ea4-0431-498f-a84e-e5fde493e086"><a name="48804ea4-0431-498f-a84e-e5fde493e086" id="id_48804ea4-0431-498f-a84e-e5fde493e086" class="requality_id"></a>(L1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_48804ea4-0431-498f-a84e-e5fde493e086">        
</span></span></span><span lang="EN-US"><span class="requality_text id_48804ea4-0431-498f-a84e-e5fde493e086">Ports can be declared in subprogram, thread,
thread group, process, system, processor, virtual processor, and device
component types.</span></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Data and event data ports may be incompletely
defined by not specifying the data component classifier reference or data
component implementation identifier of a data component classifier reference.
The port definition can be completed using refinement.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Data, event, and event data ports may be refined
by adding a property association. The data component classifier declared as
part of the data or event data port declaration being refined does not need to
be included in this refinement.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The port category of a port refinement must be
the same as the category of the port being refined, or the port being refined
must be an abstract feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The port direction of a port refinement must be
the same as the direction of the feature being refined.  If the feature being
refined is an abstract feature without direction, then all port directions are
acceptable.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Standard Propertie</span><span lang="EN-US">s</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="color: black;">-- Properties specifying the source text variable representing the port</span></span></pre><pre><span lang="EN-US"><span class="CODE">Source_Name: </span><b>aadl</b><span class="CODE"><b>string</b></span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre style="text-align: justify;"><span lang="EN-US">-- property indicating whether port connections are required or optional</span></pre><pre><span lang="EN-US">Required_Connection : <b>aadl</b><b>boolean</b> <b>=&gt;</b> <b>true</b>  </span></pre><pre style="text-align: justify;"><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><span lang="EN-US">-- The protocol the source text supporting the port is assumed to make use of</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre style="text-align: justify;"><span lang="EN-US">-- Optional property for device ports</span></pre><pre><span lang="EN-US">Device_Register_Address: <b>aadlinteger</b></span></pre><pre style="text-align: justify;"><span lang="EN-US">-- data port connection timing</span></pre><pre><span lang="EN-US">Timing : <b>enumeration </b>(sampled, immediate, delayed) <b>=&gt;</b> sampled  </span></pre><pre style="text-align: justify;"><span lang="EN-US">-- Input and output rate and time</span></pre><pre><span lang="EN-US">Input_Rate: Rate_Spec </span><span lang="EN-US">=&gt; ( Value_Range =&gt; 1.0 .. 1.0; Rate_Unit =&gt; PerDispatch; Rate_Distribution =&gt; Fixed; )</span><span lang="EN-US"> </span></pre><pre><span lang="EN-US">Input_Time: <b>list of </b></span><span lang="EN-US">IO_Time_Spec =&gt; (( Time =&gt; Dispatch; Offset =&gt; 0.0 ns .. 0.0 ns;))</span></pre><pre><span lang="EN-US">Output_Rate: Rate_Spec </span><span lang="EN-US">=&gt; ( Value_Range =&gt; 1.0 .. 1.0; Rate_Unit =&gt; PerDispatch; Rate_Distribution =&gt; Fixed; )</span></pre><pre><span lang="EN-US">Output_Time: <b>list of </b></span><span lang="EN-US">IO_Time_Spec =&gt; (( Time =&gt; Completion; Offset =&gt; 0.0 ns .. 0.0 ns;))</span></pre><pre style="text-align: justify;"><span lang="EN-US"><span class="HTMLPreformattedChar"><span style="color: black;">-- Port specific compute entrypoint properties for event and event data ports</span></span></span></pre><pre><span lang="FR">Compute_Entrypoint: <b>classifier </b>( subprogram classifier )</span></pre><pre><span lang="EN-US">Compute_Execution_Time: Time_Range</span></pre><pre><span lang="EN-US">Compute</span><span lang="EN-US">_Deadline: Time</span></pre><pre style="text-align: justify;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- Properties specifying binding constraints for variables representing ports</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></pre><pre><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></pre><pre style="text-align: justify;"><span class="HTMLPreformattedChar"><span lang="EN-US">-- In port queue properties</span></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Overflow_Handling_Protocol: <b>enumeration </b>(DropOldest, DropNewest, Error)</span></pre><pre><span lang="EN-US">       =&gt;<b> </b>DropOldest </span></pre><pre><span lang="EN-US">Queue_Size: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Queue_Size =&gt; 1 </span></pre><pre><span lang="EN-US">Queue_Processing_Protocol: Supported_Queue_Processing_Protocols =&gt; FIFO </span></pre><pre><span lang="EN-US">Fan_Out_Policy: <b>enumeration </b>(Broadcast, RoundRobin, Selective, OnDemand)</span></pre><pre><span lang="EN-US">Urgency: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Urgency</span></pre><pre><span lang="EN-US">Dequeued_Items: <b>aadlinteger</b> </span></pre><pre><span lang="EN-US">Dequeue_Protocol: <b>enumeration</b> ( OneItem, MultipleItems, AllItems ) =&gt; OneItem</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<h3><a name="_Toc318320329"><span lang="EN-US">8.3.1<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Port Categories</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A port specifies a logical connection point in the interface of a
component through which incoming or outgoing data and events may be passed. 
Ports may be named in connection declarations.  Ports that pass data are typed
by naming a data component classifier reference.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A data or event data port maps to a static variable in the source
text that represents the data buffer or queue.  By default the variable is
accessible by the same name as the port name. A different name mapping can be
specified with the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Name</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Text</span><span lang="EN-US"> properties.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding_Class</span><span lang="EN-US"> properties indicate the memory (or device) hardware the port resources
reside on.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Event and event data ports may dispatch a port specific </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Entrypoint</span><span lang="EN-US">.  This permits threads with multiple event or event data ports to
execute different source text sequences for events arriving at different event
ports. If specified, the port specific </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Execution_Time</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> takes precedence over those of the containing thread.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Ports are directional.  An <b>out</b> port represents output
provided by the sender, and an <b>in</b> port represents input needed by the
receiver.  An <b>in out </b>port represents both an <b>in</b> port and an <b>out</b>
port. Incoming connection(s) and outgoing connection(s) of an <b>in out</b>
port may be connected to the same component or to different components.  For a
data port, the <b>in out</b> port maps to a port variable in the source text. 
This means that the source text will overwrite the existing incoming value of
the port when writing the output value to the port variable.  The queues of
incoming event data ports and event ports may require a port variable that
holds the queue content that is frozen during the execution of a thread. In the
case of event data ports, the outgoing data in the implementation may utilize a
separate port variable.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Ports that provide output, i.e., <b>out</b> ports or <b>in out</b>
ports, are referred to as outgoing port.  Ports that provide input, i.e., <b>in</b>
ports or <b>in out</b> ports,  are referred to as incoming ports.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A port can require a connection or consider it as optional as
indicated by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Connection</span><span lang="EN-US"> property.  In the latter case it is assumed that the component with
this port can function without the port being connected.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Ports
appear to the thread as input and output buffers, accessible in source text as
port variables.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
and event data ports are used to transmit data between threads. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
ports are intended for transmission of state data such as sensor data streams. 
Therefore, no queuing is supported for data ports.  A thread can determine
whether the input buffer of an in data port has new data at this dispatch by
checking the port status through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US"> service call, which is
accessible through the port variable through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> service
call.  If no new data value has been received the old value is made available.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Event
data ports are intended for message transmission, i.e., the queuing of the
event and associated data at the port of the receiving thread. A receiving
thread can get access to one or more data element in the queue according to the
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeued_Items</span><span lang="EN-US"> properties (see Section </span><span lang="EN-US">8.3.3</span><span lang="EN-US">).  The number of queued event data
elements accessible to a thread can be determined through the port variable using
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count </span><span lang="EN-US">service call.  Individual element of the queue can be retrieved via
the port variable using the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value
</span><span lang="EN-US">service calls.  If the queue is empty the most recent
data value is available.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Event
ports are intended for event and alarm transmission, i.e., the queuing of
events at the port of the receiving thread, possibly resulting in a dispatch or
mode transition. A receiving thread can get access to one or more events in the
queue according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US"> and the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Items</span><span lang="EN-US"> property.  The number of queued events accessible to a thread can
be determined through the port variable by making a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count </span><span lang="EN-US">service
call.  <a name="_Ref177885122"></a></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
role of an aggr</span><span lang="EN-US">egate data por</span><span lang="EN-US">t
is to make a collection of data from multiple outgoing data ports available in
a t</span><span lang="EN-US">ime-consi</span><span lang="EN-US">stent manner.  Time
consistency in this context m</span><span lang="EN-US">eans tha</span><span lang="EN-US">t if a set of periodic threads is dispatched at the same t</span><span lang="EN-US">ime to ope</span><span lang="EN-US">rate on data, then the recipients
of their data see </span><span lang="EN-US">either al</span><span lang="EN-US">l
old values or all new valu</span><span lang="EN-US">es.  Thi</span><span lang="EN-US">s is accomplished by declaring a data port, whose data classifier
has an implementation with data components corresponding to the data of the
individual data ports. The functionality of an aggregate data port can be
viewed as a thread whose only role is to collect the data values from several <b>in</b>
data ports and make them available as an aggregate data record; on the
receiving side an equivalent thread takes passes on the elements of the
aggregate data record on to the respective <b>out</b> data ports of receiving
threads. The function may be optimized by mapping the data ports of the
individual threads into a data area representing the aggregate data port
variable.  This aggregate is then transferred as a single unit.</span></p>

<h3><a name="_Toc318320330"></a><a name="_Ref207751013"><span lang="EN-US">8.3.2<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Port Input and Output Timing</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data,
events, and event data arriving through incoming ports is made available to the
receiving thread, processor, or device at a specified input time.  For a data
port the input that is available through a port variable is a data value, while
for an event or event data port it can be one or more elements from the port
queue according to a specified dequeuing protocol (see Section </span><span lang="EN-US">8.3.3</span><span lang="EN-US">).  From that point on any newly
arriving data, event, or event data is not available to the receiving component
until the next dispatch, i.e., the content of an incoming port that is
accessible to the application code does not change while the thread completes its
execution.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">By
default, port input is frozen at dispatch time.  For periodic threads or
devices this means that input is sampled at fixed time intervals.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US">
property can be used to explicitly specify an input time for ports.  This can be
done for all ports by specifying the property value for the thread, or it can
be specified separately for each port.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
following property values for </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> are supported to specify the input time to be the dispatch time (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch)</span><span lang="EN-US">,
any time during execution relative to the amount of execution time from the
start (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Start</span><span lang="EN-US">) or from the completion (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion)</span><span lang="EN-US">, and the fact that no input
occurs (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoIO)</span><span lang="EN-US">:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Time</span><span lang="EN-US">: (the default value) input is frozen at dispatch time; the time
reference is clock time </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t
= 0</span><span lang="EN-US">. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Start</span><span lang="EN-US">, time range: input is frozen at a specified amount of execution
time from the beginning of execution.  The time is within the specified time
range. The time range must have positive values. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Start<sub>low</sub> ≤ c ≤ Start<sub>high</sub></span><span lang="EN-US">.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion</span><span lang="EN-US">, time range: input is frozen at a specified amount of execution
time relative to execution completion.  The time is within the specified time
range. A negative time range indicates execution time before completion. c<sub>complete</sub>
+ </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion<sub>low</sub>
≤ c ≤ </span><span lang="EN-US">c<sub>complete</sub> + </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion<sub>high</sub></span><span lang="EN-US">, where c<sub>complete</sub> represents the value of c at completion
time. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoIO</span><span lang="EN-US">: input is not frozen.  In other words, the port is excluded from
making new input available to the source program.  This allows users to specify
that a subset of ports to provide input.  The property value can be mode
specific, i.e., a port can be excluded in one mode and included in another
mode.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US">
property can have a list of values.  In this case it indicates that input is
frozen multiple times for the execution of a dispatch.  If a thread has
multiple input times specified, then the content of an incoming port is frozen
multiple times during a single dispatch.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
input may be frozen at dispatch time (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> property value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch</span><span lang="EN-US">) as
part of the underlying runtime system, or it may be frozen through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service call in the source text (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> property
value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Start</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion)</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
input of other ports that can trigger dispatch is not frozen. Input of the
remaining ports is frozen according to the specified input time.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If a
dispatch condition is specified then the logic expression determines the
combination of event and event data ports that trigger a dispatch, and whose
input is frozen as part of the dispatch. The input of other ports that can
trigger dispatch is not frozen. The input of other ports that can trigger
dispatch is not frozen.  Input of the remaining ports is frozen according to
the specified input time.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
an event port is associated with a component (including thread) containing
modes and mode transition, and the mode transition names the event port, then
the arrival of an event is a mode change request and it is processed according
to the mode switch semantics (see Sections </span><span lang="EN-US">12</span><span lang="EN-US"> and </span><span lang="EN-US">13.6</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">By
default, the output time, i.e., the time output is transmitted to connected
components, is the completion time for data ports.  By default, for event and
event data ports the output time occurs anytime during the execution through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service call.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> property can be used to explicitly specify an output time for
ports.  This can be done for all ports by specifying the property value for the
thread, or it can be specified separately for each port.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
following property values for </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> are supported to specify the output time to be the dispatch time (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch)</span><span lang="EN-US">,
any time during execution relative to the amount of execution time from the
start (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Start</span><span lang="EN-US">) or from the completion (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion) </span><span lang="EN-US">including at completion time,
the deadline (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline)</span><span lang="EN-US">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US">and the fact that no input occurs (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoIO)</span><span lang="EN-US">:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Start</span><span lang="EN-US">, time range: output is transmitted at a specified amount of
execution time relative to the beginning of execution.  The time is within the
specified time range. The time range must have positive values.</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Start<sub>low</sub> ≤ c
≤ Start<sub>high</sub></span><span lang="EN-US">.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion</span><span lang="EN-US">, time range: output is transmitted at a specified amount of
execution time relative to execution completion.  The time is within the
specified time range. A negative time range indicates execution time before
completion. c<sub>complete</sub> + </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion<sub>low</sub> ≤ c ≤ </span><span lang="EN-US">c<sub>complete</sub> + </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion<sub>high</sub></span><span lang="EN-US">, where c<sub>complete</sub>
repesents the value of c at completion time. The default is completion time
with a time range of zero, i.e., it occurs at </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c = </span><span lang="EN-US">c<sub>complete</sub>.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US">: output is transmitted at deadline time; the time reference is clock
time rather than execution time. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t = Deadline</span><span lang="EN-US">.  This allows for static
alignment of output time of one thread with the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Time</span><span lang="EN-US"> input
time of another thread with a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Offset</span><span lang="EN-US">. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoIO</span><span lang="EN-US">: output is not transmitted.  In other words, the port is excluded
from transmitting new output from the source text.  This allows users to
specify that a subset of ports to provide output.  The property value can be
mode specific, i.e., a port can be excluded in one mode and included in another
mode.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> property can have a list of values.  In this case it indicates that
output is transmitted multiple times as part of the execution of a dispatch.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The output
may be transmitted at completion time or deadline as part of the underlying
runtime system, or it may be transmitted through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service
call in the source text.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the output time of the originating port is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Completion_Time</span><span lang="EN-US"> while
the input time of the receiving port is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch</span><span lang="EN-US"> and the
sender and receiver are in the same synchronization domain, then the output is
received at the next dispatch equal to or later than the deadline.  To
accommodate the transfer the actual transfer may be initiated before the
deadline.  In the case of the connection crossing synchronization domains, the input
is received at the dispatch following the completion of the transfer.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Rate</span><span lang="EN-US">
and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Rate</span><span lang="EN-US"> properties specify the number of times per dispatch (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">perDispatch</span><span lang="EN-US">) or per second (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">perSecond</span><span lang="EN-US">) at which input and output is expected to occur at the port with
the associated property.  By default the input and output rate of ports is once
per dispatch.  The rate can be </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">fixed</span><span lang="EN-US"> or according to a distribution.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(32)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
input or output rate higher than once per dispatch indicates that multiple
inputs or multiple outputs are expected during a single dispatch. An input or
output rate lower than once per dispatch indicates that inputs or outputs are
not expected at every dispatch. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(33)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> property is specified, then the values must be consistent with the
rate.  If the rate is specified in terms of seconds and a period is specified
for the thread or device with the port, then the period value must also be
consistent with the other values.  In the case of an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> property value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoIO</span><span lang="EN-US"> the rate value does not apply.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><a name="_Ref177803918"><span lang="EN-US">Examples</span></a></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"><a name="ad0bd8dc-6d17-421d-bd28-f3d7e7673513" id="id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513" class="requality_id"></a>-- a
thread that gets input partway into execution and sends output</span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">-- before
completion.</span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">thread</span></span></b><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> TightLoop </span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">features</span></span></b></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">   sensor: </span><b><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">in data</span></b><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> </span><b><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">port</span></b><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> </span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">      {Input_Time =&gt; ((Time=&gt;</span></span><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">Start;Offset=&gt;10 us .. 15 us;));}</span></span><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> ;</span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">   actuator:</span><b><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> out data port</span></b><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> </span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">      {Output_Time =&gt; ((Time=&gt;</span></span><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">Completion;Offset=&gt;10 us .. 11 us;));}</span></span><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513"> ;</span></span></p><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">end</span></span></b><span lang="EN-US"><span class="requality_text id_ad0bd8dc-6d17-421d-bd28-f3d7e7673513">
TightLoop;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h3><a name="_Toc318320331"></a><a name="_Ref195875807"><span lang="EN-US">8.3.3<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Port Queue Processing</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(34)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Event
and event data ports can have a queue associated with them.  By default, the
incoming event ports and event data ports of threads, devices, and processors have
queues.  The output from the ultimate source of a semantic port connection is
added into this queue, if the ultimate destination component is actively
processing.  The default port queue size is 1 and can be changed by explicitly
declaring a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Size</span><span lang="EN-US"> property association for the port.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(35)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Size</span><span lang="EN-US">,
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Processing_Protocol,</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Overflow_Handling_Protocol</span><span lang="EN-US"> port properties specify queue characteristics.  If an event arrives
and the number of queued events (and any associated data) is equal to the
specified queue size, then the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Overflow_Handling_Protocol</span><span lang="EN-US"> property
determines the action. If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Overflow_Handling_Protocol</span><span lang="EN-US"> property
value is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error,</span><span lang="EN-US"> then an error occurs for the thread.  The thread can determine the
port that caused the error by calling the standard </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Status</span><span lang="EN-US">
runtime service. For </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Overflow_Handling_Protocol </span><span lang="EN-US">property
values of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DropNewest</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DropOldest,</span><span lang="EN-US"> the newly arrived or oldest event in the queue event is dropped.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(36)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Queues
will be serviced according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Processing_Protocol</span><span lang="EN-US">,</span><span lang="EN-US"> by default in a first-in, first-out order (FIFO).  When an aperiodic,
sporadic, timed, or hybrid thread declares multiple in event and event data
ports in its type that can be dispatch triggers and more than one of these
queues are nonempty, the port with the higher </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US"> property
value gets serviced first.  If several ports with the same </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US">
are non-empty, then the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Processing_Protocol</span><span lang="EN-US"> is applied across these ports and must be the same for them.  In
the case of FIFO the oldest event will be serviced (global FIFO).  It is
permitted to define and use other algorithms for picking among multiple
non-empty queues. Disciplines other than FIFO may be used for managing each
individual queue.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(37)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">By
default, one item is dequeued and made available to the receiving application through
the port variable.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US"> property specifies different dequeuing options.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OneItem:</span><span lang="EN-US"> (default) a single frozen item is dequeued and made available to
the source text unless the queue is empty. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> service
call has no effect.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AllItems:</span><span lang="EN-US"> all items that are frozen at input time are dequeued and made
available to the source text via the port variable, unless the queue is empty. 
Individual items become accessible as port variable value through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
service call.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">MultipleItems:</span><span lang="EN-US"> multiple items can be dequeued one at a time from the frozen queue
and made available to the source text via the port variable.  One item is
dequeued and its value made available via the port variable with each </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
service call.  Any items not dequeued remain in the queue and are available for
the next dispatch.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(38)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US">
service call indicates how many items have been made available to the source
text.  A value of zero indicates that no new item is available via a data port,
event port, or event port variable.  A value greater than zero indicates that
one or more fresh values are available.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(39)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
port may have a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fan_Out_Policy</span><span lang="EN-US"> property.  This property indicates how the content is transferred
through outgoing connections. The content can be passed to all recipients (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Broadcast</span><span lang="EN-US">),
or the output is distributed evenly to the recipients (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">RoundRobin</span><span lang="EN-US">), to one
recipient based on content/routing information (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Selective</span><span lang="EN-US">), or  to
the next recipient ready to be dispatched (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OnDemand</span><span lang="EN-US">).  </span><span class="HTMLPreformattedChar"><span lang="EN-US">Broadcast</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">,
</span><span lang="EN-US">RoundRobin</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">,
and </span><span lang="EN-US">Selective</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
pass on data and events without queuing it, while </span><span lang="EN-US">OnDemand</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
requires a queue that is serviced by the recipients.  The size of the queue and
other queue characteristics are specified as properties of the port with the
fan-out.</span></span><span lang="EN-US">  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(40)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
event or event data port with a fan-out policy of </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
</span></span><span lang="EN-US">allows us to model a queue being serviced by
multiple recipients.  For example, a queue on an incoming thread group port
that is connected to multiple threads allows sender output to be queued in a
single queue and be serviced by multiple threads (see also Section </span><span lang="EN-US">9.2.6</span><span lang="EN-US">). </span></p>

<h3><a name="_Toc318320332"></a><a name="_Toc208652759"></a><a name="_Toc208658079"></a><a name="_Toc209171600"></a><a name="_Toc209177886"></a><a name="_Toc209239619"></a><a name="_Toc209243965"></a><a name="_Toc209354875"></a><a name="_Toc209421341"></a><span lang="EN-US">8.3.4<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Events and Subprograms</span></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(41)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Any
subprogram, thread, device, or processor with an outgoing event port, i.e., <b>out
event</b>, <b>out event data</b>, <b>in out event</b>, <b>in out event data</b>,
can be the source of an event.  During a single dispatch execution, a thread
may raise zero or more events and transmit zero or more event data through </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime service calls.  It may also raise an event at completion
through its predeclared </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete</span><span lang="EN-US"> port (see Section </span><span lang="EN-US">5.4</span><span lang="EN-US">) and transmit event data through event data ports that contain new
values that have not been transmitted through explicit </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime
service calls.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(42)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Events
are received through <b>in event</b>, <b>in out event</b>, <b>in event data</b>,
and <b>in out event data</b> ports, i.e., incoming ports.  If such an incoming
port is associated with a thread and the thread does not contain a mode
transition naming the port, then the event or event data arriving at this port
is added to the queue of the port.  If the thread is aperiodic or sporadic and
does not have its </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch</span><span lang="EN-US"> event connected, then each event and event data arriving and queued
at any incoming ports of the thread results in a separate request for thread
dispatch.</span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Examples</span></p>

<pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672"><a name="358f4f4b-f1bf-4632-9f04-14f90e4b2672" id="id_358f4f4b-f1bf-4632-9f04-14f90e4b2672" class="requality_id"></a>package </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Patterns</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">public</span></span></b></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">thread</span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672"> Voter</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">features</span></span></b></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Input: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">in data port </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">[3]; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Output: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">out data port</span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">end </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Voter;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">thread</span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672"> Processing</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">features</span></span></b></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Input: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">in data port</span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Result: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">out data port</span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">end </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Processing;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">thread group </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Redundant_Processing</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">features</span></span></b></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Input: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">in data port</span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Result: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">out data port</span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">end </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Redundant_Processing;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">thread group implementation</span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672"> Redundant_Processing.basic</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">subcomponents</span></span></b></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">processing: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">thread </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Processing</span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672"> </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">[3]; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">voting: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">thread </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">voter; </span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">connections</span></span></b></pre><pre><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  voteconn: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">port </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">processing.Result -&gt; voting.Input {Connection_Pattern =&gt; One_To_One;};</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">  procconn: </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">port </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Input -&gt; processing.Input;</span></span></pre><pre><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672"> recon:  </span><b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">port </span></b><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">voting.Output -&gt; Result;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">end </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Redundant_Processing.basic;</span></span></pre><pre><b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">end </span></span></b><span lang="EN-US"><span class="requality_text id_358f4f4b-f1bf-4632-9f04-14f90e4b2672">Patterns;</span></span></pre>

<h3><a name="_Toc318320333"></a><a name="_Toc208652761"></a><a name="_Toc208658081"></a><a name="_Toc209171602"></a><a name="_Toc209177888"></a><a name="_Toc209239621"></a><a name="_Toc209243967"></a><a name="_Toc209354877"></a><a name="_Toc209421343"></a><span lang="EN-US">8.3.5<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Runtime Support For Ports</span></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(43)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
application program interface for the following services is defined in the
applicable source language annex of this standard. They are callable from
within the source text.</span></p>

<p class="NumberedParagraph"><a name="PortRuntime"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(44)<span style="font: 7pt &quot;Times New Roman&quot;;"> 
</span></span><span lang="EN-US">A </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime service allows the
source text of a thread to explicitly cause events, event data, or data to be
transmitted through outgoing ports to receiver ports.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service takes a port list parameter that specifies for which ports
the transmission is initiated. The send on all ports is considered to occur
logically simultaneously.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> is a non-blocking service.  An exception is raised if the send
fails with exception codes indicating the failing port and type of failure. </span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Send_Output</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">OutputPorts:<b> in parameter</b> &lt;implementation-dependent port list&gt;;</span></pre><pre><span lang="EN-US">      -- List of ports whose output is transferred</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">SendException: <b>out event data</b>; -- exception if send fails to complete</span></pre><pre><span lang="EN-US">    <b>end </b>Send_Output;</span></pre>

<p class="Note"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NOTES: </span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime service replaces the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Event</span><span lang="EN-US"> service 
in the original AADL standard<i>.  </i></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(45)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Put_Value</span><span lang="EN-US">
runtime service allows the source text of a thread to supply a data value to a
port variable.  This data value will be transmitted at the next </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> call in the source text or by the runtime system at completion time
or deadline.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Put_Value</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DataValue: <b>in parameter</b>; -- value to be stored</span></pre><pre><span lang="EN-US">      DataSize: <b>in parameter</b>;  - size in bytes (optional)</span></pre><pre><span lang="EN-US">    <b>end </b>Put_Value;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(46)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> runtime service allows the source text of a thread to explicitly
request port input on its incoming ports to be frozen and made accessible
through the port variables.  Any previous content of the port variable is
overwritten, i.e., any previous queue content not processed by </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
calls is discarded.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service takes a parameter that specifies for which ports the input
is frozen.  Newly arriving data may be queued, but does not affect the input
that thread has access to (see Section </span><span lang="EN-US">9.1</span><span lang="EN-US">).  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> is a
non-blocking service. </span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Receive_Input</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">InputPorts: <b>in parameter</b> &lt;implementation-dependent port list&gt;;</span></pre><pre><span lang="EN-US">      -- List of ports whose input is frozen</span></pre><pre><span lang="EN-US">    <b>end </b>Receive_Input;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(47)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
the case of data ports the value is made available without requiring a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
call.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US"> will return the value 1 if the value has been updated, i.e., is <i>fresh</i>. 
If the data is not fresh, the value zero is returned.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(48)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
the case of event data ports each data value is retrieved from the queue
through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call and made available as port variable value.  Subsequent calls
to </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> or direct access of the port variable will return this value until
the next </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(49)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
case of event ports and event data ports the queue is available to the thread,
i.e., </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US"> will return the size of the queue.  If the queue size is greater
than one the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeued_Items</span><span lang="EN-US"> property and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US"> property may specify that more than one element is made accessible
to the source text of a thread. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(50)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
access the current value of a port variable.  The service call returns the data
value.  Repeated calls to </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> result in the same value to be returned, unless the current value
is updated through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> call or a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call. </span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Get_Value</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DataValue: <b>out parameter</b>; -- value being retrieved</span></pre><pre><span lang="EN-US">      DataSize: <b>in parameter</b>;  - size in bytes (optional)</span></pre><pre><span lang="EN-US">    <b>end </b>Get_Value;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(51)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
determine whether a new data value is available on a port variable, and in case
of queued event and event data ports, who many elements are available to the
thread in the queue. A count of zero indicates that no new data value is
available. </span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Get_Count</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">CountValue: <b>out parameter </b>BaseTypes::Integer; -- content count of port variable</span></pre><pre><span lang="EN-US">    <b>end </b>Get_Count;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(52)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
get access to the next queued element of a port variable as the current value.
A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoValue</span><span lang="EN-US"> exception is raised if no more values are available.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Next_Value</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DataValue: <b>out parameter</b>; -- value being retrieved</span></pre><pre><span lang="EN-US">      DataSize: <b>in parameter</b>;  -- size in bytes (optional)</span></pre><pre><span lang="EN-US">      NoValue: <b>out event port</b>; -- exception if no value is available</span></pre><pre><span lang="EN-US">    <b>end </b>Next_Value;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(53)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Updated</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
determine whether input has been transmitted to a port since the last </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service call.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Updated</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>in parameter</b> &lt;implementation-dependent port reference&gt;;</span></pre><pre><span lang="EN-US">      -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">FreshFlag: <b>out parameter </b>BaseTypes::Boolean; -- true if new arrivals </span></pre><pre><span lang="EN-US">    <b>end </b>Updated;</span></pre>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(54)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
each data or event data port declared for a thread, a system implementation
method must provide sufficient buffer space within the associated binary image
to unmarshall the value of the data type. Adequate buffer space must be
allocated to store a queue of the specified size for each event data port.  The
applicable source language annex of this standard defines data variable
declarations that correspond  to the data or event data features. Buffer
variables may be allocated statically as part of the source text data
declarations.  Alternatively, buffer variables may be allocated dynamically
while the process is loading or during thread initialization.  A method of
implementing systems may require the data declarations to appear within source files
that have been specified in the source text property.  In some implementations,
these declarations may be automatically generated for inclusion in the final
set of source text.  A method of implementing systems may allow direct
visibility to the buffer variables. Runtime service calls may be provided to
access the buffer variables. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(55)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
type mark used in the source variable declaration must match the type name of
the port data component type.  Language-specific annexes to this standard may
specify restrictions on the form of a source variable declaration to facilitate
verification of compliance with this rule.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(56)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
each event or event data port declared for a thread, a method of implementing
the system must provide a source name that can be used to refer to that event
within source text.  The applicable source language annex of this standard
defines this name and defines the source constructs used to declare this name
within the associated source text.  A method of implementing systems may
require such declarations to appear within source files that have been
specified in the source text property.  In some implementations, these
declarations may be automatically generated for inclusion in the final set of
source text.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(57)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
any source text associated with a software component contains a runtime service
call that operates on an event, then the enumeration value used in that service
call must have a corresponding event feature declared for that component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(58)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of processing specifications is permitted to use non-standard property definitions
and associations to define alternative queuing disciplines.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(59)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementing systems is permitted to optimize the number of port
variables necessary to perform the transmission of data between ports as long
as the semantics of such connections are maintained.  For example, the source
text variable representing an out data port and the source text variable
representing the connected in data port may be mapped to the same memory
location provided their execution lifespan does not overlap.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"><a name="c8cb6e3e-4663-401a-9818-eebd82940213" id="id_c8cb6e3e-4663-401a-9818-eebd82940213" class="requality_id"></a>package</span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> Nav_Types </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">public</span></b></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">data</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> GPS </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">properties</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Source_data_Size =&gt; 30 Bytes; </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> GPS;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">data</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> INS </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">properties</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Source_data_Size =&gt; 20 Bytes; </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> INS;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">data</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> Position_ECEF </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">properties</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Source_data_Size =&gt; 30 Bytes; </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> Position_ECEF;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">data</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> Position_NED </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">properties</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Source_data_Size =&gt; 30 Bytes; </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end </span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">Position_NED;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end</span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Nav_Types;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> </span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">package </span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">Navigation</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">public</span></span></b></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">process</span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Blended_Navigation </span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">features</span></span></b></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   GPS_Data : </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">in data port</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Nav_Types::GPS;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   INS_Data : </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">in data port</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Nav_Types::INS;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   Position_ECEF : </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">out data port</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Nav_Types::Position_ECEF;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   Position_NED : </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">out data port</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Nav_Types::Position_NED;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">properties</span></span></b></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   -- the input rate of GPS is twice that
of INS   </span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   Input_Rate =&gt; ( Value_Range =&gt; 50
.. 50; </span></span><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">Rate_Unit =&gt; </span></span><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">perSecond
, Rate_Distribution =&gt; Fixed ) </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">applies to </span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">GPS_Data;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   Input_Rate =&gt; (Value_Range =&gt; 100
.. 100; </span></span><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">Rate_Unit =&gt; </span></span><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">perSecond
, Rate_Distribution =&gt; Fixed ) </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">applies to </span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">INS_Data;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end</span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Blended_Navigation;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> </span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">process</span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">implementation</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Blended_Navigation.Simple </span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">subcomponents</span></span></b></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   Integrate :</span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213"> thread</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">; </span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">   Navigate : </span><b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">thread</span></b><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end</span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">
Blended_Navigation.Simple;</span></span></p><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">end </span></span></b><span lang="EN-US"><span class="requality_text id_c8cb6e3e-4663-401a-9818-eebd82940213">Navigation;</span></span></p>

<p class="MsoPlainText"><span class="CODE"><span lang="EN-US"> </span></span></p>

<h2 style="margin-top: 0cm;"><a name="_Ref56412632"></a><a name="_Toc86725673"></a><a name="_Toc86220710"></a><a name="_Toc86220243"></a><a name="_Toc86219865"></a><a name="_Toc86219760"></a><a name="_Toc79294995"></a><a name="_Ref71735231"></a><a name="_Toc318320334"></a><a name="_Toc169684096"></a><a name="_Toc167033746"></a><a name="_Toc168661863"></a><a name="_Ref166038995"><span lang="EN-US">8.4<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Subprogram and Subprogram Group Access</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprograms and subprogram groups can be made accessible to other
components. Components can declare that they require access to subprograms and
subprogram groups. Components may provide access to their subprograms and
subprogram groups.  Subprogram access is used to model binding of a subprogram
call (local or remote) to the subprogram instance being called.  </span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="SubprogramAccess"></a><a name="SubprogramFeature"><span lang="EN-US">-- The requires and provides subprogram access subclause</span></a></pre><pre><span lang="EN-US">subprogram_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_subprogram_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>subprogram</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><i><span lang="EN-US">subprogram</span></i><span lang="EN-US">_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subprogram_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>subprogram</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">-- The requires and provides subprogram group access subclause</span></pre><pre><span lang="EN-US">subprogram_group_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_subprogram_group_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>subprogram group</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram_group</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><i><span lang="EN-US">subprogram_group</span></i><span lang="EN-US">_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subprogram_group_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>subprogram group</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram_group</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_da197059-8637-4533-ab9d-1f3f02ff5ab0"><a name="da197059-8637-4533-ab9d-1f3f02ff5ab0" id="id_da197059-8637-4533-ab9d-1f3f02ff5ab0" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_da197059-8637-4533-ab9d-1f3f02ff5ab0">       
</span></span></span><span lang="EN-US"><span class="requality_text id_da197059-8637-4533-ab9d-1f3f02ff5ab0">The defining identifier of a provides or
requires subprogram or subprogram group access declaration must be unique
within the namespace of the component type where the subcomponent access is
declared.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of a provides or
requires subprogram or subprogram group refinement must exist as a defining
identifier of a provides or requires subprogram or subprogram group or an
abstract feature in the namespace of the component type being extended.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The component type identifier or component
implementation name of a subprogram or subprogram group access classifier
reference, if present, must exist in the package namespace.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier of a subprogram or
subprogram group access classifier reference, if present, must exist in the
namespace of the classifier that contains the access declaration.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Legality Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a subprogram access refers to a component
classifier or a component prototype, then the category of the classifier or
prototype must be <b>subprogram</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a subprogram group access refers to a
component classifier or a component prototype, then the category of the
classifier or prototype must be <b>subprogram group</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An abstract feature can be refined into a
subprogram access or a subprogram group access. In this case, the abstract
feature must not have a direction specified.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A subprogram or subprogram group access
declaration that does not specify a component classifier reference is
incomplete.  Such a reference can be added in a subprogram or subprogram group access
refinement declaration.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A subprogram or subprogram group access
declaration may be refined by adding a property association. Inclusion of the
component classifier reference is optional.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A provides subprogram access cannot be refined
to a requires subprogram access and a requires subprogram access cannot be
refined to a provides subprogram access. Similarly, a provides subprogram group
access cannot be refined to a requires subprogram group access and a requires
subprogram group access cannot be refined to a provides subprogram group
access.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">A <i>provides subprogram access</i>
feature indicates that a subprogram is made available to be referenced.  A
project may enforce a consistency rule that a subprogram access connection
connects this feature to directly a subprogram subcomponent, or indirectly via
a <i>requires subprogram (group) access</i> or <i>provides subprogram (group)
access</i>.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">-- Subprogram call rate for subprogram access</span></pre><pre><span lang="EN-US">Subprogram_Call_Rate: Rate_Spec </span><span lang="EN-US">=&gt; ( Value_Range =&gt; 1.0 .. 1.0; Rate_Unit =&gt; PerDispatch; Rate_Distribution =&gt; Fixed; )</span></pre><pre><span lang="EN-US">Queue_Size: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Queue_Size =&gt; 1 </span></pre><pre><span lang="EN-US">Queue_Processing_Protocol: Supported_Queue_Processing_Protocols =&gt; FIFO </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Overflow_Handling_Protocol: <b>enumeration </b>(DropOldest, DropNewest, Error)</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">       =&gt;<b> </b>DropOldest </span></pre><pre><span lang="EN-US">Urgency: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Urgency</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>required subprogram (group) access</i> declaration indicates
that a component requires access to a externally declared subprogram (group). 
Required subprogram (group) accesses are resolved to subprogram (group)
subcomponents through access connection declarations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>provides subprogram (group) access</i> declaration indicates
that a component provides access to a subprogram (group) subcomponent contained
in the component.  Provided subprogram (group) accesses can be used to resolve
required subprogram (group) accesses.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram that is accessed by more than one component is shared
and must be reentrant.  The shared subprogram may be called by multiple
threads.  This may result in concurrent access to shared data components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a different thread provides access to a subprogram then the call
is remote, i.e., executed by the thread with the provides subprogram access
feature. Otherwise the call is a local call, i.e., executed by the calling
thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In case of a remote subprogram call, the requesting thread calls a
local proxy that carries out the service request.  The proxy may marshall and
unmarshall the parameters as necessary.  The execution time of the client proxy
is determined by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Client_Subprogram_Execution_Time
</span><span lang="EN-US">property.  The actual call results in communicating the
subprogram execution request to the remote thread.  While the call is in
progress, the calling thread is blocked.  Upon completion of the remote
subprogram execution and return of results, the calling thread resumes
execution by entering the ready state.  A semi-synchronous remote call may be
supported where the calling thread may issue the call and wait for the result
at a later time by calling </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Result
</span><span lang="EN-US">(see</span><span lang="EN-US"> Section </span><span lang="EN-US">5.4.8</span><span lang="EN-US">).  In this case the caller may issue
multiple remote calls to be executed concurrently.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If the called subprogram raises events or event data and the
subprogram call is a remote call, then the raised event in the subprogram is
mapped to the corresponding event or event data port of the caller subprogram
proxy.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Each provides subprogram access feature of a thread that represents
an entrypoint to a remotely callable code sequence in the source text.  A request
for execution of such a subprogram is a dispatch request to the thread
containing the subprogram.  Requests for execution of subprograms may be queued
if the thread is already executing a dispatch request.  A thread can have
multiple subprogram entrypoints, expressed by multiple subprogram access feature
declarations.  Only one of these subprograms may be executed per thread
dispatch.  Queuing and queue servicing follows the semantics of event port
queues.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Execution of subprogram calls may get blocked for two reasons.  A
call may get blocked if the call is remote to a thread that services calls and
it is currently executing a dispatch, or it may get blocked because the called
subprogram operates in a shared data component. This is the case, if the called
subprogram is a <i>provides subprogram (group) access</i> feature of a data
component that itself has shared access, i.e., is an access method of a data
object, or if a shared data component is accessible to the subprogram through a
requires data access feature of the subprogram. In the former case the thread
servicing the calls assures mutual exclusion, while other remote calls to
subprograms of the thread are queued.  In the latter case, concurrent access to
the data component is assured to be mutually exclusive according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Concurrency_Control_Protocol</span><span lang="EN-US"> property value and realized through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource</span><span lang="EN-US"> service
call in the source text, while other mutually exclusive access attempts to shared
data components are queued.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Call_Rate</span><span lang="EN-US"> specifies the
number of times per dispatch or per second at which a subprogram is called. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"><a name="923eedbe-edbe-44bd-afa6-870fed85550e" id="id_923eedbe-edbe-44bd-afa6-870fed85550e" class="requality_id"></a>-- a
remote procedure call from one thread to another thread</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">package
</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">RemoteCallExample</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">public</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">system </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> simple</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">simple;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">system
implementation</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> simple.impl</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subcomponents</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   A: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller_P.i;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   B: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> remote_P.i;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">connections</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   AtoB: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> A.DoCalc
-&gt; B.DoCalc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
simple.impl;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> remote_P</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   DoCalc: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">provides subprogram access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
Calc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> remote_P;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process implementation </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">remote_P.i</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subcomponents</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   t1: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">thread</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> Remote;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   -- other subcomponent declarations</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">connections</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   t1conn: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> t1.MyCalc
-&gt; DoCalc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> remote_P.i;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">thread</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
Remote</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   MyCalc: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">provides subprogram access </span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">Calc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
Remote;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller_P</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   DoCalc: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">requires subprogram access </span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">Calc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller_P;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller_P.i</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subcomponents</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   Q: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">thread</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">connections</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   calcconn: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> DoCalc
-&gt; Q.MyCalc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller_P.i;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">thread</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   MyCalc: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">requires subprogram access </span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">Calc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> caller;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">Calc</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">Calc;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">RemoteCallExample;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">-- A Printer Server Example</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">package</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> PrinterServerExample</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">public</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   process</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
printers</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      printonServer: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">provides subprogram
access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> print;</span></span><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      mainPrinter: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in event</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">port</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      backupPrinter: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in event</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">port</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
printers;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> printers.threaded</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   subcomponents</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      A : </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">thread</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> printer </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in
modes</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> ( modeA );</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      B : </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">thread</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> printer </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in
modes</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> ( modeB );</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="text-indent: 12pt;"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">connections
</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="text-indent: 12pt;"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">    printtoA: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram
access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> A.print -&gt;</span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></b></span><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">printonServer </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in
modes </span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">(modeA);</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText" style="text-indent: 12pt;"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">    printtoB: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram
access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> B.print -&gt;</span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></b></span><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">printonServer </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in
modes </span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">(modeB);</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  modes</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">modeA:
</span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">initial mode</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      modeB: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">mode</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">     modeA -[ backupPrinter ]-&gt; modeB;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">     modeB -[ mainPrinter ]-&gt; modeA;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
printers.threaded; </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   thread</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
printer</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      print : </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">provides subprogram
access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> print;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
printer;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   subprogram</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> print</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   features</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">      filetoprint: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">in</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">parameter</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
file;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   end</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">
print;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">data</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> file</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> file;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> application</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">features</span></b></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">    print: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">provides subprogram access </span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">print;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  system </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">ApplicationSystem</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  end </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">ApplicationSystem;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> </span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> ApplicationSystem.default</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  subcomponents</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   app: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> Application;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   printserver: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">process</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> Printers.threaded</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  connections</span></span></b></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">   appconn: </span><b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">subprogram access</span></b><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e"> printserver.printonServer
-&gt; app.print;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">  end </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">ApplicationSystem.default;</span></span></p><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">end </span></span></b><span lang="EN-US"><span class="requality_text id_923eedbe-edbe-44bd-afa6-870fed85550e">PrinterServerExample;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320335"></a><a name="_Toc169684097"></a><a name="_Toc167033747"></a><a name="_Toc168661864"><span lang="EN-US">8.5<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Subprogram Parameters</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Subprogram parameter declarations represent data values that can be passed
into and out of subprograms.  Parameters are typed with a data classifier
reference representing the data type.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="Parameter"><span lang="EN-US">parameter_spec ::=  </span></a></pre><pre><span lang="EN-US">    <i>defining_parameter</i>_identifier : </span></pre><pre><span lang="EN-US">        ( <b>in</b> | <b>out</b> | <b>in out</b> ) <b>parameter</b> </span></pre><pre><span lang="EN-US">        [ <i>data</i>_unique_component_classifier_reference |</span></pre><pre><span lang="EN-US">          <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">parameter_refinement ::=  </span></pre><pre><span lang="EN-US">    <i>defining_parameter</i>_identifier : <b>refined to</b> </span></pre><pre><span lang="EN-US">        ( <b>in</b> | <b>out</b> | <b>in out</b> ) <b>parameter</b> </span></pre><pre><span lang="EN-US">        [ <i>data</i>_unique_component_classifier_reference |</span></pre><pre><span lang="EN-US">          <i>prototype_</i>identifier </span><span lang="EN-US">]</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_67cc48e4-7c5a-4de8-b9d8-33173be982ad"><a name="67cc48e4-7c5a-4de8-b9d8-33173be982ad" id="id_67cc48e4-7c5a-4de8-b9d8-33173be982ad" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_67cc48e4-7c5a-4de8-b9d8-33173be982ad">       
</span></span></span><span lang="EN-US"><span class="requality_text id_67cc48e4-7c5a-4de8-b9d8-33173be982ad">The defining identifier of a parameter must be
unique within the namespace of the subprogram type containing the parameter
declaration.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining parameter identifier of a parameter
refinement declaration must also appear in a feature declaration of a component
type being extended and must refer to a parameter or an abstract feature.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The data classifier reference must refer to a
data component type or a data component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier, if present, must exist
in the namespace of the subprogram classifier that contains the parameter
declaration.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Parameters can be declared for subprogram
component types.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A parameter declaration that does not specify a
data classifier reference is incomplete.  Such a reference can be added in a
parameter refinement declaration.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A parameter declaration may be refined by adding
a property association. Inclusion of the data classifier reference is optional.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The parameter direction of a parameter
refinement must be the same as the direction of the feature being refined.  If
the feature being refined is an abstract feature without direction, then all
parameter directions are acceptable.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Standard
Propertie</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">s</span></p>

<pre style="page-break-after: avoid;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="color: black;">-- Properties specifying the source text representation of the parameter</span></span></pre><pre><span class="CODE"><span lang="EN-US">Source_Name: </span></span><b><span lang="EN-US">aadl</span></b><span class="CODE"><b><span lang="EN-US">string</span></b></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A subprogram parameter specifies the data that are passed into and
out of a subprogram.  The data type specified for the parameter and the data
type of the actual data passed to a subprogram must be compatible according to
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <b>in out</b> parameter declaration represents a parameter whose
value is passed in and returned by value.  Parameters passed by reference are
modeled using <b>requires data access</b>.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Ref165956107"></a><a name="_Ref149981884"></a><a name="_Toc86725674"></a><a name="_Toc86220711"></a><a name="_Toc86220244"></a><a name="_Toc86219866"></a><a name="_Toc86219761"></a><a name="_Toc79294996"></a><a name="_Toc318320336"></a><a name="_Toc169684098"></a><a name="_Toc167033748"></a><a name="_Toc168661865"><span lang="EN-US">8.6<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Data Component Access</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Data component access is used to model shared data.  Data components
can be made accessible outside their containment hierarchy. Components can
declare that they require access to externally declared data components.
Components may provide access to their data components.     </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The use of component access for data components is illustrated in </span><span lang="EN-US">Figure 12</span><span lang="EN-US">.  Data2, Thread1, and Thread2 are
subcomponents of a process implementation.  Thread1 contains a data
subcomponent called Data1.  Data1 is made accessible outside Thread1 through a <b>provides
data access</b> feature declaration in the thread type of Thread1.  It is being
accessed by Thread2 as expressed by a <b>requires data access</b> feature
declaration in the thread type of Thread2.  Thread1 accesses data component
Data2. </span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="512" height="162" src="imgs/image024.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320421"></a><a name="_Toc167033811"></a><a name="_Ref171678655"><span lang="EN-US">Figure </span></a><span lang="EN-US">12</span><span lang="EN-US"> Containment Hierarchy and Shared Access</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="DataAccess"><span lang="EN-US">-- The requires and provides subcomponent access subclause</span></a></pre><pre><span lang="EN-US">data_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_data_component_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>data</b> <b>access</b> </span></pre><pre><span lang="EN-US">       [ <i>data</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">data_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>data_component_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>data</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>data</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>prototype</i>_identifier ]</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_e3557a93-967f-4e68-a2ef-0be2386328db"><a name="e3557a93-967f-4e68-a2ef-0be2386328db" id="id_e3557a93-967f-4e68-a2ef-0be2386328db" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_e3557a93-967f-4e68-a2ef-0be2386328db">       
</span></span></span><span lang="EN-US"><span class="requality_text id_e3557a93-967f-4e68-a2ef-0be2386328db">The defining identifier of a provides or
requires data access declaration must be unique within the namespace of the
component type where the data access is declared.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of a provides or
requires data access refinement must exist as a defining identifier of a
provides or requires data access or as a defining identifier of an abstract
feature in the namespace of the component type being extended.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The component type identifier or component
implementation name of a data access classifier reference must exist in the
package namespace.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier, if present, must exist
in the namespace of the classifier that contains the data access declaration.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Legality Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a data access refers to a component
classifier or a component prototype, then the category of the classifier or
prototype must be of category <b>data</b>. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A data access declaration may be refined by refining
the data classifier, by adding a property association, or by doing both. If the
refinement only adds a property association the classifier reference is
optional.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A provides data access cannot be refined to a
requires data access and a requires data access cannot be refined to a provides
data access.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An abstract feature can be refined into a data
access. In this case, the abstract feature must not have a direction specified. 
</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Consistency Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">A data access declaration that does not
specify a data classifier reference is incomplete.  Such a reference can be
added in a data access refinement declaration.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C2)</span><span lang="EN-US">If the source code of a component does
access shared data, then the component type declaration must specify a requires
data access declaration.  In other words, for all components that access shared
data their component type declaration must reflect that fact.</span></p>

<p class="ConsistencyRule"><span lang="EN-US">(C3)</span><span lang="EN-US">A data
access refinement may refine an abstract feature declaration.  If the abstract
feature declaration specifies a direction of <b>in</b>, then the access right
of the data access must be read-only. If the direction is <b>out</b>, then the
access right of the data access must be write-only.  If the abstract feature
does not have a specified direction, then any access right is acceptable.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Access_Right : Access_Rights =&gt; read_write  </span></pre><pre style="text-align: justify;"><span lang="EN-US">-- access time range for data access</span></pre><pre><span lang="EN-US">Access_Time: <b>record </b>(</span></pre><pre><span lang="EN-US">    First: <b> </b></span><span lang="EN-US">IO_Time_Spec ;</span></pre><pre><span lang="EN-US">    Last: IO_Time_Spec ; )</span></pre><pre><span lang="EN-US">    =&gt; ( First =&gt;(Time =&gt; Start; Offset =&gt; 0.0 ns .. 0.0 ns;);</span></pre><pre><span lang="EN-US">      Last =&gt; (Time =&gt; Completion; Offset =&gt; 0.0 ns .. 0.0 ns;); )</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>requires data access</i> declaration in the component type indicates
that a component requires access to a component declared external to the
component.  Required data accesses are resolved to actual data subcomponents
through access connection declarations.  For data components different forms of
required access, such as read-only access, are specified by a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property. Read-only access can also be specified through a
directional access connection from the data component to the <i>requires data
access </i>feature, while write-only access is specified through a directional
access connection to the data component. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>provides data access</i> declaration in the component type
indicates that a subcomponent provides access to a data component contained in
the component.  Provided data accesses can be used to resolve required
subcomponent access.  For data and bus components different forms of provided
access, such as read-only access, are specified by a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property
or be directional access connections. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a data access feature is a refinement of an abstract feature,
then the direction of the abstract feature, if specified, imposes a restriction
on the data flow, i.e., <b>in </b>implies read-only, and <b>out </b>implies
write-only.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Shared data may be accessed by multiple threads.  Such potential
concurrent access is controlled according to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Concurrency_Control_Protocol</span><span lang="EN-US"> property.    </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Time</span><span lang="EN-US"> specifies the time range over which a component has access to a
shared data component. By default access is required for the duration of the
component execution.  The value of a shared data component is read or written
through the use of a data variable that represents the shared data component,
or through </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Put_Value</span><span lang="EN-US"> service calls.  Write access immediately updates the shared data
component.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"><a name="d2cf82fc-6297-471c-93c6-b5e08484f906" id="id_d2cf82fc-6297-471c-93c6-b5e08484f906" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">Example</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">public</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">system </span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">simple</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end </span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">simple;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">system
implementation</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> simple.impl</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">subcomponents</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   A: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">process</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> pp.i;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   B: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">process</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> qq.i;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">connections</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">data access</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> A.dataset -&gt; B.Reqdataset;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">
simple.impl;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">process</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> pp</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">features</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   Dataset: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">provides data access</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">
dataset_type;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> pp;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">process implementation </span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">pp.i</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">subcomponents</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   Share1: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">data</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> dataset_type;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   -- other subcomponent declarations</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">connections</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">data access</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> Share1 &lt;-&gt;
Dataset;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> pp.i;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">process</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> qq</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">features</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   Reqdataset: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">requires data access </span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">dataset_type;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> qq;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> qq.i</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">subcomponents</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   Q: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">thread</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> rr;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">connections</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">data access</span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> Reqdataset &lt;-&gt;
Q.Req1;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> qq.i;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">thread</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> rr</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">features</span></span></b></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">   Req1: </span><b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">requires data access </span></b><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">dataset_type;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> rr;</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906"> </span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">data </span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">dataset_type</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end </span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">dataset_type</span></span></p><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">end </span></span></b><span lang="EN-US"><span class="requality_text id_d2cf82fc-6297-471c-93c6-b5e08484f906">Example;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320337"></a><a name="_Toc169684099"></a><a name="_Toc167033749"></a><a name="_Toc168661866"><span lang="EN-US">8.7<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Bus Component Access</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Bus components can be made accessible to other components.
Components can declare that they require access to externally declared buses.
Components may provide access to their buses. Bus access is used to model
connectivity of execution platform components through buses. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Figure 13</span><span lang="EN-US"> illustrates the use of a shared
bus.  Bus1 provides the connection between Processor1, Memory1, and Device1. 
In addition, the bus is being made accessible outside System1.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="486" height="152" src="imgs/image025.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320422"></a><a name="_Toc167033812"></a><a name="_Ref138700458"><span lang="EN-US">Figure </span></a><span lang="EN-US">13</span><span lang="EN-US"> Shared
Bus Access</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="BusAccess"></a><a name="SubcomponentAccess"><span lang="EN-US">-- The requires and provides bus access subclause</span></a></pre><pre><span lang="EN-US">bus_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_bus_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>bus</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>bus</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype</i>_identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">bus_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>bus_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>bus</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>bus</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>prototype</i>_identifier ]</span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Naming Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_6ddb443b-ba31-4eb3-b48e-baa930a5aa29"><a name="6ddb443b-ba31-4eb3-b48e-baa930a5aa29" id="id_6ddb443b-ba31-4eb3-b48e-baa930a5aa29" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_6ddb443b-ba31-4eb3-b48e-baa930a5aa29">       
</span></span></span><span lang="EN-US"><span class="requality_text id_6ddb443b-ba31-4eb3-b48e-baa930a5aa29">The defining identifier of a provides or
requires bus access declaration must be unique within the namespace of the
component type where the bus access is declared.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of a provides or
requires bus refinement must exist as a defining identifier of a requires or
provides bus access or of an abstract feature in the namespace of the component
type being extended.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The component type identifier or component
implementation name of a bus access classifier reference must exist in the
package namespace.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The prototype identifier, if present, must exist
in the namespace of the classifier that contains the bus access declaration.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Legality Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a bus access refers to a component classifier
or a component prototype, then the category of the classifier or prototype  must
be of category <b>bus</b>. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A bus access declaration may be refined by
refining the bus classifier, by adding a property association, or by doing
both. If the refinement only adds a property association the bus classifier
reference is optional.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A provides bus access cannot be refined to a
requires bus access and a requires bus access cannot be refined to a provides
bus access.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An abstract feature can be refined into a bus
access. In this case, the abstract feature must not have a direction specified.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Consistency Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">A bus access declaration that does not
specify a bus classifier reference is incomplete.  Such a reference can be
added in a bus access refinement declaration.</span></p>

<p class="ConsistencyRule"><span lang="EN-US">(C2)</span><span lang="EN-US">If a bus
access feature is a refinement of an abstract feature, then the direction of
the abstract feature, if specified, imposes a restriction on the access right,
i.e., <b>in </b>implies read-only, and <b>out </b>implies write-only.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Access_Right : Access_Rights =&gt; read_write  </span><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>required bus component access</i> declaration in the component
type indicates that a component requires access to a component declared
external to the component.  Required bus accesses are resolved to actual bus
subcomponents through access connection declarations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>provides bus access</i> declaration in the component type
indicates that a subcomponent provides access to a bus contained in the
component.  Provided bus accesses can be used to resolve required bus access. 
For bus components different forms of provided access, such as read-only
access, are specified by a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property or by directional access connections. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A bus that is accessed by more than one component is shared.  The
shared bus is a common resource through which processor, memory, and device
components communicate.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"><a name="38e45101-8d99-4af5-98f8-fb6a3cfe6384" id="id_38e45101-8d99-4af5-98f8-fb6a3cfe6384" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">Example2</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">public</span></span></b></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">with </span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">Buses;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">system </span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">simple</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">end </span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">simple;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> </span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">system
implementation</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> simple.impl</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">subcomponents</span></span></b></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">   A: </span><b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">processor</span></b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> PPC;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">   B: </span><b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">device</span></b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> DigCamera;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">connections</span></span></b></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">   </span><b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">bus access</span></b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> A.USB1 &lt;-&gt; B.USB2;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">end</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">
simple.impl;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> </span></span></b></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">processor</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> PPC</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">features</span></span></b></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">   USB1: </span><b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">provides bus access</span></b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> Buses::USB;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">end</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> PPC;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> </span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">device</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> DigCamera</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">features</span></span></b></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">   USB2: </span><b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">requires bus access </span></b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">Buses</span><b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">::</span></b><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">USB;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">end</span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384"> DigCamera;</span></span></p><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">end </span></span></b><span lang="EN-US"><span class="requality_text id_38e45101-8d99-4af5-98f8-fb6a3cfe6384">Example2;</span></span></p>

<h1 style="margin: 12pt 0cm 12pt 18pt; line-height: 12pt;"><a name="_Toc169684100"></a><a name="_Toc167033750"></a><a name="_Toc168661867"></a><a name="_Toc86725675"></a><a name="_Toc86220712"></a><a name="_Toc86220149"></a><a name="_Toc86219867"></a><a name="_Toc86219762"></a><a name="_Toc79294997"></a><a name="_Ref67218704"></a><a name="_Toc318320338"></a><a name="_Toc27797778"></a><a name="_Toc27449607"></a><a name="_Ref20630241"></a><a name="_Ref20630220"><span lang="EN-US">9<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">Connections</span></a><span lang="EN-US"> </span></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>connection</i> is a linkage between features of two components
that represents communication of data and control between components.  This can
be the transmission of control and data between ports of different threads or
between threads and processor or device components.   A connection may denote
an event that triggers a mode transition.</span><span lang="EN-US" style="color: windowtext;">  The timing of data and control transmission depends
on the connection category and on the dispatch protocol of the connected
threads.  The flow of data between parameters of subprogram calls within a
thread may be specified using connections.  Finally, connections designate
access to shared components.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL supports connections between abstract features, feature
groups connections, port connections, parameter connections, and access
connections.   Port connections represent directional flow of data and control
between two concurrently executing components, i.e., between two threads or
between a thread and a processor or device. </span><span lang="EN-US" style="color: windowtext;">  </span><span lang="EN-US">Parameter connections denote
the flow of data through the parameters of a sequence of subprogram calls
within a thread.  Data access connections designate access to shared data
components by concurrently executing threads or by subprograms executing within
a thread. Bus access connections represent communication between processors,
memory, and devices by accessing a shared bus. Subprogram access connections
represent the binding of a subprogram call to a subprogram instance being
called.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">When an AADL model with a thread architecture is instantiated, a
connection instance is created from the ultimate source to the ultimate
destination component by following a sequence of connection declarations.  The
ultimate source and ultimate destination typically are the active components in
the instance model or components whose access is shared. This connection instance
is referred to as semantic connection and its semantic details are defined for
each of the different types of connections.  If the AADL model is not fully
detailed to the thread level, connection instances are created between the leaf
components in the system hierarchy.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="Connection"><span lang="EN-US">connection ::= </span></a></pre>

<p class="MsoNormal"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>defining_connection_</i>identifier
<b>:</b></span></span></p>

<pre><span lang="EN-US">    ( feature_connection</span></pre><pre><span lang="EN-US">    | port_connection </span></pre><pre><span lang="EN-US">    | parameter_connection</span></pre><pre><span lang="EN-US">    | access_connection</span></pre><pre><span lang="EN-US">    | feature_group_connection )</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    </span></span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ]</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    [ in_modes_and_transitions ] ;</span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">connection_refinement ::= </span></pre>

<p class="MsoNormal"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>defining_connection_</i>identifier
<b>: refined to</b></span></span></p>

<pre><span lang="EN-US">    </span><span lang="FR">[ feature_connection_refinement</span></pre><pre><span lang="FR">    | port_connection_refinement </span></pre><pre><span lang="FR">    </span><span lang="EN-US">| parameter_connection_refinement</span></pre><pre><span lang="EN-US">    | access_connection_refinement</span></pre><pre><span lang="EN-US">    | feature_group_connection_refinement ]</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    </span></span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ]</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    [ in_modes_and_transitions ] ;</span></span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_9c2440a2-7196-4423-87bc-2ee826a6d00a"><a name="9c2440a2-7196-4423-87bc-2ee826a6d00a" id="id_9c2440a2-7196-4423-87bc-2ee826a6d00a" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_9c2440a2-7196-4423-87bc-2ee826a6d00a">       
</span></span></span><span lang="EN-US"><span class="requality_text id_9c2440a2-7196-4423-87bc-2ee826a6d00a">The defining identifier of a defined connection
declaration must be unique in the local namespace of the component
implementation with the connection subclause. This is also the case for
mode-specific connection declarations, i.e., declarations with an </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"><span class="requality_text id_9c2440a2-7196-4423-87bc-2ee826a6d00a">in_modes_and_transition</span></span><span lang="EN-US"><span class="requality_text id_9c2440a2-7196-4423-87bc-2ee826a6d00a"> subclause.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The connection identifier in a connection
refinement declaration must refer to a named connection declared in an ancestor
component implementation.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A connection refinement must contain at least
one of the following: a connection source and destination subclause, a property
association, an <b>in modes</b> subclause.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a semantic connection may be active in a
particular mode, then the ultimate source and ultimate destination components
must be part of that mode.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a semantic connection may be active in a
particular mode transition, then the ultimate source component must be part of
a system mode that includes the old mode identifier and the ultimate
destination component must be part of a system mode that includes the new mode
identifier.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Connections define directional and bidirectional connectivity
between abstract features, ports, access features, parameters, and between
feature groups. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Connections can have properties.  Connections can be defined to be
active in certain modes or in mode transitions, as indicated by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes_and_transition</span><b><span lang="EN-US"> </span></b><span lang="EN-US">subclause.</span></p>

<pre><span lang="EN-US"> </span></pre>

<h2><a name="_Toc169684102"></a><a name="_Toc167033752"></a><a name="_Toc168661869"></a><a name="_Toc86725677"></a><a name="_Toc86220714"></a><a name="_Toc86220246"></a><a name="_Toc86219869"></a><a name="_Toc86219764"></a><a name="_Toc79294999"></a><a name="_Ref67236105"></a><a name="_Toc318320339"><span lang="EN-US">9.1<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Feature Connections</span></a><span lang="EN-US"> </span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A feature connection can be declared between two abstract features
of components.  If the features specify a direction, then the source of the
connection is the feature with the <b>out</b> direction and the destination is
the feature with the <b>in </b>direction.  Otherwise, the connection is
considered to be bidirectional. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A feature connection can also be declared to refer to concrete
features, i.e., ports, parameters, and access features.  In this case, the type
of connection is inferred from the categories of the features involved in the
connection.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<p align="left" class="MsoNormal" style="text-align: left;"><a name="FeatureConnection"><span class="HTMLPreformattedChar1"><span lang="EN-US">feature_connection
::= </span></span></a></p>

<pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>feature </b><i>source</i>_feature_reference </span></span><span lang="EN-US">connection_symbol</span></pre><pre><span lang="EN-US">   </span><span class="HTMLPreformattedChar1"><b><span lang="EN-US"> </span></b><i><span lang="EN-US">destination</span></i><span lang="EN-US">_feature_reference</span></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">connection_symbol ::= </span></pre><pre><span lang="EN-US">    directional_connection_symbol | bidirectional_connection_symbol</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">directional_connection_symbol ::= <b>-&gt;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">bidirectional_connection_symbol ::= </span><b><span lang="EN-US">&lt;-&gt;</span></b></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">feature_reference ::=</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    -- feature in the component type</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>component_type_feature</i>_identifier |</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    -- feature in a feature group of the component type</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>component_type_feature_group</i>_identifier <b>.</b> <i>feature</i>_identifier |</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span><span lang="EN-US">   -- feature in a subcomponent</span></pre><pre><span lang="EN-US">    <i>subcomponent</i>_identifier <b>.</b> <i>feature</i>_identifier</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span><span lang="EN-US">   -- feature in a call</span></pre><pre><span lang="EN-US">    <i>subprogram_call</i>_identifier <b>.</b> <i>feature</i>_identifier</span></pre>

<p align="left" class="MsoNormal" style="text-align: left;"><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span></p>

<p align="left" class="MsoNormal" style="text-align: left;"><span class="HTMLPreformattedChar1"><span lang="EN-US">feature_connection_refinement ::= </span></span></p>

<pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>feature </b></span></span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A source or destination reference in a feature
connection or feature connection refinement declaration must reference a feature
declared in the component type, a feature in a feature group of the component
type, or a feature of one of the subcomponents. The source and destination
features must be abstract features, ports, parameters, or access features.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The subcomponent reference may refer to a
subcomponent or a subcomponent array. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="MsoNormal"><span lang="EN-US">The direction declared for the destination feature
of a feature connection declaration must be compatible with the direction
declared for the source feature as defined by the following rules:  </span></p>

<p class="Legalityrule" style="margin-left: 27pt; text-indent: -27pt;"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If the feature connection declaration represents
a connection between features of sibling components, then the source must be an
outgoing feature and the destination must be an incoming feature.  An <i>outgoing
feature</i> is an abstract feature with no direction or <b>out</b> direction, an
outgoing port or parameter with an <b>out </b>or <b>in out</b> direction, or an
access feature, in the case of data access with at least write access.  An <i>incoming
feature</i> is an abstract feature with no direction or <b>in</b> direction, an
incoming port or parameter with an <b>in </b>or <b>in out</b> direction, or an
access feature, in the case of data access with at least read access.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature connection declaration represents
a connection between features up the containment hierarchy, then the source and
destination must both be outgoing features.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature connection declaration represents
a connection between features down the containment hierarchy, then the source
and destination must both be incoming features.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature connection declaration specifies
a directional connection, then the direction of the connection must be
supported by the direction of the source and destination features.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The individual connections of a semantic
connection must be bidirectional or have the same direction.  The direction of
the connection is determined by the direction of the source and destination
feature and by the direction of the connection declarations.</span></p>

<p class="DescriptionHeading" style="margin-left: 28.8pt;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Required_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></pre><pre><span lang="EN-US">Required_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre><span lang="EN-US">Connection_Pattern: <b>list of </b>Supported_Connection_Patterns </span></pre><pre><span lang="EN-US">Connection_Set: <b>list of </b>Connection_Pair </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Feature connections represent connections between abstract features,
or between an abstract feature and a concrete feature.  Connection patterns are
specified as described in Section </span><span lang="EN-US">9.2.3</span><span lang="EN-US">.</span></p>

<h2><a name="_Toc318320340"></a><a name="_Ref212333676"><span lang="EN-US">9.2<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">Port Connections</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Port connections represent directional transfer of data and control
between two concurrently executing components, i.e., between threads, processors,
and devices.  They are feature connections, whose source and destination are
limited to ports and data access.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">These connections are <i>semantic port connections</i>.  A semantic
port connection is determined by a sequence of one or more individual port
connection declarations that follow the component containment hierarchy in a
fully instantiated system from an <i>ultimate source</i> to an <i>ultimate
destination</i>.  In a partial AADL model the ultimate source and destination
of a semantic port connection are the ports of leaf components in the
containment hierarchy, i.e., a thread group, process, or system without
subcomponent.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Semantic port connections are illustrated in Figure 14.  The <i>ultimate
source </i>of a semantic port connection is an outgoing port of a thread, virtual
processor, processor, or device component, or is a data component.  The <i>ultimate
destination </i>of a semantic port connection is an incoming port of a thread, virtual
processor, processor, or device component, or is a data component.  In the case
of a bidirectional connection between <b>in out </b>ports either port can be
the ultimate source or destination.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Port connection declarations follow the containment hierarchy of
threads, thread groups, processes and systems, or devices, processors, and
systems.  An individual port connection declaration links an outgoing port of
one subcomponent to an incoming port of another subcomponent, i.e., it connects
sibling components at the highest level in the component hierarchy required for
the connection.  Alternatively, a port connection declaration maps an outgoing
port of a subcomponent to an outgoing port of a containing component or an
incoming port of a containing component to an incoming port of a subcomponent.
In other words, these connections traverse up and down the containment
hierarchy. </span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><i><span style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;; color: windowtext;"><img width="391" height="177" alt="figure11" src="imgs/image026.png" /></span></i></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320423"></a><a name="_Toc167033813"></a><a name="_Toc86591133"></a><a name="_Toc79295060"></a><a name="_Ref57102924"><span lang="EN-US">Figure </span></a><span lang="EN-US">14</span><span lang="EN-US">
Semantic Port Connection</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Semantic port connections also represent the sampling of a data
component content by a data or event data port, and updating a data component
with the output of a data or event data port.  In other words, the ultimate
source or the ultimate destination of a semantic port connection, but not both,
can be a data component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Semantic port connections may also route a raised event to a modal
component through a sequence of connection declarations.  A mode transition in
such a component is the ultimate destination of the connection, if the mode
transition names an incoming event port in the enclosing component, or an
outgoing event port of one of the subcomponents (see Section 12).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Semantic port connections may exist between arrays of component
instances.  In this case, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Pattern</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Set</span><span lang="EN-US"> property specifies which source array elements have a semantic
connection to which destination array element (see section </span><span lang="EN-US">9.2.3</span><span lang="EN-US"> for more detail).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This section defines the concepts of departure and arrival times of
port connection transmission for each type of <i>port connection</i>.  The
transfer semantics between periodic threads can be defined such that they
ensure deterministic sampling of data.  All other communication can be defined
to be sampling or data driven.  The inputs and outputs can be specified to
occur at dispatch, any time during execution, at completion, or at deadline.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="FR">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PortConnection"><span lang="FR">port_connection ::= </span></a></pre><pre><span lang="FR">    <b>port</b></span></pre><pre><span lang="FR">      <i>source_</i>port_connection_reference </span></pre><pre><span lang="FR">          connection_symbol </span></pre><pre><span lang="FR">        <i>destination_</i>port_connection_reference</span></pre><pre><b><span lang="FR"> </span></b></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">port_connection_refinement ::=</span></pre><pre><span lang="FR">    <b>port </b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">port_connection_reference ::= </span></pre><pre><span lang="FR">        -- port in the component type </span></pre><pre><span lang="FR">      <i>component_type_port</i>_identifier</span></pre><pre><span lang="FR">    |   </span></pre><pre><span lang="FR">        -- port in a subcomponent </span></pre><pre><span lang="FR">      <i>subcomponent</i>_identifier <b>.</b> <i>port</i>_identifier</span></pre><pre><span lang="FR">    </span><span lang="EN-US">|   </span></pre><pre><span lang="EN-US">        -- port element in a feature group of the component type</span></pre><pre><span lang="EN-US">      <i>component_type_feature_group</i>_identifier . <i>element_port</i>_identifier</span></pre><pre><span lang="EN-US">    |</span></pre><pre><span lang="EN-US">        -- data element in aggregate data port </span></pre><pre><span lang="EN-US">      <i>component_type_port</i>_identifier . <i>data_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- requires data access in the component type </span></pre><pre><span lang="EN-US">      <i>component_type_requires_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data subcomponent </span></pre><pre><span lang="EN-US">      <i>data_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data component provided by a subcomponent </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>provides_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data access element in a feature group of the component type</span></pre><pre><span lang="EN-US">     <i>component_type_feature_group</i>_identifier . <i>element_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |</span></pre><pre><span lang="EN-US">        -- access to element in a data subcomponent </span></pre><pre><span lang="EN-US">      <i>data_subcomponent</i>_identifier <b>.</b><i>data_subcomponent</i>_identifier </span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- processor port</span></pre><pre><span lang="EN-US">      <b>processor .</b> <i>processor_port</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- component itself as event or event data source</span></pre><pre><b><span lang="EN-US">      self </span></b><span lang="EN-US">. <i>event_or_event_data_source</i>_identifier </span></pre><pre><span lang="EN-US">-- Note: <b>data port</b>, <b>event data port</b>, and <b>event port</b> connections</span></pre><pre><span lang="EN-US">-- are replaced by <b>port</b> connections in AADL V2</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The connection identifier in a port connection
refinement declaration must refer to a named port or feature connection
declared in an ancestor component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A source or destination reference in a port
connection or port connection refinement declaration must reference a port
declared in the component type, a port of one of the subcomponents, or a port
that is an element of a feature group in the component type, or it must refer
to a requires data access in the component type, a provides data access in one
of the subcomponents, or a data subcomponent. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The subcomponent reference may also consist of a
reference to a subcomponent array. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">event_or_event_data</span><span lang="EN-US"> identifier of event
source specifications (<b>self</b>.<i>event_or_event_data</i>_identifier) must
not conflict with defining identifiers in the namespace of the component that
contains the connection referencing the event source.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of a directional port connection the
connection end representing the source of the flow must be the source of the
connection and the connection end representing the destination of the flow must
be the destination of the connection. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of a bidirectional port connection either
connection end can be the source. If the bidirectional connection has
directional connection ends, then the flow is determined by the direction of
the connection ends. In the case of ports it is the port direction and in the
case of data access features it is the access right. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the source connection end is a data access
feature it must have read access rights; if the destination connection end is a
data access feature it must have write access rights.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The feature identifier of a subcomponent
reference may refer to a feature array, if the subcomponent is a thread,
device, or processor.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The following are acceptable sources and
destinations of port connections. The left column shows connections between
ports, while the right column shows connection between ports and data
components.  </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="margin-left: 14.4pt; border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="342" valign="top" style="width: 256.5pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="MsoBodyText"><span lang="FR">event port -&gt; event port </span></p>
  <p class="MsoBodyText"><span lang="FR">data port -&gt; data port, event data port,
  event port</span></p>
  <p class="MsoBodyText"><span lang="FR">event data port -&gt; event data port,
  data port, event port</span></p>
  <p class="MsoBodyText"><span lang="FR"> </span></p>
  </td>
  <td width="240" valign="top" style="width: 180pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoBodyText"><span lang="EN-US">data, data access -&gt; data port, event
  data port, event port</span></p>
  <p class="MsoBodyText"><span lang="EN-US">data port, event data port -&gt; data,
  data access </span></p>
  <p class="MsoBodyText"><span lang="EN-US"> </span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="MsoNormal"><span lang="EN-US">The direction of the source port of a port
connection declaration must be compatible with the direction of the destination
port as defined by the following rules:  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the port connection declaration represents a
connection between ports of sibling components, then the source must be an outgoing
port and the destination must be an incoming port.  If the source connection
end is a data access feature, then it must be a <b>provides </b>access feature;
if it is a destination connection end it must be a <b>requires </b>access
feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the port connection declaration represents a
connection between ports up the containment hierarchy, then the source and
destination must both be outgoing ports.  If the source connection end is a
data access feature, then it must be a <b>provides </b>access feature; if it is
a destination connection end it must be a <b>requires </b>access feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the port connection declaration represents a
connection between ports down the containment hierarchy, then the source and
destination must both be incoming ports. If the source connection end is a data
access feature, then it must be a <b>requires </b>access feature; if it is a
destination connection end it must be a <b>provides </b>access feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The individual connections of a semantic port
connection must be bidirectional or have the same direction.  The direction of
the connection is determined by the direction of the source and destination
feature and by the direction of the connection declarations.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><b><span lang="EN-US">Self.</span></b><span lang="EN-US">&lt;identifier&gt; must only be
referenced as the source of a connection.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">A data port cannot be the destination of more than one semantic port
connection unless each semantic port connection is contained in a different
mode.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L12)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">A semantic connection cannot contain connection declarations with both
immediate and delayed </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timing</span><span lang="EN-US"> property values.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L13)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">For connections between data ports, event data ports and data access,
the data classifier of the source port must match the data type of the destination
port.  <a name="_Ref167122215">The </a></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule</span><span lang="EN-US"> property specifies the rule to be applied to match the data
classifier of a connection source to the data c</span><span lang="EN-US">lassifier
of a connectio</span><span lang="EN-US">n destination.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L14)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">The following rules are supported:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Match</span><span lang="EN-US">: The source data type and data implementation must be identical to
the data type or data implementation of the destination. If the destination
classifier is a component type, then any implementation of the source matches.
This is the default rule.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Equivalence</span><span lang="EN-US">: An indication that the two classifiers of a connection are
considered to match if they are listed in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Equivalence_Matches</span><span lang="EN-US"> property. Acceptable data classifier matches are specified as </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Equivalence_Matches</span><span lang="EN-US"> property with pairs of classifier values representing acceptable
matches.  Either element of the pair can be the source or destination
classifier. Equivalence is intended to be used when the data types are
considered to be identical, i.e., no conversion is necessary. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Equivalence_Matches</span><span lang="EN-US"> property is declared globally as a property constant.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subset</span><span lang="EN-US">: A mapping of (a subset of) data elements of the source port data
type to all data elements of the destination port data type.  Acceptable data
classifier matches are specified as </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Subset_Matches</span><span lang="EN-US"> property
with pairs of classifier values representing acceptable matches.  The first
element of each pair specifies the acceptable source classifier, while the
second element specifies the acceptable destination classifier.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Subset_Matches</span><span lang="EN-US"> property is declared globally as a property constant. A virtual bus
or bus must represent a protocol that supports subsetting, such as OMG DDS. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Conversion</span><span lang="EN-US">: A mapping of the source port data type to the destination port
data type, where the source port data type requires a conversion to the destination
port data type.  Acceptable data classifier matches are specified as </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Type_Conversions</span><span lang="EN-US"> property with pairs of classifier values representing acceptable
matches. The first element of each pair specifies the acceptable source
classifier, while the second element specifies the acceptable destination
classifier.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Type_Conversions</span><span lang="EN-US"> property may be declared globally as a property constant. A virtual
bus or bus must support the conversion from the source data classifier to the
destination classifier.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L15)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If more than one port connection declaration in a semantic port
connection has a property association for a given connection property, then the
resulting property values must be identical.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L16)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">A processor port specification must only be used in event
connections within threads and subprograms.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">There cannot be cycles of immediate
connections between threads, devices, and processors.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C2)</span><span lang="EN-US">The processor port identifier of a
processor port specification (<b>processor</b>.<i>processor_port_</i>identifier)
must name a port of the processor that the thread is bound to.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C3)</span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supports_Classifier_Subset_Matches</span><span lang="EN-US"> property may be associated with a bus or virtual bus. This
specifies the subset matches a particular protocol supports.  Subset matches of
connections bound to such a virtual bus or bus must be supported by the
respective virtual bus or bus. </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C4)</span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supports_Type_Conversions</span><span lang="EN-US"> property may be associated with a bus or virtual bus. This
specifies the subset matches a particular protocol supports.  Subset matches of
connections bound to such a virtual bus or bus must be supported by the
respective virtual bus or bus. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Timing : <b>enumeration </b>(sampled, immediate, delayed) <b>=&gt;</b> sampled  </span></pre><pre><span lang="EN-US">Connection_Pattern: <b>list of </b>Supported_Connection_Patterns </span></pre><pre><span lang="EN-US">Connection_Set: <b>list of </b>Connection_Pair </span></pre><pre><span lang="EN-US"><span class="CODE">Transmission_Type: </span><b>enumeration</b> ( push, pull )</span></pre><pre><span lang="EN-US">Required_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Not_Collocated: <b>record </b>( </span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<h3><a name="_Toc318320341"></a><a name="_Ref207113775"><span lang="EN-US">9.2.1<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Port Connection Characteristics</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A semantic port connection represents directed flow of data and
control between threads, processors and devices.  In the case of event or event
data ports the ultimate destination can be a mode transition of a component.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
port connection can refine a feature connection.  A port connection can be
refined by changing the direction from bidirectional to directional, by adding
a <b>in modes</b> subclause, and by adding property associations for the
connection in a connection refinement declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
port connection declared with the optional </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes_and_transitions</span><span lang="EN-US"> subclause specifies whether the connection is part of specific
modes or is part of the transition between two specific modes.  The detailed
semantics of this subclause are defined in Section </span><span lang="EN-US">12</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">While
in a given mode, transmission over a port connection only occurs if the
connection is part of the current mode.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">During
a mode switch, transmission over a data port connection only occurs at the
actual time of mode switch if the port connection is declared to apply to the
transition between two specific modes.  The actual mode switch initiates
transmission.  This allows data state to be transferred between threads active
in different modes.  Similarly, for event or event data ports it allows for
transfer of queue content.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Port
connections may refer to an event source specification (<b>self</b>.event_or_event_data_name). 
An event source specification indicates that the component itself is the source
of an event.  In the case of a thread this may be due to a <i>Send_Output</i>
system call or due to an event raised by the underlying runtime system, i.e.,
the processor.  For all components it may represent the fact that a component
fault is the source of an event or message with fault information to support
diagnostics, as specified by the Error Model Annex (see </span><span lang="EN-US">Annex Document C</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread or device may be connected to the port of a processor.  For example, a
health monitoring thread may receive the heart beat events from several processors. 
In addition, a port connection may refer to the port of the processor that an
application software component is bound to (<b>processor </b>. &lt;portname&gt;
).  If a processor or device is the data connection source, then the
transmission is initiated and completed when the destination thread or device
is dispatched.  In this case a data port can model a processor or device
register that is sampled by a thread or device. If a device or processor is the
event connection source, then the occurrence of an interrupt represents the
initiation of an event transmission.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">AADL
supports the following port connection declarations:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Event port, data port, event data port, data
(data access) -&gt; event port: port output or written data is recognized as
event and queued in the event port. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Event data port, data port, data (data access)
-&gt; event data port: data output or written data is transferred and received
as event data in a queued port.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Data port, event data port, data (data access)
-&gt; data port: Data output or written data is transferred and available upon
receipt as most recent value of a data port variable, i.e., the data port
samples data.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
port connection to a mode transition is declared by naming the event port or
event data port in the mode transition declaration (see Section </span><span lang="EN-US">12</span><span lang="EN-US">).</span></p>

<h3><a name="_Toc318320342"><span lang="EN-US">9.2.2<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Port Connection Topology</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
AADL supports n-to-n connectivity for event and event data ports.  A port may
have multiple outgoing connections, i.e., its content is transmitted to
multiple destinations.  This means that each destination port receives an
instance of the event, or event data being transmitted.  Similarly, event and
event data ports can support multiple incoming connections resulting in
sequencing and possibly queuing of incoming events and event data.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
example, multiple threads may connect their outgoing event data port to an
enclosing process event data port (fan-in), this port is connected to an
incoming process event data port, and this port is connected to multiple thread
ports (fan-out).  This results in semantic connections from all ultimate source
threads to all ultimate destination threads.  If the port connections from
multiple threads are declared to a feature group in the enclosing process, a
feature group connection to a second process, and port connections from the
feature group of the second process to its contained threads, the result is a
collection of pair wise semantic connections from the ultimate source threads
to the ultimate destination threads.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
ports are restricted to 1-n connectivity, i.e., a data port can have multiple
outgoing connections, but only one incoming connection per mode.  Since data
ports hold a single data state value, multiple incoming connections would
result in multiple sources overwriting each other’s values in the destination
port variable.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
ports can be used to model aggregate data ports. If data ports are declared
with a data component type that has its data subcomponents externally visible
through provides data access declarations, then a separate connection can be
declared to each of these elements in the port of the enclosing component.  For
example, several periodic threads can deliver their data port results to a data
port of the enclosing process that represents the aggregate of those data
values as elements of its data component type.  The set of threads whose output
is considered are those whose dispatch aligns. Once they have produced their
output, the aggregate output is sent to the recipients. The time at which the
send is initiated is the latest completion of the source threads, i.e., max(t<sub>complete</sub>),
where t<sub>complete</sub> represents the value of t at completion time.  Similarly,
the recipient thread may receive an element of the aggregate data port of its
enclosing process, or a subset of the elements.  The latter is modeled by the
classifier of the recipient data port satisfying the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subtype</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subset</span><span lang="EN-US">
matching rules of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule
</span><span lang="EN-US">property</span><span lang="EN-US">.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Feature
groups may have multiple outgoing and incoming connections unless any ports
that are elements of a feature group place additional restrictions.  A
destination feature group may be a subset of the source feature group.
Acceptable matches are specified via the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule </span><span lang="EN-US">property with values </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subtype</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subset</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If a
component has an <b>in out</b> port, this port may be the destination of a
connection from one component and the source of a connection to another
component. This can be expressed by two directional port connections.  Bidirectional
flow between two components is represented by a bidirectional port connection
between the <b>in out</b> ports of two components.</span></p>

<h3><a name="_Toc318320343"></a><a name="_Ref208655880"></a><a name="_Ref177872537"><span lang="EN-US">9.2.3<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Connection Patterns for Component Arrays</span></a><span lang="EN-US"> and Feature Arrays</span></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Pattern</span><span lang="EN-US"> property specifies how semantic connections are replicated if the
ultimate source and ultimate destination are component arrays.  The ultimate
source or destination is a component array if it or any enclosing component
involved in the connection is declared as subcomponent array.  The dimensions
of the ultimate source and destination array is the sum of dimensions of the
ultimate source/destination component and those of any enclosing component
involved in the semantic connection.  The order of the dimensions is from the
ultimate source/destination component up the containment hierarchy.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
ultimate source or ultimate destination of a semantic connection may be a
feature array. In this case, the dimension of the feature array is treated as
an additional dimension (the first dimension if multiple dimensions exist). </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Pattern</span><span lang="EN-US"> property is a multi-valued list of dimension pattern values.  A
dimension pattern value is a list itself with one value for each of the
dimensions of component arrays.  The number of dimension pattern values must
correspond to the larger dimensionality of the source or destination component
array.  Each value specifies the intended connectivity for one dimension of the
array.  The following connection patterns are predefined for an array
dimension:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">All_To_All</span><span lang="EN-US"> value indicates that each
array element of the ultimate source has a semantic connection to each element
in the ultimate destination (broadcast).  This connection pattern applies even
if the two arrays have different sizes.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One_To_One</span><span lang="EN-US"> value indicates that elements
of the ultimate source array and the ultimate destination array have pair wise
semantic connections (Identity).  This property value applies if the two arrays
have identical sizes. If one range is a subset of the other then only the
subset starting with the first element is connected.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Previous</span><span lang="EN-US"> value
indicates that elements of the ultimate source array dimension are connected to
the next (previous) element in the ultimate destination array dimension.  The
last element does not connect in the case of next and the first element does
not connect in the case of previous.  This property value applies if the two
arrays have identical sizes. Note that a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next</span><span lang="EN-US"> value for two
dimensions results in a diagonal connection.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Cyclic_Next</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Cyclic_Previous</span><span lang="EN-US"> value
indicates that elements of the ultimate source array dimension are connected to
the next (previous) element in the ultimate destination array dimension.  In
the case of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Cyclic_Next</span><span lang="EN-US"> the last element in the array connects to the first, and vice versa
for </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Cyclic_Previous</span><span lang="EN-US">.  This property value applies if the two arrays have identical sizes.
Note that a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next</span><span lang="EN-US"> value for two dimensions results in a diagonal connection.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One_to_All </span><span lang="EN-US">value indicates that a single
element of the ultimate source has a semantic connection to each element in the
ultimate destination.  This connection pattern is used when the destination
array has a higher dimensionality than the source array.  It specifies that any
connection according to the other dimensions is being replicated for each
element in this destination dimension, i.e., the outputs are broadcast in this
dimension.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">All_to_One</span><span lang="EN-US"> value indicates that each
array element of the ultimate source has a semantic connection to a single
element in the ultimate destination.  This connection pattern is used when the destination
array has a lower dimensionality than the source array.  It specifies that any
connection according to the other dimensions is being replicated for each
element in this source dimension, i.e., the outputs of this dimension are
connected to a single fan-in point.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
list of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Pattern</span><span lang="EN-US"> values permits more complex patterns to be defined.  </span><span lang="EN-US">Figure 15</span><span lang="EN-US"> illustrates the use of connection
patterns in a two-dimensional array.  In more complex patterns, the value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">((Next,One_To_One), (One_To_One,Next),
(Previous, One_To_One), (One_To_One,Previous))</span><span lang="EN-US">
indicates connections to all horizontal and vertical neighbors, while </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">((Next,One_To_One),
(One_To_One,Next), (Previous, One_To_One), (One_To_One,Previous), (Previous,Previous),
(Next,Previous), (Previous,Next), (Next,Next)) </span><span lang="EN-US">includes
diagonal neighbors as well.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="408" height="244" id="Picture 4" src="imgs/image027.jpg" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320424"></a><a name="_Ref209355255"><span lang="EN-US">Figure </span></a><span lang="EN-US">15</span><span lang="EN-US"> Connection Patterns in 2-Dimensional
Component Array</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Set</span><span lang="EN-US"> property specifies each semantic connection between elements of the
source component array and destination component array individually.  The
property has a list of pairs of source and destination array indices.  A source
or destination array index consists of a list <b>aadlinteger</b> values, one
for each array dimension.  The first index is the value 1.  The values for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Set</span><span lang="EN-US"> property may be generated by a tool based on pattern specification
that is an annex extension of the core AADL. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
both </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Pattern</span><span lang="EN-US"> values and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Connection_Set</span><span lang="EN-US"> values are specified, the set of semantic connections is the union
of both.</span></p>

<p class="DescriptionHeading" style="margin-left: 28.8pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText"><span class="HTMLPreformattedChar1"><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8"><a name="4063a85f-5bca-406d-8936-9398eb8a27d8" id="id_4063a85f-5bca-406d-8936-9398eb8a27d8" class="requality_id"></a>-- The
first sensor array in Figure 15</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">device
</span></span></b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">sensor</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">features</span></span></b></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8"> 
Incoming: </span><b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">in event data port</span></b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">;</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8"> 
Outgoing: </span><b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">out event data port;</span></b></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">end </span></span></b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">sensor;</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">system</span></span></b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8"> sensornet</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">end </span></span></b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">sensornet;</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">system
implementation </span></span></b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">sensornet.impl</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">subcomponents</span></span></b></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8"> 
sensorarray: </span><b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">device</span></b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8"> sensor [10][10];</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">connections</span></span></b></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">  rows:
</span><b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">port </span></b><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">sensorarray.outgoing -&gt; sensorarray.incoming </span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">       
{ Connection_Pattern =&gt; ((One_To_One, Next));};</span></span></span></p><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">

</span><p class="ExampleText"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">end </span></span></b><span lang="EN-US"><span class="requality_text id_4063a85f-5bca-406d-8936-9398eb8a27d8">sensornet.impl;</span></span></span></p>

<h3><a name="_Toc318320344"><span lang="EN-US">9.2.4<span style="font: 7pt &quot;Times New Roman&quot;;">      
</span></span><span lang="EN-US">Port Communication Timing</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
content of incoming data, event, or event data ports is frozen for the duration
of a thread execution, i.e., the port variable content as it is accessible to
the component application code is not affected by the arrival of new data,
events or event data.  By default the input is frozen at the time of the
dispatch, i.e., at the time when </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t = 0</span><span lang="EN-US">. If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><i><span lang="EN-US"> </span></i><span lang="EN-US">property is specified it is determined by the property value as
specified in Section </span><span lang="EN-US">(14)</span><span lang="EN-US">.  Any
input arriving after the input time becomes available at the next input time.
This may be the input time for the next dispatch, or the next input time in the
same dispatch, if multiple input time values are specified. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
output is transferred to other components at completion time, i.e., </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> = </span><span lang="EN-US">c<sub>complete</sub>,
or as specified by the value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> property (see Section </span><span lang="EN-US">(14)</span><span lang="EN-US">).  Output may be sent multiple times
during the same dispatch; this is specified by multiple output time values.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(32)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US"> Event
and event data ports may trigger the dispatch of a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Sporadic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Aperiodic</span><span lang="EN-US">,
or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timed</span><span lang="EN-US"> thread as specified in Section </span><span lang="EN-US">5.4.2</span><span lang="EN-US">.  The content of data, event, and
event data ports is processed at the dispatch rate.  In case of event and event
data ports, the input is the queued set of items at </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US">; each
arrived event or event data is only processed once, and items can be processed
one per dispatch or in batches.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(33)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Arrival
of events on event ports can also trigger a mode switch if the event port is
named in a mode transition originating in the current mode (see Section </span><span lang="EN-US">12</span><span lang="EN-US">).  Events that trigger mode transitions
are not queued at event ports. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(34)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
case of incoming data ports, the input is the most recently arrived value at
input time.  This may be the same as the value at the previous dispatch.  The
dispatch rate determines the rate at which a data stream is sampled.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(35)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
incoming data stream may be sampled periodically by a periodic thread, or it
may be sampled at the rate at which </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Aperiodic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Sporadic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Hybrid</span><span lang="EN-US">, and
</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timed</span><span lang="EN-US"> threads are dispatched.  In this case the sampling thread samples
the data stream at its dispatch rate independent of the dispatch and completion
of the source thread.  If the incoming port is a data port the most recent
value is available.  If the incoming port is an event port or event data port
the content of the port queue may be sampled.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(36)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
actual transfer of data to data ports as ultimate destination is affected by
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Transfer_Type</span><span lang="EN-US"> property, which specifies whether the ultimate source or ultimate destination
initiate the transfer, with the default being the ultimate source. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(37)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
actual transfer of event data and events is affected by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fan_Out_Policy</span><span lang="EN-US"> property of ports with multiple outgoing connection declarations
(see Section </span><span lang="EN-US">9.2.6</span><span lang="EN-US">).</span></p>

<h3><a name="_Toc318320345"></a><a name="_Ref205462297"></a><a name="_Ref193787056"></a><a name="_Ref177899109"><span lang="EN-US">9.2.5<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="EN-US">Sampled, Immediate, and Delayed Data Port Communication</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(38)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
source of a data stream may be a data or event data port of a periodic thread
or device.  When this data stream is sampled by a periodic thread or device,
sampling, oversampling, and undersampling may occur non-deterministically due
concurrency and preemption.  This can lead latency jitter in the data and
instability in control system behavior. AADL supports deterministic sampling of
data streams between a periodic source and destination thread by specifying immediate
and delayed timing of port connections.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(39)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Sampled
data port communication occurs when a periodic destination thread or device
with an incoming data port samples a data stream.    In a sampling semantic
connection the recipient samples the output of the sender at dispatch time or
as specified by the <i>Input_Time </i>property of the recipient port.  Since
this sampling occurs independent of the dispatch and completion of the source
thread the data stream is sampled non-deterministically as illustrated in </span><span lang="EN-US">Figure 16</span><span lang="EN-US">. It shows two threads executing
concurrently at 10 Hz and 20 Hz on different processor cores. The output of the
first dispatch of Thread 1 is received by the second dispatch of Thread 2.  The
output of the second dispatch of Thread 1 is received  by the fifth dispatch of
Thread 2, since the fourth dispatch of T2 occurs before the second dispatch of
T1 completes.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="303" height="143" src="imgs/image028.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320425"></a><a name="_Ref193788627"><span lang="EN-US">Figure </span></a><span lang="EN-US">16</span><span lang="EN-US"> Sampling Data Port Connection</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(40)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Port
connections can also be declared to be deterministic, i.e., they are declared
to have an <i>immediate</i>  or <i>delayed</i>  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timing</span><span lang="EN-US"> property value.   
If the ultimate source and destination of a semantic connection are periodic
threads or devices and the ultimate destination is a data port, then a semantic
connection with an immediate or delayed </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timing</span><span lang="EN-US"> property value
imposes special communication timing semantics. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(41)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
an immediate semantic connection the sender always communicates with the
receiver mid-frame, i.e., in the same dispatch frame.  In this case the
receiver, when dispatched at the same time or at the first dispatch after the
sender dispatch, waits for the sender to complete its execution. The scheduler
must ensure that the execution of the receiver is aligned with the completion
of the sender. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(42)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In a
delayed semantic connections the sender always communicates with the recipient
phase-delayed, i.e., in the next dispatch frame of the recipient after the
deadline of the sender.  In this case,  the send and receipt times are
specified in terms of clock time, thus, ensuring determinism. The communication
mechanism takes care of delaying the communication and the scheduler is unaware
of this delay.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(43)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Deterministic
sampling is ensured within a synchronization domain. In the case of
asynchronous systems, deterministic sampling is not guaranteed unless
appropriate protocols are provided by the runtime system to ensure logically
coordinated sampling that accommodates time drift across synchronization
domains.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(44)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Immediate
and delayed connection timing are illustrated in </span><span lang="EN-US">Figure 17</span><span lang="EN-US">.  Thread 1 and Thread 2 are two
periodic threads executing at a rate of 10Hz, i.e., they are logically
dispatched every 100 ms.  Immediate connection timing semantics are shown on
the left of the figure, and delayed are shown on the right of the figure.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(45)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
immediate connection timing the actual start of execution of the receiving
thread (Thread 2) will be delayed if its dispatch occurs at the same time or
after the dispatch of the sending thread (Thread 1) and before execution
completion of the sending thread. At the actual start time the sending thread <b>out</b>
port data value is transferred into the <b>in</b> port of the receiving
thread.  For example, if Thread 2 executes at twice the rate of Thread 1, then
the execution of Thread 2 will be delayed every time the two periods align to
receive the data at completion of Thread 1. Every other time Thread 2 will
start executing at its dispatch time with the old value in its data port.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(46)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
delayed connection timing, the data is not made available to the recipient until
the deadline of the source thread.  The data is available at the destination
port at the next dispatch of the destination thread that occurs at or after the
source thread deadline.  If the source deadline and the destination dispatch
occur at the same logical time instant, the transmission is considered to occur
within the same time instant.  The output of Thread 1 is made available to
Thread 2 at the beginning of its next dispatch.  Thread 1 producing a new
output at the next dispatch does not affect this value.</span></p>

<p class="Note"><span lang="EN-US">Note: The data transfer of a delayed connection
may be initiated at the time of send, but the runtime system must ensure
through double buffering that the data is not moved to the in port variable for
receipt by the recipient until after the deadline of the sender.  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="624" height="136" src="imgs/image029.jpg" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320426"></a><a name="_Toc167033814"></a><a name="_Toc86591134"></a><a name="_Toc79295061"></a><a name="_Ref65850646"><span lang="EN-US">Figure </span></a><span lang="EN-US">17</span><span lang="EN-US"> Timing
of Immediate &amp; Delayed Data Connections</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(47)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the connection declarations that comprise a semantic port connection have an
explicit </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timing</span><span lang="EN-US"> property association, then the value must be the same.  The
property is only interpreted if the source and destination are periodic and the
destination feature is a data port. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(48)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
immediate data port connections data transfer occurs at completion time of the
sender (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c<sub>source</sub>
= c<sub>complete,source</sub></span><span lang="EN-US">) and the receiver
execution start time is delayed until the sender completes (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c<sub>destination</sub> = 0 </span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> c<sub>source</sub>≤c<sub>complete,source</sub></span><span lang="EN-US">). Both the source and destination must complete their execution by
the deadline of the destination, i.e., (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c<sub>source</sub> = c<sub>complete,source</sub></span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c<sub>destination</sub></span><sub><span lang="EN-US"> </span></sub><span lang="EN-US">= </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c<sub>complete,destination </sub></span><span lang="EN-US" style="font-family: Symbol;">Ù</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t<sub>destination</sub></span><sub><span lang="EN-US"> </span></sub><span lang="EN-US">≤ </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline<sub>destination</sub></span><span lang="EN-US">).  This rule is transitive for sequences of immediate semantic
connections.  Note that the output may occur at a time before completion as
specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> property.  In this case, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">c<sub>complete,source </sub></span><span lang="EN-US">becomes</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> c<sub>output_time,source</sub></span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(49)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
delayed data port connections data transmission is initiated at the deadline of
the source component (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">t<sub>source</sub>
= Deadline<sub>source</sub></span><span lang="EN-US">, i.e., the output time of
the source data port is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline_Time</span><span lang="EN-US">).  The input time of the receiving component port is the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dispatch_Time</span><span lang="EN-US">, i.e., the data is received at the next dispatch of the receiving
component following or equal to the source deadline.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(50)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
immediate connections the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> is assumed to be start time with zero offset and any other
specified time is ignored. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> is assumed to be completion time or must be specified as a single
output time value.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(51)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For delayed
connections the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US"> is assumed to be dispatch time and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time</span><span lang="EN-US"> is
assumed to be deadline. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(52)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
multiple transmissions occur for a data port connection from the source thread
before the dispatch of the destination thread, then only the most recently
transmitted data is available in the destination port.  In other words, the
destination thread <i>undersamples</i> the transmitted data.  In the case of
two connected periodic threads, this situation occurs when the source thread
has a shorter period than the destination thread. In the case of a periodic
thread connected to an aperiodic thread, this situation occurs if the aperiodic
thread receives two dispatch events with an inter-arrival time larger than the
period of the source thread.  In the case of an aperiodic thread connected to a
periodic thread, this situation occurs if the aperiodic thread has two
successive completion times less than the period of the periodic thread.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(53)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
no transmission occurs on an in data port between two dispatches of the
destination thread, then the thread receives the same data again, resulting in <i>oversampling</i>
of the transmitted data.  A status indicator is accessible to the source text
of the thread as part of the port variable to determine whether the data is
fresh.  This allows a receiving thread to determine whether a connection source
is providing data at the expected rate or fails to provide data.</span></p>

<h3><a name="_Toc318320346"></a><a name="_Ref207468859"><span lang="FR">9.2.6<span style="font: 7pt &quot;Times New Roman&quot;;">       </span></span><span lang="FR">Semantic Port Connections and Port Queues</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(54)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the ultimate destination of a semantic port connection is an event port or event
data port, then this port has by default a queue of size one.  The size of this
queue can be changed by explicitly with the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Size</span><span lang="EN-US"> property. 
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(55)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Ports
that are part of the sequence of connection declarations of a semantic
connection can have a fan-out policy called of </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US">.</span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;"> </span></span><span lang="EN-US">Such
a fan-out policy results in queuing of data and events for retrieval by the
ultimate destination  (see Section </span><span lang="EN-US">8.3.3</span><span lang="EN-US">).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(56)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">This
means that the output from the ultimate source of a semantic connection is
passed into the queue of the first port with an </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US"> fan-out policy and more than one outgoing connection; in the case
of a single outgoing connection the output can be passed on without queuing.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(57)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If the
port of the ultimate destination of a semantic connection does not receive
input from a semantic connection, then it services the queue of the last port
in its connection declaration sequence with an </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US"> fan-out policy, more than one outgoing connection, and at least one
semantic connection that provides input into its queue.  If a port with an </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US"> fan-out policy only receives input from one port with an </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US"> fan-out policy, then that port is the port to be serviced. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(58)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the ultimate destination is a thread or device with multiple ports that can
trigger a dispatch, then they are serviced according to the rules specified for
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US"> property in Section </span><span lang="EN-US">8.3.3</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(59)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">More
complex queue processing patterns can occur if a port with</span><span class="HTMLPreformattedChar"><span lang="EN-US"> OnDemand</span></span><span lang="EN-US"> fan-out policy and more than one outgoing connection has input from
an ultimate source of a semantic connection and from another port with </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US"> fan-out, or from multiple ports with </span><span class="HTMLPreformattedChar"><span lang="EN-US">OnDemand</span></span><span lang="EN-US"> fan-out,  In the former case, the other port queue is only serviced
if the original queue is empty. In the latter case one of those port queues can
be chosen according to a fan-in prioritization of the port.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(60)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the ultimate destination of a semantic port connection is a mode transition,
then the arrival of an event or event data at the port queue results in
immediately passing of a mode transition trigger event to the mode transition,
in addition to its queuing in the port queue for the purpose of ultimate
destination dispatch and input (see also Section </span><span lang="EN-US">12</span><span lang="EN-US">). </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(61)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
temporal semantics for port connections define several cases in which the
transmission initiation and completion times are identical.  While it is not
possible to perform a transmission instantaneously in a actual system, a method
of implementing systems must supply a thread execution schedule that preserves
the temporal and logical semantics of the model.  In some cases, this may
result in a system where the actual sending thread completion time occurs
before the logical departure time of the transmission.  Similarly, the actual
receiving thread may begin its execution after the logical arrival of the
transmission.  Such an execution model is acceptable if the observed causal
order is identical to that of the logical semantic model and all timing
requirements specified in all property associations are satisfied.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(62)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">For
port connections between periodic threads, the standard semantics and default
property associations result in undersampling when the period of the sending
thread is less than the period of the receiving thread. Oversampling occurs
when the period of the sending thread is greater than the period of the
receiving thread.  A method of implementing systems is permitted to provide an
optimization which may eliminate any physical transfers of data that can be
guaranteed to be overwritten, or that can be guaranteed to be identical to
previously transferred values.  Error-free transmission may be assumed when
performing such an optimization.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(63)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of building systems must include a runtime capability in every system to
detect an erroneous or failed transmission over a data connection between
periodic threads to the degree of assurance required by an application.  A
method of building systems must include a runtime capability in every system to
report a failure to perform a transmission by a sending periodic thread to all
connected recipients.  A method of building systems must include a runtime
capability in every system to detect data errors in arriving transmissions over
any connection to the degree of assurance required by an application.  The
source language annex to this standard specifies the application program
interface used to obtain error information about transmissions.  A method of
building systems may define additional error semantics and error detection
mechanisms and associated application programming interfaces.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(64)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Port
connections can have shared data components as source.  This requires the
runtime system to monitor write operations to the data component. A method of
building systems may choose to not support this capability.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(65)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Deterministic
communication expressed by immediate and delayed connections must be guaranteed
by the method of implementation within a synchronization domain. Even if the
transmission is initiated and completed by explicit send and receive service
calls in the source text of the sending and receiving thread, the send and
receive order of the two communicating threads must be assured.  A method of
implementation may choose not to support immediate and delayed connections
across synchronization domains.</span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">All data values that arrive at the data ports of
a receiving thread are immediately transferred at the logical arrival time into
the storage resources associated with those features in the source text and
binary image associated with that thread.  A consequence of the semantic rules
for data connections is that the logical arrival time of a data value to a data
port contained in a thread always occurs either when that thread is
dispatchable or during an interval of time between a dispatch event and a
delayed start of execution, e.g., due to an immediate connection.  That is,
data values will never be transferred into a thread’s data ports between the
time it starts executing and the time it completes executing and suspends
awaiting a new dispatch unless such an input time is specified through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Time</span><span lang="EN-US">
property.</span></p>

<p class="Note"><span lang="EN-US">Arriving event and event data values may be
queued in accordance with the queuing rules defined in the port features
section.  A consequence of the semantic rules for event and event data
connections is that there will be exactly one dispatch of a receiving thread
for each arriving event or event data value that is not lost due to queue
overflow, and event data values will never be transferred into a thread between
the time it starts executing and the time it completes and suspends awaiting a
new dispatch.</span></p>

<h2><a name="_Toc318320347"></a><a name="_Toc169684103"></a><a name="_Toc167033753"></a><a name="_Toc168661870"></a><a name="_Toc86725678"></a><a name="_Toc86220715"></a><a name="_Toc86220247"></a><a name="_Toc86219870"></a><a name="_Toc86219765"></a><a name="_Toc79295000"></a><a name="_Ref67283136"><span lang="EN-US">9.3<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Parameter Connections</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Parameter connections represent flow of data between the parameters
of a sequence of subprogram calls in a thread.  Parameter connections may be
declared from an incoming data or event data port  of the containing thread to
an incoming parameter of a subprogram call. Parameter connections also specify
connections from an incoming parameter of the containing subprogram to an
incoming parameter of a subprogram call, from an outgoing parameter of a
subprogram call to an outgoing<b> </b>parameter of the containing subprogram,
and from an outgoing parameter of a subprogram call to an incoming parameter of
a subprogram call or to an outgoing<b> </b>data or event data<b> </b>port of
the containing thread.  In addition, parameters may be connected to data
components (either to data subcomponents or data access features) to represent
data flowing to and from static and local variables.  In summary, the parameter
connections follow the containment hierarchy of subprogram calls nested in
other subprograms.  This is illustrated in </span><span lang="EN-US">Figure 18</span><span lang="EN-US">.  The call order is from left to
right.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="481" height="143" alt="figure13" id="Picture 26" src="imgs/image030.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320427"></a><a name="_Toc167033815"></a><a name="_Toc86591135"></a><a name="_Toc79295062"></a><a name="_Ref67063819"><span lang="EN-US">Figure </span></a><span lang="EN-US">18</span><span lang="EN-US">
Parameter Connections</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">For parameter connections, data transfer occurs at the time of the
subprogram call and call return.  In the  case of subprogram calls to remote subprograms,
the data is first transferred to a local proxy and from there passed to the
remote subprogram.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="ParameterConnection"><span lang="EN-US">parameter_connection ::=</span></a></pre><pre><span lang="EN-US">    <b>parameter</b> <i>source_</i>parameter_reference</span></pre><pre><span lang="EN-US">        directional_connection_symbol <i>destination_</i>parameter_reference</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">parameter_connection_refinement ::=</span></pre><pre><span lang="EN-US">    <b>parameter</b>         </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">parameter_reference ::= </span></pre><pre><span lang="EN-US">        -- parameter in the thread or subprogram type </span></pre><pre><span lang="EN-US">      <i>component_type_parameter</i>_identifier [ . <i>data_subcomponent</i>_identifier ]</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- parameter in another subprogram call </span></pre><pre><span lang="EN-US">      <i>subprogram_call</i>_identifier <b>.</b> <i>parameter</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data or event data port in the thread type </span></pre><pre><span lang="EN-US">        -- or an element of that port’s data</span></pre><pre><span lang="EN-US">      </span><i><span lang="FR">component_type_port</span></i><span lang="FR">_identifier [ . <i>data_subcomponent</i>_identifier ]</span></pre><pre><span lang="FR">    </span><span lang="EN-US">|   </span></pre><pre><span lang="EN-US">        -- data subcomponent in the thread or subprogram</span></pre><pre><span lang="EN-US">      <i>data_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- requires data access in the thread or subprogram type</span></pre><pre><span lang="EN-US">      <i>requires_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |</span></pre><pre><span lang="EN-US">        -- data access element in a feature group of the component type</span></pre><pre><span lang="EN-US">     <i>component_type_feature_group</i>_identifier . <i>element_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- port or parameter element in a feature group of the component type</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">      <i>component_type_feature_group</i>_identifier  . <i>element_port_or_parameter</i>_identifier </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The connection identifier in a parameter
connection refinement declaration must refer to a named parameter or feature connection
declared in an ancestor component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A source (destination) reference in a parameter
connection declaration must reference a parameter of a preceding (succeeding)
subprogram call, a parameter declared in the component type of the containing
subprogram, a data port or event data port declared in the component type of
the enclosing thread, a data port or event data port that is an element of a feature
group in the component type of the enclosing thread, a data subcomponent, or a
requires data access to a data component.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The source of a parameter connection must be an
incoming data or event data port of the containing thread, an incoming
parameter of the containing subprogram, or a data subcomponent or requires data
access with read-only or read-write access rights, or an outgoing parameter of
a previous subprogram call. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The following source/destination pairs are
acceptable for parameter connection declarations:  </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoTableGrid" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="325" valign="top" style="width: 243.9pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">threadport -&gt; call.parameter</span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">requiresdataaccess -&gt; call.parameter</span></p>
  </td>
 </tr>
 <tr>
  <td width="325" valign="top" style="width: 243.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">threadfeaturegroup.port -&gt;
  call.parameter</span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">featuregroup.requiresdataaccess -&gt;
  call.parameter</span></p>
  </td>
 </tr>
 <tr>
  <td width="325" valign="top" style="width: 243.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt; threadport </span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt; requiresdataaccess </span></p>
  </td>
 </tr>
 <tr>
  <td width="325" valign="top" style="width: 243.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt;
  threadfeaturegroup.port</span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt; featuregroup.requiresdataaccess</span></p>
  </td>
 </tr>
 <tr>
  <td width="325" valign="top" style="width: 243.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt;
  threadincompletefeaturegroup</span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt; datasubcomponent</span></p>
  </td>
 </tr>
 <tr>
  <td width="325" valign="top" style="width: 243.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">containedcall.parameter -&gt; parameter</span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">datasubcomponent -&gt; call.parameter</span></p>
  </td>
 </tr>
 <tr>
  <td width="325" valign="top" style="width: 243.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">parameter -&gt; containedcall.parameter</span></p>
  </td>
  <td width="324" valign="top" style="width: 243pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">call.parameter -&gt; call.parameter</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A parameter cannot be the destination feature
reference of more than one parameter connection declaration unless the source
feature reference of each parameter connection declaration is contained in a
different mode.  In this case, the restriction applies for each mode. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The data classifier of the source and
destination must match. The matching rules as specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule</span><span lang="EN-US"> property apply (see Section </span><span lang="EN-US">9.2</span><span lang="EN-US"> </span><span lang="EN-US">(L13)</span><span lang="EN-US">).  By default the data classifiers
must be match.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Parameter connections represent sequential flow of data through
subprogram parameters in a sequence of subprogram calls being executed by a
thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Parameter connections are restricted to 1-n connectivity, i.e., a
data port or parameter can have multiple outgoing connections, but only one
incoming connection.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a subprogram has an <b>in out</b> parameter, this parameter may
be the destination of an incoming parameter connection and the source of
outgoing parameter connections.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Parameter connections follow the call sequence order of subprogram
calls.  In other words, parameter connection sources must be preceding
subprogram calls, and parameter connection destinations must be successor
subprogram calls.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The optional </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes_and_transitions</span><span lang="EN-US"> subclause specifies what modes the parameter connection is part
of.  The detailed semantics of this subclause are defined in Section </span><span lang="EN-US">12</span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading" style="margin-left: 28.8pt;"><span lang="EN-US">Examples</span></p>

<p class="Note"><span lang="EN-US">NOTE: An example of parameter connections can be
found in Section </span><span lang="EN-US">5.2</span><span lang="EN-US">.</span></p>

<h2><a name="_Toc318320348"></a><a name="_Ref212890795"></a><a name="_Ref207113957"></a><a name="_Ref171675463"></a><a name="_Ref171675457"></a><a name="_Toc169684104"></a><a name="_Toc168661871"></a><a name="_Toc167033754"></a><a name="_Ref166039041"></a><a name="_Ref138695721"></a><a name="_Toc86725679"></a><a name="_Toc86220716"></a><a name="_Toc86220248"></a><a name="_Toc86219871"></a><a name="_Toc86219766"></a><a name="_Toc79295001"></a><a name="_Toc207300356"></a><a name="_Toc208652777"></a><a name="_Toc208658097"></a><a name="_Toc209171618"></a><a name="_Toc209177904"></a><a name="_Toc209239637"></a><a name="_Toc209243983"></a><a name="_Toc209354893"></a><a name="_Toc209421359"></a><a name="_Toc71827055"></a><a name="_Toc71893731"></a><a name="_Toc72041219"></a><a name="_Toc72132905"></a><a name="_Toc72133003"></a><a name="_Toc72133101"></a><a name="_Toc72223013"></a><a name="_Toc72322066"></a><span lang="EN-US">9.4<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Access Connections</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Access connections represent access to shared data components by
concurrently executing threads or by subprograms executing within thread. They
also denote communication between processors, memory, and devices by accessing
a shared bus.  Finally, they represent a subprogram call to a specific instance
of a subprogram or subprogram group.  If the subprogram or subprogram group
resides in a different thread, then the call is treated as a remote call. Access
connections for subprograms and buses are bidirectional.  Data and bus access
connections may be bidirectional or directional.  If they are directional they
indicate write or read access to the data component or bus component. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>semantic access connection</i> is defined by a sequence of one
or more individual access connection declarations that follow the component
containment hierarchy from an <i>ultimate source</i> to an <i>ultimate
destination</i>.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the case of bidirectional connections either the subcomponent
being accessed or the feature that requires access can be the ultimate source
or destination. In the case of directional data access connections the ultimate
source is the source of the data flow, i.e., the data component in the case of
a read access and the ultimate destination in the case of a write access.  In
the case of partial AADL models, the ultimate source or destination may be a
provides access feature of a component without subcomponents. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Figure 19</span><span lang="EN-US"> illustrates a semantic data
connection from the data component D to thread Q.  The access connection is
bidirectional, thus, the data component could be the ultimate destination as
well.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="431" height="168" src="imgs/image031.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320428"></a><a name="_Toc167033816"></a><a name="_Toc86591136"></a><a name="_Toc79295063"></a><a name="_Ref71826225"></a><a name="_Ref71826232"><span lang="EN-US">Figure </span></a><span lang="EN-US">19</span><span lang="EN-US"> Semantic Access Connection</span><span lang="EN-US"> For Data Components</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The flow of data of a semantic data or bus access connection is
determined by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property on the shared component or the access feature.  In the
case of a directional access connection and the connection direction must be
consistent with the access rights.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="AccessConnection"><span lang="EN-US">access_connection ::=</span></a></pre><pre><span lang="EN-US">    [ <b>bus</b> | <b>subprogram</b> | <b>subprogram group </b>| <b>data</b> ] <b>access</b> </span></pre><pre><span lang="EN-US">     <i>source</i>_access_reference  connection_symbol <i>destination_</i>access_reference<i> </i></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">access_connection_refinement ::=</span></pre><pre><span lang="EN-US">      [ <b>bus</b> | <b>subprogram</b> | <b>subprogram group </b>| <b>data</b> ] <b>access</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">access_reference ::= </span></pre><pre><span lang="EN-US">        -- requires or provides access feature in the component type </span></pre><pre><span lang="EN-US"> </span></pre><pre><i><span lang="EN-US">      requires_access</span></i><span lang="EN-US">_identifier | <i> provides_access_</i>identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- requires or provides access feature in a feature group of the component type </span></pre><pre><i><span lang="EN-US">      feature_</span></i><span lang="EN-US">group_identifier <b>. </b><i>requires_access</i>_identifier </span></pre><pre><span lang="EN-US">    |   </span></pre><pre><i><span lang="EN-US">      feature_</span></i><span lang="EN-US">group_identifier <b>. </b><i>provides_access</i>_identifier </span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">       -- provides or requires access in a subcomponent </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>provides_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>requires_access</i>_identifier</span></pre><pre><span lang="EN-US">    | </span></pre><pre><span lang="EN-US">      <i>subprogram_call</i>_identifier <b>.</b> <i>requires_or_provides_access</i>_identifier</span></pre><pre><span lang="EN-US">        -- data, subprogram, subprogram group or bus being accessed</span></pre><pre><span lang="EN-US">      <i>data_subprogram_subprogram_group_or_bus_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- subprogram a processor being accessed</span></pre><pre><span lang="EN-US">      <b>processor .</b> <i>provides_subprogram_access</i>_identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The connection identifier in an access
connection refinement declaration must refer to a named access or feature connection
declared in an ancestor component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">An access reference in an access connection
declaration must reference an access feature of a subcomponent, subprogram
call, or <b>processor</b>, an access feature in the component type of the
containing component, an access feature in a feature group of the containing
component type, or a data, bus, subprogram, or subprogram group subcomponent.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The category of the source and the destination
of a access connection declaration must be the same, i.e., they must both be <b>data</b>,
<b>bus</b>, <b>subprogram</b>, or <b>subprogram group</b>, or their respective
access feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of a bidirectional semantic access
connection either connection end can be the source. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In the case of a directional data or bus access
connection the connection end representing the component being accessed must be
the source for read access, and the destination for write access, i.e., the
direction declared for the access connection must be compatible with the
direction of the data flow for reading or writing based on the access rights.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In a partial AADL model the ultimate source or
destination may be a provides access feature of a component instead of the subcomponent.
</span></p>

<p class="MsoNormal"><span lang="EN-US">The <b>provides</b> and <b>requires</b>
indicators of source and destination access features must satisfy the following
rules:</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the access connection declaration represents
an access connection between access features of sibling components, then the
source must be a <b>provides</b> access, and the destination must be a <b>requires</b>
access.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the access connection declaration represents
a feature mapping up the containment hierarchy, then one connection end must be
a <b>provides</b> access of a subcomponent, or a data, subprogram, or bus
subcomponent; and the other connection end must be a <b>provides</b> access feature
of the enclosing component or a <b>provides </b>feature of a feature group of
the enclosing component.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the access connection declaration represents
a feature mapping down the containment hierarchy, then one connection end must
be a <b>requires</b> access of the enclosing component, a <b>requires </b>access
of a feature group of the enclosing component, or a data, subprogram, or bus
subcomponent;  and the other connection end must be a <b>requires</b> access of
a subcomponent.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A <b>requires</b> access cannot be the source or
destination feature reference of more than one access connection declaration
unless the source feature reference(s) of each access connection declaration is
(are) contained in a different mode.  In this case, the restriction applies for
each mode. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For access connections the classifier of the
provider access must match to the classifier of the requires access according
to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rules</span><span lang="EN-US"> property.  By default the classifiers must be the same (see Section
</span><span lang="EN-US">9.1</span><span lang="EN-US">).</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If more than one access feature in a semantic access connection has
an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property association, then the resulting property values must be
compatible.  This means that the provider must provide </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">read-only</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">read-write</span><span lang="EN-US">
access if the requirer specifies </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">read-only</span><span lang="EN-US">.  Similarly, the provider must
provide </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">write-only</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">read-write</span><span lang="EN-US"> access if the requirer specifies </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">write-only</span><span lang="EN-US">.  The
provider must provide </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">read-write</span><span lang="EN-US"> access if the requirer specifies </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">read-write</span><span lang="EN-US">.  Finally,
the provider must provide </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">by-method</span><span lang="EN-US"> access if the requirer specifies </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">by-method</span><span lang="EN-US"> access.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">The category of the access connection source and destination must be
identical. If the component category is specified as part of the connection
declaration, then it must be identical to that of the source and destination.  <b>Bus</b>,
<b>data</b>, <b>subprogram</b>, and <b>subprogram group</b> are acceptable
categories.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Connection_Pattern: <b>list of </b>Supported_Connection_Patterns </span></pre><pre><span lang="EN-US">Connection_Set: <b>list of </b>Connection_Pair </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A data access connection represents access to a shared data
component by concurrently executing threads or by subprograms executing within
thread.  A subprogram access or subprogram group access connection represents
access to subprogram code or a library that calls can be made to.  The call may
be a remote call. A bus access connection represents communication between
processors, memory, and devices by accessing a shared bus.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Access connections are restricted to 1-n connectivity, i.e., a data,
subprogram, or bus component can have multiple outgoing access connections, but
a <b>requires</b> access feature can only have one connection.  The restriction
of one connection applies to each mode, i.e., different incoming access
connections may exist in different modes, but not in the same mode.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The optional </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes</span><span lang="EN-US"> subclause specifies what modes the access connection is part of. 
The detailed semantics of this subclause are defined in Section </span><span lang="EN-US">12</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The actual data flow through data and bus access connections is
determined by the value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property on the shared data or bus component and their provides and
requires access declarations.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Read</span><span lang="EN-US"> means flow of data from the shared component to the component
requiring access, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">write</span><span lang="EN-US"> means flow of data from the component requiring access to the
shared component.  The desired data flow can also be indicated by specifying
the direction in the access connection declaration.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
connection patterns for component arrays described in Section </span><span lang="EN-US">9.2.3</span><span lang="EN-US"> apply to access connections as well.</span></p>

<h2><a name="_Toc86725680"></a><a name="_Toc86220717"></a><a name="_Toc86220249"></a><a name="_Toc86219872"></a><a name="_Toc86219767"></a><a name="_Toc79295002"></a><a name="_Toc318320349"></a><a name="_Ref205519522"></a><a name="_Ref193790364"></a><a name="_Ref179958211"></a><a name="_Toc169684105"></a><a name="_Toc167033755"></a><a name="_Toc168661872"></a><a name="_Toc71827057"></a><a name="_Toc71893733"></a><a name="_Toc72041221"></a><a name="_Toc72132907"></a><a name="_Toc72133005"></a><a name="_Toc72133103"></a><a name="_Toc72223015"></a><a name="_Toc72322068"></a><span lang="EN-US">9.5<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Feature Group Connections</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Feature group connections represent a collection of connections
between groups of features of different components. </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre><a name="FeatureGroupConnection"><span lang="EN-US">-- connection between feature groups of two subcomponents or between</span></a></pre><pre><span lang="EN-US">-- a feature group of a subcomponent and a feature group in the component type</span></pre><pre><span lang="EN-US">feature_group_connection ::=</span></pre><pre><span lang="EN-US">     <b>feature group</b> <i>source</i>_feature_group_reference </span></pre><pre><span lang="EN-US">        connection_symbol <i>destination</i>_feature_group_reference<i> </i></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">-- A feature group refinement can only add properties</span></pre><pre><span lang="EN-US">-- The source and destination of the connection does not have to be repeated</span></pre><pre><span lang="EN-US">feature_group_connection_refinement ::=</span></pre><pre><span lang="EN-US">        <b>feature group</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_reference ::= </span></pre><pre><span lang="EN-US">        -- feature group in the component type </span></pre><pre><span lang="EN-US">      <i>component_type_feature_group</i>_identifier </span></pre><pre><span lang="EN-US">    | </span></pre><pre><span lang="EN-US">        -- feature group in a subcomponent </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>feature_group</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- feature group element in a feature group of the component type</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">      <i>component_type_feature_group</i>_identifier . </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">          <i>element_feature_group_</i>identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The connection identifier in a feature group
connection refinement declaration must refer to a feature group named
connection declared in an ancestor component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A source or destination reference in a feature
group connection declaration must reference a feature group declared in the
component type, a feature group of one of the subcomponents, or feature group
that is an element of a feature group in the component type. The subcomponent
reference may also consist of a reference on a subcomponent array. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature group connection declaration
represents a component connection between sibling components, the feature group
types must be complements.  This may be indicated by both feature group
declarations referring to the same feature group type and one feature group
declared as <b>inverse of</b>, by the feature group type of one feature group
being declared as the <b>inverse of </b>the feature group type of the other feature
group, or by the two referenced feature group types meeting the complement
requirements as defined in Section </span><span lang="EN-US">8.2</span><span lang="EN-US">.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule</span><span lang="EN-US"> property
specifies the rule to be applied to match the feature group classifier of a
connection source to that of a connection destination.</span></p>

<p class="Legalityrule"><a name="_Ref193790437"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The following rules are supported for feature
group connection declarations that represent a connection up or down the
containment hierarchy:</span></a></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Match</span><span lang="EN-US">: The source feature group type must be identical to the feature
group type of the destination.  This is the default rule.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Equivalence</span><span lang="EN-US">: An indication that the two classifiers of a connection are
considered to match if they are listed in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Equivalence_Matches</span><span lang="EN-US"> property. Matching feature group types are specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Equivalence_Matches</span><span lang="EN-US"> property with pairs of classifier values representing acceptable
matches.  Either element of the pair can be the source or destination
classifier. Equivalence is intended to be used when the feature group types are
considered to be identical, i.e., their elements match. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Equivalence_Matches</span><span lang="EN-US"> property is declared globally as a property constant.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subset</span><span lang="EN-US">: An indication that the two classifiers of a connection are
considered to match if the outer feature group has outcoming features that are
a subset of outgoing features of the inner feature group, and if the inner
feature group has incoming features that are a subset of incoming features of
the outer feature group. The pairs of features are expected to have the same
name.</span></p>

<p class="Legalityrule"><a name="_Ref193790440"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The following rules are supported for feature
group connection declarations that represent a connection between two
subcomponents, i.e., sibling component:</span></a></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Match</span><span lang="EN-US">: The source feature group type must be the complement of the
feature group type of the destination.  This is the default rule.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complement</span><span lang="EN-US">: An indication that the two classifiers of a connection are
considered to complement if they are listed in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Complement_Matches</span><span lang="EN-US"> property. Matching feature group types are specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Complement_Matches</span><span lang="EN-US"> property with pairs of classifier values representing acceptable
matches.  Either element of the pair can be the source or destination
classifier. Complement is intended to be used when the feature group types are
considered to be identical, i.e., their elements match. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Complement_Matches</span><span lang="EN-US"> property is declared globally as a property constant.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subset</span><span lang="EN-US">: An indication that the two classifiers of a connection are
considered to match if each has incoming features that are a subset of outgoing
features of the other. The pairs of features are expected to have the same
name.</span></p>

<p class="MsoNormal"><span lang="EN-US">A feature group may have a direction
declared; otherwise it is considered bidirectional. The direction declared for
the destination feature group of a feature group connection declaration must be
compatible with the direction declared for the source feature group as defined
by the following rules:  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature group connection declaration
represents a connection between feature group of sibling components, then the
source must be an outgoing feature group and the destination must be an incoming
feature group.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature group connection declaration
represents a connection between feature groups up the containment hierarchy,
then the source and destination must both be an outgoing feature group.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the feature group connection declaration
represents a connection between feature groups down the containment hierarchy,
then the source and destination must both be an incoming feature group.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A feature group connection must be bidirectional
or be consistent with the direction of the source and destination feature.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Connection_Pattern: <b>list of </b>Supported_Connection_Patterns </span></pre><pre><span lang="EN-US">Connection_Set: <b>list of </b>Connection_Pair </span></pre><pre><span lang="EN-US"><span class="CODE">Transmission_Type: </span><b>enumeration</b> ( push, pull )</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre><span lang="EN-US">Not_Collocated: <b>record </b>( </span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></pre>

<p class="DescriptionHeading"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">These connections represent a collection of <i>semantic connections</i>
between the individual features in each group.  A semantic feature connection
is determined by a sequence of one or more individual connection declarations
that follow the component containment hierarchy in a fully instantiated system
from an <i>ultimate source</i> to an <i>ultimate destination</i>.  As the
connection declarations follow the component containment hierarchy they may
involve the aggregation of features into feature groups up the hierarchy and
decomposition into individual features down the hierarchy.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Feature groups and feature group connections may impose a
restriction on the direction of the collection of features and connections the
represent.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">When an AADL model with a thread architecture and fully detailed
feature groups is instantiated, each semantic connection of feature group
elements is included in the instance model.  If the feature groups of such a
model are incomplete a connection instance between the feature group instances
is created. If the AADL model is not fully detailed to the thread level,
connection instances are created between the leaf components in the system
hierarchy.</span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"><a name="274025e6-2427-4926-a460-ae6c74c89ea6" id="id_274025e6-2427-4926-a460-ae6c74c89ea6" class="requality_id"></a>package
</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">Example3</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">public</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">-- A
simple example showing a system with two processes and threads.</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">data</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Alpha_Type</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">properties</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Source_Data_Size =&gt; 256 Bytes;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Alpha_Type;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">feature group</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> xfer_plug</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">features</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Alpha : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">out data port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Alpha_Type;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Beta : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">in data port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Alpha_Type;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
xfer_plug;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">feature group</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> xfer_socket</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   inverse of</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> xfer_plug</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
xfer_socket;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> P</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">features</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Data_Source : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">out data port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Alpha_Type;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> P;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread implementation</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> P.Impl</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">properties</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Dispatch_Protocol=&gt;Periodic;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Period=&gt; 10 ms;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
P.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">process</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> A</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">features</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Produce : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">feature group</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
xfer_plug;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end </span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">A;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> A.Impl</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">subcomponents</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Producer : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> P.Impl; </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Result_Consumer : thread Q.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">connections</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">  daconn: </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Producer.Data_Source -&gt; Produce.Alpha;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">  bdconn: </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Produce.Beta -&gt;
Result_Consumer.Data_Sink;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
A.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Q</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">features</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Data_Sink : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">in data port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Alpha_Type;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Q;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread implementation</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Q.Impl</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">properties</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Dispatch_Protocol=&gt;Periodic;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Period=&gt; 10 ms;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Q.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">process</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> B</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">features</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Consume : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">feature group</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
xfer_socket;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> B;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> B.Impl</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">subcomponents</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Consumer : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Q.Impl; </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   Result_Producer : </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">thread</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
P.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">connections</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">  adconn: </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Consume.Alpha -&gt;
Consumer.Data_Sink;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">  dcconn: </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">port</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Result_Producer.Data_Source -&gt; Consume.Beta;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
B.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">system</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Simple</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Simple;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> </span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6"> Simple.Impl</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">subcomponents</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   pr_A : process A.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   pr_B : process B.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">connections</span></span></b></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">   fgconn: </span><b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">feature group</span></b><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
pr_A.Produce &lt;-&gt; pr_B.Consume;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end</span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">
Simple.Impl;</span></span></p><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">end </span></span></b><span lang="EN-US"><span class="requality_text id_274025e6-2427-4926-a460-ae6c74c89ea6">Example3;</span></span></p>

<h1 style="margin-top: 12pt; line-height: 12pt;"><a name="_Toc318320350"></a><a name="_Ref178094473"></a><a name="_Ref178094467"></a><a name="_Toc169684106"></a><a name="_Toc167033756"></a><a name="_Toc168661873"><span lang="EN-US">10<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Flows</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>flow</i> is a logical flow of data and control through a
sequence of threads, processors, devices, and port connections or data access
connections. A component can have a flow specification, which specifies whether
a component is a flow source, i.e., the flow starts within the component, a
flow sink, i.e., the flow ends within the component, or there exists a flow
path through the component, i.e., from one of its incoming ports to one of its
outgoing ports.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The purpose of providing the capability of specifying end-to-end
flows is to support various forms of flow analysis, such as end-to-end timing
and latency, reliability, numerical error propagation, Quality of Service (QoS)
and resource management based on operational flows. To support such analyses,
relevant properties are provided for the end-to-end flow, the flow
specifications of components, and the ports involved in the flow to be
analyzed.  For example, to deal with end-to-end latency the end-to-end flow may
have properties specifying its expected maximum latency and actual latency. In
addition, ports on individual components may have flow specific properties,
e.g., an <b>in</b> port property specifies the expected latency of data
relative to its sensor sampling time or in terms of end-to-end latency from
sensor to actuator to reflect the latency assumption embedded in its
extrapolation algorithm.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Flows are represented by flow specification, flow implementation,
and end-to-end flow declarations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow specification declaration in a component type specifies an
externally visible flow through a component’s ports, feature groups, parameters,
or data access features.  The flow through a component is called a <i>flow path</i>.
A flow originating in a component is called the <i>flow source</i>.  A flow
ending in a component is called the <i>flow sink</i>.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow implementation declaration in a component implementation
specifies how a flow specification is realized in the implementation as a
sequence of flows through subcomponents along connections from the flow
specification origin to the flow specification destination.  This is
illustrated in </span><span lang="EN-US">Figure 20</span><span lang="EN-US">.  The
system type S1 is declared with three ports and two flow specifications.  These
are the flows through system S1 that are externally visible.  In the example,
both flows are flow paths, i.e., they flow through the system.  The ports
identified by the flow specification do not have to have the same data type,
nor do they have to be the same port type, i.e., one can be an event port and
the other an event data port.  This allows flow specifications to be used to
describe logical flows of information.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The system implementation for system S1 is shown on the right of </span><span lang="EN-US">Figure 20</span><span lang="EN-US">.  It contains two process
subcomponents P1 and P2.  Each has two ports and a flow path specification as
part of its process type declaration.  The flow implementation of flow path F1
is shown in both graphical and textual form.  It starts with port pt1, as
specified in the flow specification.  It then follows a sequence of connections
and subcomponent flow specifications, modeled in the figure as the sequence of
connection C1, subcomponent flow specification P2.F5, connection C3,
subcomponent flow specification P1.F7, connection C5. The flow implementation
ends with port pt2, as specified in the flow specification for F1.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><i><span style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;; color: windowtext;"><img width="613" height="227" alt="figure15" id="Picture 28" src="imgs/image032.png" /></span></i></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320429"></a><a name="_Toc167033817"></a><a name="_Toc86591137"></a><a name="_Toc79295064"></a><a name="_Ref65125381"><span lang="EN-US">Figure </span></a><span lang="EN-US">20</span><span lang="EN-US"> Flow
Specification &amp; Flow Implementation</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An end-to-end flow is a logical flow through a sequence of system
components, i.e., threads, devices and processors.  An end-to-end flow is
specified by an end-to-end flow declaration.  End-to-end flow declarations are
declared in component implementations, typically the component implementation
in the system hierarchy that is the root of all threads, data components, processors,
and devices involved in an end-to-end flow.  The subcomponent identified by the
first subcomponent flow specification referenced in the end-to-end flow
declaration contains the system component that is the starting point of the
end-to-end flow.  Succeeding named subcomponent flow specifications contain
additional system components.  In the example shown in </span><span lang="EN-US">Figure 20</span><span lang="EN-US">, the flow specification F7 of
process P1 may have a flow implementation that includes flows through two
threads which is not included in this view of the model.    </span></p>

<h2><a name="_Toc318320351"></a><a name="_Toc169684107"></a><a name="_Toc167033757"></a><a name="_Toc168661874"></a><a name="_Toc86725681"></a><a name="_Toc86220718"></a><a name="_Toc86220250"></a><a name="_Toc86219873"></a><a name="_Toc86219768"></a><a name="_Toc79295003"><span lang="EN-US">10.1<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">Flow Specifications</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow specification declaration indicates that information
logically flows from one of its incoming ports, parameters, or feature groups
to one of its outgoing<b> </b>ports, parameters, or feature groups, or to and
from data components via data access.  The ports can be event, event data, or
data ports. A flow may start within the component, called a <i>flow source</i>. 
A flow may end within the component, called a <i>flow sink</i>.  Or a flow may
go through a component from one of its <b>in</b> or <b>in out</b> ports or
parameters to one of its <b>out</b> or <b>in out </b>ports or parameters,
called a <i>flow path</i>. A flow may also follow read or write access to data
components.  In the case of feature groups, there is a flow from a feature
group to its inverse.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Multiple flow specifications can be defined involving the same features.
For example, data coming in through an <b>in</b> feature group is processed and
derived data from one of the feature group’s contained ports is sent out
through different <b>out</b> ports.  </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="FlowSpec"><span lang="EN-US">flow_spec ::= </span></a></pre><pre><span lang="EN-US">   flow_source_spec </span></pre><pre><span lang="EN-US">   | flow_sink_spec </span></pre><pre><span lang="EN-US">   | flow_path_spec</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_spec_refinement ::= </span></pre><pre><span lang="EN-US">   flow_source_spec_refinement </span></pre><pre><span lang="EN-US">   | flow_sink_spec_refinement </span></pre><pre><span lang="EN-US">   | flow_path_spec_refinement</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_source_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> <b>flow source</b> <i>out_</i>flow_feature<i>_</i>identifier </span></pre><pre><span lang="EN-US">        </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ in_modes ] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_sink_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> <b>flow sink</b> <i>in_</i>flow_feature_identifier </span></pre><pre><span lang="EN-US">        </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ in_modes ] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_path_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> <b>flow path</b> <i>in</i>_flow_feature_identifier <b>-&gt;</b> </span></pre><pre><span lang="EN-US">                             <i>out</i>_flow_feature_identifier </span></pre><pre><span lang="EN-US">        </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ in_modes ] <b>;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">flow_source_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to flow source</b> </span></pre><pre><span lang="EN-US">        ( ( <b>{</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_transitions ] ) |</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">  in_modes_and_transitions ) <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_sink_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to flow sink</b> </span></pre><pre><span lang="EN-US">         ( ( <b>{</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_Transitions ] ) |</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">  in_modes_and_transitions ) <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_path_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to flow path </b></span></pre><pre><b><span lang="EN-US">         </span></b><span lang="EN-US">( (<b> {</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_transitions ] ) |</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">  in_modes_and_transitions ) <b>;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">flow_feature_identifier ::=</span></pre><pre><span lang="EN-US">    <i>feature</i>_identifier </span></pre><pre><span lang="EN-US">    | <i>feature_group</i>_identifier</span></pre><pre><span lang="EN-US">    | <i>feature_group</i>_identifier <b>.</b> <i>feature</i>_identifier</span></pre><pre><span lang="EN-US">    | <i>feature_group</i>_identifier <b>.</b> <i>feature_group</i>_identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_a4e9a786-1e12-43ae-a6e6-542cd550fc9e"><a name="a4e9a786-1e12-43ae-a6e6-542cd550fc9e" id="id_a4e9a786-1e12-43ae-a6e6-542cd550fc9e" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_a4e9a786-1e12-43ae-a6e6-542cd550fc9e">       
</span></span></span><span lang="EN-US"><span class="requality_text id_a4e9a786-1e12-43ae-a6e6-542cd550fc9e">The defining flow identifier of a flow specification
must be unique within the interface name space of the component type.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">flow feature identifier</span><span lang="EN-US"> in a flow
path must refer to a port, parameter, data access feature, or feature group in
the component type, or to a port, data access feature, or feature group
contained in a feature group in the component type.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining flow identifier of a flow
specification refinement must refer to a flow specification or refinement in an
ancestor component type.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The direction declared for the <i>out_flow</i> of
a flow path specification declaration must be compatible with the direction
declared for the <i>in_flow</i> as defined by the following rules:</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the <i>in_flow</i> is a port or parameter,
its direction must be must be an <b>in</b> or an <b>in out</b>. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the <i>out_flow</i> is a port or parameter,
its direction must be an <b>out</b> or an <b>in</b> <b>out</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the <i>in_flow</i> is a data access, its
access right must be must be </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Read_Only</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Read_Write</span><span lang="EN-US">. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the <i>out_flow</i> is a data access, its
direction must be </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Write_Only</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Read_Write</span><span lang="EN-US">.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the <i>in_flow</i> is a feature group then it
must contain at least one port or data access that satisfies the above rule, or
it must have an empty set of ports.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the <i>out_flow</i> is a feature group then
it must contain at least one port or data access that satisfies the above rule,
or it must have an empty set of ports.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The direction declared for the out flow of a
flow source specification declaration must be the same as for out flows in flow
paths.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The direction declared for the <i>in_flow</i> of
a flow sink specification declaration must be the same as for <i>in_flow</i> of
flow paths.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If the flow specification refers to a feature group then the feature
group must contain at least one port, data access, or parameter that satisfies
the above rules, or the feature group must have an empty list of features.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre style="page-break-after: avoid;"><span class="CODE"><span lang="EN-US">Latency: Time_Range</span></span></pre>

<p class="MsoNoteHeading"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">These properties are examples of properties for
latency and throughput analysis. Additional properties are also necessary on
ports to fully support throughput analysis, such as arrival rate and data
size.  Appropriate properties for flow analysis may be defined by the tool
vendor or user (see Section 11).</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow specification declaration represents a logical flow
originating from within a component, flowing through a component, or ending
within a component.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In case of a flow through a component, the component may transform
the input into a different form for output.  In case of data or event data
port, the data type may change. Similarly the flow path may be between
different port types, e.g., an event port and a data port, and between ports,
parameters, data access features, and feature groups. This permits end-to-end
flows to be specified as logical information flows through a system despite the
fact that the information is being manipulated and its representation changed. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"><a name="d2ddee68-a668-4e45-b9ae-5e0626f42554" id="id_d2ddee68-a668-4e45-b9ae-5e0626f42554" class="requality_id"></a>package</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
gps</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">public</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">data</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> signal_data</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> signal_data;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">  </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span style="color: rgb(127, 0, 85);"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">data</span></span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
commands</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span style="color: rgb(127, 0, 85);"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
commands ;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">data</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> position</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> position;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">data</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> implementation
position.radial</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> position.radial;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">data</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> implementation
position.cartesian</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> position.cartesian;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> gps;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">package</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> FlowExample</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">public</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">with </span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">process</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
foo </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">features</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Initcmd: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">in event port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">;   </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Signal: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">in data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::signal_data;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Result1: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">out data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::position.radial;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Result2: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">out data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::position.cartesian;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Status: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">out data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flows</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   </span></span><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">-- two flows
split from the same input  </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Flow1: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow path</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> signal -&gt;
result1;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Flow2: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow path</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> signal -&gt;
result2;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   -- An input is consumed by process foo
through its initcmd port</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Flow3: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow sink</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> initcmd;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   -- An output is generated (produced)
by process foo and made available</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   -- through its port Status; </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">   Flow4: </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow source</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> Status;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> foo;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">thread</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> bar</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">features</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     p1 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">in data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::signal_data;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     p2 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">out data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::position.radial;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     p3 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">out event port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     reset : </span><b><span style="color: rgb(127, 0, 85);"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">in</span></span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
</span><b><span style="color: rgb(127, 0, 85);"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">event</span></span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span><b><span style="color: rgb(127, 0, 85);"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">port</span></span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flows</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     fs1 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow path</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> p1 -&gt; p2;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     fs2 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow source</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> p3;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> bar;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">thread implementation</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> bar.basic</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
bar.basic;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">thread</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> baz</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">features</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     p1 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">in data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::position.radial;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     p2 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">out data port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> GPSLib::position.cartesian;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     reset : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">in event port</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flows</span></span></b></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     fs1 : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow path</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> p1 -&gt; p2;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">     fsink : </span><b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">flow sink</span></b><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> reset;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> baz;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> </span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">thread implementation</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554"> baz.basic</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
baz.basic;</span></span></p><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">end</span></span></b><span lang="EN-US"><span class="requality_text id_d2ddee68-a668-4e45-b9ae-5e0626f42554">
FlowExample;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2><a name="_Toc37240053"></a><a name="_Toc318320352"></a><a name="_Toc169684108"></a><a name="_Toc167033758"></a><a name="_Toc168661875"></a><a name="_Toc86725682"></a><a name="_Toc86220719"></a><a name="_Toc86220251"></a><a name="_Toc86219874"></a><a name="_Toc86219769"></a><a name="_Toc79295004"><span lang="EN-US">10.2<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">Flow Implementations</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component implementations must provide an implementation for each
flow specification.  A flow implementation declaration identifies the flow
through its subcomponents. In case of a flow source specification, it starts
from the flow source of a subcomponent or from the component implementation
itself and ends with the port named in the flow source specification.  In case
of a flow sink specification, the flow implementation starts with the port
named in the flow sink specification declaration and ends within the component
implementation itself or with the flow sink of a subcomponent. In case of a
flow path specification, the flow implementation starts with the <i>in_flow</i>
port and ends with the <i>out_flow</i> port.  Flow characteristics modeled by
properties on the flow implementation are constrained by the property values in
the flow specification.  Flow implementations can be declared to be
mode-specific.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="FlowImplementation"><span lang="EN-US">flow_implementation ::=</span></a></pre><pre><span lang="EN-US">    ( flow_source_implementation</span></pre><pre><span lang="EN-US">    | flow_sink_implementation</span></pre><pre><span lang="EN-US">    | flow_path_implementation )</span></pre><pre><span lang="EN-US">    </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+</sup> <b>}</b> ]</span></pre><pre><span lang="EN-US">    [ in_modes_and_transitions ] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_source_implementation ::=</span></pre><pre><span lang="EN-US">    <i>flow</i>_identifier : <b>flow source</b></span></pre><pre><span lang="EN-US">      {</span><span lang="EN-US"> subcomponent_flow_identifier <b>-&gt;</b> <i>connection</i>_identifier <b>-&gt;</b> }<sup>*</sup></span></pre><pre><span lang="EN-US">      <i>out_</i>flow_feature_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_sink_implementation ::=</span></pre><pre><span lang="EN-US">    <i>flow</i>_identifier : <b>flow sink</b></span></pre><pre><span lang="EN-US">      <i>in_</i></span><span lang="EN-US">flow_feature_identifier        </span></pre><pre><span lang="EN-US">      { <b>-&gt;</b></span><span lang="EN-US"> <i>connection</i>_identifier <b>-&gt;</b> subcomponent_flow_identifier }<sup>*</sup></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_path_implementation ::= </span></pre><pre><span lang="EN-US">    <i>flow</i>_identifier : <b>flow path</b></span></pre><pre><span lang="EN-US">      <i>in</i>_</span><span lang="EN-US">flow_feature_identifier        </span></pre><pre><span lang="EN-US">      [ { <b>-&gt;</b></span><span lang="EN-US"> <i>connection</i>_identifier <b>-&gt;</b> subcomponent_flow_identifier }<sup>+</sup></span></pre><pre><span lang="EN-US">         <b>-&gt;</b> <i>connection</i>_identifier ]</span></pre><pre><span lang="EN-US">      <b>-&gt;</b> <i>out</i>_flow_feature_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">subcomponent_flow_identifier ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    ( <i>subcomponent</i>_identifier [ <b>.</b> <i>flow_spec</i>_identifier ] ) </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    | data_component_reference</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">data_component_reference ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <i>data_subcomponent_</i>identifier | <i>requires_data_access</i>_identifier</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    | <i>provides_data_access</i>_identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">flow identifier </span><span lang="EN-US">of a flow
implementation must name a flow specification in the component type.  A<span class="requality_text id_a245361f-71a7-4ecc-bf15-e5a11e9093ff"><a name="a245361f-71a7-4ecc-bf15-e5a11e9093ff" id="id_a245361f-71a7-4ecc-bf15-e5a11e9093ff" class="requality_id"></a> flow
implementation name may appear more than once in each component implementation,
either as alternative flows under different modes or transitions (using </span><b><span class="requality_text id_a245361f-71a7-4ecc-bf15-e5a11e9093ff">in
modes</span></b><span class="requality_text id_a245361f-71a7-4ecc-bf15-e5a11e9093ff">), or to represent multiple flows for the same flow specification such
as replicated flows to support redundancy or different flows for different
elements of feature groups.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The <i>in_</i></span><i><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">flow</span></i><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> and <i>out_flow</i> feature
identifier</span><span lang="EN-US"> in a flow implementation must refer to the
same <i>in_flow</i> and <i>out_flow</i> feature as the flow specification it
implements. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">subcomponent flow identifier</span><span lang="EN-US"> of a
flow implementation must name a subcomponent and optionally a flow
specification in the component type of the named subcomponent, or it must name
a data component in the form of a data subcomponent, provides data access, or
requires data access.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">In case of a flow source implementation the flow
identifier of the first subcomponent must refer to a flow source or a data
component.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">In case of a flow sink implementation the flow
identifier of the last subcomponent must refer to a flow sink or a data
component.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">In all other cases the subcomponent flow
identifier must refer to a flow path or a data component.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">connection identifier</span><span lang="EN-US"> in a flow
implementation must refer to a connection in the component implementation.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The source of a connection named in a flow
implementation declaration must be the same as the <i>in_flow</i> feature of
the flow implementation, or as the out flow feature of the directly preceding
subcomponent flow specification, if present.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The destination of a connection named in a flow
implementation declaration must be the same as the out flow feature of the flow
implementation, or as the in_flow feature of the directly succeeding
subcomponent flow specification, if present.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The <i>in_flow</i> feature of a flow
implementation must be identical to the <i>in_flow</i> feature of the
corresponding flow specification. The <i>out_flow</i> feature of a flow
implementation must be identical to the <i>out_flow</i> feature of the corresponding
flow specification.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the component implementation provides
mode-specific flow implementations, as indicated by the </span><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in</span></b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> <b>modes</b></span><span lang="EN-US">
statement, then the set of modes in the </span><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in</span></b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> <b>modes</b></span><span lang="EN-US"> statement
of all flow implementations for a given flow specification must include all the
modes for which the flow specification is declared.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In case of a mode-specific flow implementation,
the connections and the subcomponents named in the flow implementation must be
declared at least for the modes listed in the </span><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in</span></b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> <b>modes</b></span><span lang="EN-US"> statement
of the flow implementation.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Flow implementations may be declared from an <i>in_flow</i>
feature directly to an <i>out_flow</i> feature.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Component type extensions may refine flow
specifications and component implementation extensions may refine subcomponents
and connections with </span><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in</span></b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> <b>modes</b></span><span lang="EN-US"> statements. A flow implementation that is inherited by the
extension must be consistent with the modes of the refined flow specifications,
subcomponents, and connections if named in the flow implementation according to
rules (L4) and (L5). Otherwise, the flow implementation has to be defined again
in the component implementation extension and satisfy rules (L4) and (L5).</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Component implementation extensions may declare
flow implementations for flow specifications that were already declared in the
component implementation being extended.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">If the component implementation has
subcomponents, then a flow implementation declaration is required for each flow
specification for a fully refined flow.  </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow implementation declaration represents the realization of a
flow specification in the given component implementation.  Different mode-specific
flow implementations may be declared for the same flow specification.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow path implementation starts with the port or data access named
in the corresponding flow specification, passes through zero or more
subcomponents, and ends with the port or data access named in the corresponding
flow specification (see </span><span lang="EN-US">Figure 20</span><span lang="EN-US">).  A flow source implementation ends with the port or data access
named in the corresponding flow specification.  A flow sink implementation
starts with the port or data access named in the corresponding flow
specification. A flow path implementation may specify a flow that goes directly
from an <i>in_flow</i> feature to an <i>out_flow</i> feature without any connections
in between.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow implementation may refer to subcomponents without identifying
a flow specification in the subcomponent.  In this case,  (a) an unnamed flow
specification is assumed to exist from the destination port of the preceding
connection to the source port of the succeeding connection if no flow
specification is declared for the subcomponent, (b) it represents a separate
flow for each of the flow specifications of the subcomponent.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow implementation within a thread may be modeled as flow through
subprogram calls via their parameters.  If the call is to a subprogram via a
subprogram access feature, the flow goes to the subprogram instance being
called.  This may be a subprogram in a different thread that is called
remotely.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A flow through a component may transform the input into a different
form for output.  In case of data, event data port, or data access, the data
type may change. Similarly the flow path may be between different port types, between
ports and feature groups, and between data access and ports or feature groups.
This permits end-to-end flows to be specified as logical information flows
through a system despite the fact that the information is being manipulated and
its representation changed. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The optional </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes_and_transitions</span><span lang="EN-US"> subclause specifies what modes the flow implementation is part of. 
The detailed semantics of this subclause are defined in Section </span><span lang="EN-US">12</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Flow specifications can have component implementation specific and
mode specific property values.  The respective property associations can be
declared in the properties subclause of the component implementation or as
property association with the flow implementation declaration.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"><a name="88335cb2-aceb-4f5d-a7fe-9846656c8ad9" id="id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9" class="requality_id"></a>-- This is
an AADL fragement</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">-- process
foo is declared in the previous section</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> foo.basic </span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">subcomponents</span></span></b></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   A: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">thread</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> bar.basic;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   -- bar has a flow path fs1 from port
p1 to p2</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   -- bar has a flow source fs2 to p3</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   B: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">thread</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> baz.basic; </span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   -- baz has a flow path fs1 from port
p1 to p2</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   -- baz has a flow sink fsink in port
reset</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">connections</span></span></b></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   conn1: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">port</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> signal -&gt; A.p1;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   conn2: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">port</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> A.p2 -&gt; B.p1;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   conn3: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">port</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> B.p2 -&gt; result2;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   conn4: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">port</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> A.p2 -&gt; result1;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   conn6: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">port</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> A.p3 -&gt; status;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   connToThread: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">port</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> initcmd -&gt; B.reset;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">flows</span></span></b></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   Flow1: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">flow path</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> </span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">            signal -&gt; conn1 -&gt;
A.fs1 -&gt; conn4 -&gt; result1;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   Flow2: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">flow path</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> </span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">            signal -&gt; conn1 -&gt;
A.fs1 -&gt; conn2 -&gt; </span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">            B.fs1 -&gt; conn3 -&gt;
result2;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   Flow3: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">flow sink</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> initcmd -&gt;
connToThread -&gt; C.fsink;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   -- a flow source may start in a
subcomponent, </span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   -- i.e., the first named element is a
flow source</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">   Flow4: </span><b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">flow source</span></b><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9"> A.fs2 -&gt;
conn6 -&gt; status;</span></span></p><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">end</span></span></b><span lang="EN-US"><span class="requality_text id_88335cb2-aceb-4f5d-a7fe-9846656c8ad9">
foo.basic;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2><a name="_Toc318320353"></a><a name="_Toc169684109"></a><a name="_Toc167033759"></a><a name="_Toc168661876"></a><a name="_Toc86725683"></a><a name="_Toc86220720"></a><a name="_Toc86220252"></a><a name="_Toc86219875"></a><a name="_Toc86219770"></a><a name="_Toc79295005"><span lang="EN-US">10.3<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">End-To-End Flows</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An end-to-end flow represents a logical flow of data and control from
a source to a destination through a sequence of threads that process and
possibly transform the data.  In a complete AADL specification, the source and
destination can be threads, data components, devices, and processors. In an
incomplete AADL specification, the source and destination are the leaf nodes in
the component hierarchy, which may be thread groups, processes, or systems.  If
the AADL specification includes subprogram calls, the end to end flow follows
the semantic connections between threads, processors, and devices, and the
parameter connections within threads.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="EndToEndFlow"></a><a name="FlowPath"><span lang="EN-US">end_to_end_flow_spec ::= </span></a></pre><pre><span lang="EN-US">    <i>defining_end_to_end_flow</i>_identifier : <b>end to end</b> <b>flow</b></span></pre><pre><span lang="EN-US">      <i>start</i></span><span lang="EN-US">_subcomponent_flow_or_etef_identifier  </span></pre><pre><span lang="EN-US">      { <b>-&gt;</b></span><span lang="EN-US"> <i>connection</i>_identifier </span></pre><pre><span lang="EN-US">        <b>-&gt;</b> <i>flow_path</i>_subcomponent_flow_or_etef_identifier }<sup>+</sup> </span></pre><pre><span lang="EN-US">    </span><span lang="EN-US">[ <b>{</b> ( property_association }<sup>+</sup> <b>}</b> ]</span></pre><pre><span lang="EN-US">    [ in_modes_and_transitions ] ;</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">end_to_end_flow_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_end_to_end_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to end to end flow</b> </span></pre><pre><span lang="EN-US">        ( <b>{</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_transitions ] </span></pre><pre><span lang="EN-US">        | in_modes_and_transitions </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">        ) <b>;</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">subcomponent_flow_or_etef_identifier ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">     subcomponent_flow_identifier | <i>end_to_end_flow_</i>identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ea43aa5d-6f67-4237-aac9-2ab6226de306"><a name="ea43aa5d-6f67-4237-aac9-2ab6226de306" id="id_ea43aa5d-6f67-4237-aac9-2ab6226de306" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ea43aa5d-6f67-4237-aac9-2ab6226de306">       
</span></span></span><span lang="EN-US"><span class="requality_text id_ea43aa5d-6f67-4237-aac9-2ab6226de306">The defining </span></span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ea43aa5d-6f67-4237-aac9-2ab6226de306">end-to-end flow identifier</span></span><span lang="EN-US"><span class="requality_text id_ea43aa5d-6f67-4237-aac9-2ab6226de306"> of an end-to-end flow declaration must be unique within the local
name space of the component implementation containing the end-to-end flow
declaration.</span> </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US">connection
identifier</span><span lang="EN-US"> in an end-to-end flow declaration must refer
to a connection in the component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US">subcomponent flow
identifier</span><span lang="EN-US"> of an end-to-end flow declaration must name
an optional flow specification in the component type of the named subcomponent
or to a data component in the form of a data subcomponent, provides data
access, or requires data access.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The end-to-end flow identifier referenced in an
end-to-end flow declaration must name an end-to-end flow in the name space of
the same component implementation.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of an end-to-end flow
refinement must refer to an end-to-end flow or refinement in an ancestor
component implementation.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The flow specifications identified by the </span><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">flow_path</span></i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">_subcomponent_flow_identifier</span><span lang="EN-US"> must be flow paths, if present.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The </span><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">start</span></i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">_subcomponent_flow_identifier</span><span lang="EN-US"> must refer to a flow path or a flow source, or to a data component. 
</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The </span><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">end</span></i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">_subcomponent_flow_identifier</span><span lang="EN-US"> must refer to a flow path or a flow sink, or to a data component.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If an end-to-end flow is referenced in an
end-to-end flow declaration, then its first and last subcomponent flow must
name the same port as the preceding or succeeding connection.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In case of a mode specific end-to-end flow
declarations, the named connections and the subcomponents of the named flow
specifications must be declared for the modes listed in the </span><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in modes</span></b><span lang="EN-US"> statement.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Actual_Latency: Time_Range</span></pre>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US"> NOTES:
</span></p>

<p class="Note"><span lang="EN-US">These properties are examples of properties for
latency and throughput analysis. The expected property values represent
constraints that must be satisfied by the actual property values of the
end-to-end flow.  The semantics of the constraint are analysis specific.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An end-to-end flow represents a logical flow of information through
a system instance.  The end-to-end flow is declared in a component
implementation that is the common root of all components involved in the flow.
The declared end-to-end flow starts with a subcomponent flow specification,
followed by zero or more connections and subcomponent flow specifications, and
ends with a connection and a subcomponent flow specification. The end-to-end
flow can involve active components such as threads, thread groups, processes,
systems, processors, and devices, as well as passive components in the form of
a data component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An end-to-end flow may refer to subcomponents without identifying a
flow specification.  In this case, the flow specification (a) refers to an
unnamed flow specification from the destination port of the preceding
connection and the source port of the succeeding connection if the subcomponent
has no declared flow specification, or (b) represents a separate end-to-end
flow for each of the flow specifications of the subcomponent.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An end-to-end flow may be specified as a composition of other
end-to-end flows, where the last element of the predecessor end-to-end flow is
connected with the first element of the successor end-to-end flow.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The corresponding end-to-end flow instance is determined by
expanding the flow specifications through their flow implementations.  The
resulting end-to-end flow instance starts from a device, processor, data
component, or thread that is the leaf of the component hierarchy of the first
subcomponent, follows semantic connections to intermediate threads and ends
with a thread, data component, device, or processor.  For incomplete models or
flow implementations  the components involved in the end-to-end flow instance
may be thread groups, processes, or systems.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If the first subcomponent flow specification is a flow path, then
the end-to-end flow instance starts with the first component of the flow path
expanded through its flow implementation. Similarly, if the last subcomponent
flow specification is a flow path, then the end-to-end flow instance ends with
the last component of the flow path expanded through its flow implementation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The optional </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">in_modes_and_transitions</span><span lang="EN-US"> subclause specifies what modes the end-to-end flow is part of.  The
detailed semantics of this subclause are defined in Section </span><span lang="EN-US">12</span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"><a name="04fcc5f7-ba7b-41bb-8140-8e894402749c" id="id_04fcc5f7-ba7b-41bb-8140-8e894402749c" class="requality_id"></a>-- This is
an AADL fragment</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">-- process
foo is declared in the previous section</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> foo.basic </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">subcomponents</span></span></b></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   A: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">thread</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> bar.basic;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- bar has a flow path fs1 from p1 to
p2</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- bar has a flow source fs2 to p3</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   B: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">thread</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> baz.basic; </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- baz has a flow path fs1 </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- baz has a flow sink fsink </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">connections</span></span></b></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   conn1: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> signal -&gt; A.p1;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   conn2: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> A.p2 -&gt; result1;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   conn3: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> B.p2 -&gt; result2;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   conn4: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> A.p2 -&gt; B.p1;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   conn5: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port </span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">A.p3 -&gt; Status;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   conn6: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port </span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">A.p3 -&gt; B.reset;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   </span></span><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">connToThread: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">port</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">
initcmd -&gt; A.reset;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">flows</span></span></b></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   Flow1: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">flow path</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">            signal -&gt; conn1 -&gt;
A.fs1 -&gt; conn2 -&gt; result1;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   Flow3: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">flow sink</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> initcmd -&gt;
connToThread -&gt; B.fsink;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- a flow source may start in a
subcomponent, </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- i.e., the first named element is a
flow source</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   Flow4: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">flow source</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> A.fs2 -&gt;
conn5 -&gt; status;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   -- an end-to-end flow from a source to
a sink</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   ETE1: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">end to end flow</span></b></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">           A.fs2 -&gt; conn6 -&gt; B.fsink; </span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   </span></span></b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">-- an
end-to-end flow where the end points are not sources or sinks</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">   ETE2: </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">end to end</span></b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c"> </span><b><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">flow </span></b></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">            A.fs1 -&gt; conn4 -&gt; B.fs1;</span></span></p><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">end</span></span></b><span lang="EN-US"><span class="requality_text id_04fcc5f7-ba7b-41bb-8140-8e894402749c">
foo.basic;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h1><a name="_Ref57451166"></a><a name="_Ref57451163"></a><a name="_Toc318320354"></a><a name="_Toc169684110"></a><a name="_Toc167033760"></a><a name="_Toc168661877"></a><a name="_Toc86725684"></a><a name="_Toc86220721"></a><a name="_Toc86220150"></a><a name="_Toc86219876"></a><a name="_Toc86219771"></a><a name="_Toc79295006"></a><a name="_Ref32731456"></a><a name="_Ref32731434"><span lang="EN-US">11<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Properties</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property provides information about model elements, i.e., component
types, component implementations, subcomponents, features, connections, flows,
modes, mode transitions, subprogram calls, and packages.  A property has a
name, a type, and a value.  The property definition declares a name for a given
property along with the AADL components and functionality to which the property
applies. The property type specifies the set of acceptable values for a
property.  Each property has a value or list of values that is associated with
the named property in a given specification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property set contains declarations of property types and property definitions
that may appear in an AADL specification.  The predeclared property sets in
this standard define properties and property types that are applicable to all
AADL specifications. Users may define property sets that are unique to their
model, project or toolset.  The properties and property types that are declared
in user-defined property sets are accessed using their qualified name.  A property
definition declaration within a property set indicates the component types,
component implementations, subcomponents, features, connections, flows, modes,
and subprogram calls, for which this property applies.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Properties can have associated expressions that are statically
typed, and evaluate to a specific value.  The time at which a property
expression is evaluated may depend on the property and on how a specification
is processed.  For example, some expressions may be evaluated immediately, some
after binding decisions have been made, and some reflect runtime state
information, e.g., the current mode.  During analysis, all property expressions
can be evaluated to known values, if necessary, by considering all possible
runtime states.  A given property definition may have a default expression.</span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320355"></a><a name="_Toc169684111"></a><a name="_Toc167033761"></a><a name="_Toc168661878"></a><a name="_Toc86725685"></a><a name="_Toc86220722"></a><a name="_Toc86220253"></a><a name="_Toc86219877"></a><a name="_Toc86219772"></a><a name="_Toc79295007"></a><a name="_Ref66585206"></a><a name="_Toc27797752"></a><a name="_Toc27449580"><span lang="EN-US">11.1<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">Property Sets</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property set defines a named group of property types, property
definitions, and property constant values.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PropertySet"><span lang="EN-US">property_set ::= </span></a></pre><pre><span lang="EN-US">    <b>property set</b> <i>defining_­property_set</i>_identifier <b>is</b> </span></pre><pre><span lang="EN-US">       { import_declaration }<sup>*</sup></span></pre><pre><span lang="EN-US">       { property_type_declaration </span></pre><pre><span lang="EN-US">         | property_definition_declaration </span></pre><pre><span lang="EN-US">         | property_constant }<sup>*</sup></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <b>end</b> <i>defining_property_set</i>_identifier ;</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_ddc574ce-ea9e-4926-911d-7b8d8fd075a1"><a name="ddc574ce-ea9e-4926-911d-7b8d8fd075a1" id="id_ddc574ce-ea9e-4926-911d-7b8d8fd075a1" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_ddc574ce-ea9e-4926-911d-7b8d8fd075a1">       
</span></span></span><span lang="EN-US"><span class="requality_text id_ddc574ce-ea9e-4926-911d-7b8d8fd075a1">Property set defining identifiers must be unique
in the global namespace.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9"><a name="05e30c0c-b86d-4bc5-ae32-5544ee1abca9" id="id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9" class="requality_id"></a>(N2)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9">       
</span></span></span><span lang="EN-US"><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9">The defining identifier following the reserved
word </span><b><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9">end</span></b><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9"> must be identical to the defining identifier following the
reserved word </span><b><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9">property</span></b><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9"> </span><b><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9">set</span></b><span class="requality_text id_05e30c0c-b86d-4bc5-ae32-5544ee1abca9">.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_92a04fa1-ca8f-4fd3-b9d0-8206b93befb2"><a name="92a04fa1-ca8f-4fd3-b9d0-8206b93befb2" id="id_92a04fa1-ca8f-4fd3-b9d0-8206b93befb2" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_92a04fa1-ca8f-4fd3-b9d0-8206b93befb2">       
</span></span></span><span lang="EN-US"><span class="requality_text id_92a04fa1-ca8f-4fd3-b9d0-8206b93befb2">Associated with every property set is a </span></span><i><span lang="EN-US"><span class="requality_text id_92a04fa1-ca8f-4fd3-b9d0-8206b93befb2">property set namespace</span></span></i><span lang="EN-US"><span class="requality_text id_92a04fa1-ca8f-4fd3-b9d0-8206b93befb2"> that contains the
defining identifiers for all property types, property definitions, and property
constants declared within that property set.  This means that property types, properties,
and property constants with the same identifier can be declared in different
property sets.  </span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A property, property constant, or property type
declared in a property set is always named by its qualified name that is the
property set identifier followed by the property identifier, separated by a
double colon (“::”).  This qualification is necessary even for references to
properties, property constants, and property types in the same property set due
to the fact that predeclared properties do not have to be qualified. Predeclared
properties and property types may be referred to by their property identifiers
without a property set qualifier.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The property set identifiers and package names listed
in an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration</span><span lang="EN-US"> must exist in the global namespace.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The property set identifier of a qualified property
name must be listed in an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration
</span><span lang="EN-US">of the property set or package unless it is the name of
the property set that contains the qualified name.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Property definitions, property types, and property constants are
organized into property sets. They are referenced by qualifying them with the
property set name.  This qualification is not required if the property set is
one of the predeclared property sets.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">import_declaration
</span><span lang="EN-US">of a property set specifies which property sets and
packages can be named in qualified references to items in other property sets.</span></p>

<h3><a name="_Toc318320356"></a><a name="_Toc169684112"></a><a name="_Toc167033762"></a><a name="_Toc168661879"></a><a name="_Toc86725686"></a><a name="_Toc86220723"></a><a name="_Toc86220254"></a><a name="_Toc86219878"></a><a name="_Toc86219773"></a><a name="_Toc79295008"></a><a name="_Toc27797753"></a><a name="_Toc27449581"><span lang="EN-US">11.1.1<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Property Types</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property type declaration associates an identifier with a property
type.  A property type denotes the set of legal values in a property
association that are the result of evaluating the associated property
expression.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PropertyType"><span lang="EN-US">property_type_declaration ::= </span></a></pre><pre><span lang="EN-US">     <i>defining_property_type</i>_identifier : <b>type</b> property_type <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_type ::=</span></pre><pre><span lang="EN-US">       <b>aadlboolean</b> | <b>aadlstring</b></span></pre><pre><b><span lang="EN-US"> </span></b><span lang="EN-US">    | enumeration_type | units_type</span></pre><pre><span lang="EN-US">     | number_type | range_type</span></pre><pre><span lang="EN-US">     | classifier_type</span></pre><pre><span lang="EN-US">     | reference_type</span></pre><pre><span lang="EN-US">     | record_type</span></pre><pre><span lang="EN-US">     </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">enumeration_type ::= </span></pre><pre><span lang="EN-US">     <b>enumeration ( </b><i>defining_enumeration_literal</i>_identifier </span></pre><pre><span lang="EN-US">                  { <b>,</b> <i>defining_enumeration_literal</i>_identifier }<sup>*</sup><b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">units_type ::= </span></pre><pre><span lang="EN-US">     <b>units </b>units_list</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">units_list ::= </span></pre><pre><b><span lang="EN-US">    (</span></b><span lang="EN-US"> <i>defining_unit</i>_identifier </span></pre><pre><span lang="EN-US">        { <b>,</b> <i>defining_unit</i>_identifier <b>=&gt;</b> <i>unit</i>_identifier <b>*</b> numeric_literal }<sup>*</sup> <b>)</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">number_type ::=</span></pre><pre><span lang="EN-US">       <b>aadlreal </b>[ real_range ] [ <b>units</b> units_designator ]</span></pre><pre><span lang="EN-US">     | <b>aadlinteger</b> [ integer_range ] [ <b>units </b>units_designator ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">units_designator ::= </span></pre><pre><span lang="EN-US">     <i>units_</i>unique_property_type_identifier</span></pre><pre><span lang="EN-US">     |<b> </b>units_list</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">real_range ::= real_lower_bound <b>..</b> real_upper_bound</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">real_lower_bound ::= signed_aadlreal_or_constant </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">real_upper_bound ::= signed_aadlreal_or_constant </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_range ::= integer_lower_bound <b>..</b> integer_upper_bound</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_lower_bound ::= signed_aadlinteger_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_upper_bound ::= signed_aadlinteger_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlreal_or_constant ::=  </span></pre><pre><span lang="EN-US">    ( signed_aadlreal | [ sign ] <i>real_</i>property_constant_term )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlinteger_or_constant ::=  </span></pre><pre><span lang="EN-US">    ( signed_aadlinteger | [ sign ] <i>integer</i>_property_constant_term )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">sign ::= <b>+</b> | <b>-</b> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlinteger ::=</span></pre><pre><span lang="EN-US">    [ sign ] integer_literal  [ <i>unit</i>_identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlreal ::= </span></pre><pre><span lang="EN-US">    [ sign ] real_literal [ <i>unit</i>_identifier ]</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">range_type ::=</span></pre><pre><span lang="EN-US">      <b>range of </b>number_type</span></pre><pre><span lang="EN-US">    | <b>range of</b> <i>number_</i>unique_property_type_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">classifier_type ::=</span></pre><pre><b><span lang="EN-US">    classifier</span></b><span lang="EN-US"> </span></pre><pre><span lang="EN-US">    [ <b>( </b>classifier_category_reference { <b>,</b> classifier_category_reference }<sup>*</sup> <b>)</b> ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">classifier_category_reference ::= </span></pre><pre><span lang="EN-US">    -- AADL or Annex meta model classifier</span></pre><pre><span lang="EN-US">    <i>classifier</i>_qualified_meta_model_identifier  </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">qualified_meta_model_identifier ::= </span></pre><pre><span lang="EN-US">    [ <b>{</b> <i>annex</i>_identifier <b>}**</b> ] meta_model_class_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">meta_model_class_identifier ::= { identifier }<sup>+</sup></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">reference_type ::=</span></pre><pre><b><span lang="EN-US">     reference</span></b><span lang="EN-US">  [ <b>( </b>reference_category </span></pre><pre><span lang="EN-US">                   { <b>,</b> reference_category }<sup>* </sup><b>)</b> ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">reference_category ::= </span></pre><pre><span lang="EN-US">    -- AADL or Annex meta model named element</span></pre><pre><span lang="EN-US">    <i>named_element_</i>qualified_meta_model_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_property_type_identifier ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    [ <i>property_set</i>_identifier <b>::</b> ] <i>property_type</i>_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">record_type ::= </span></pre><pre><span lang="EN-US">    <b>record (</b> record_field</span></pre><pre><span lang="EN-US">             { <i>record_field</i> }<sup>* </sup><b>)</b></span></pre><pre><span lang="EN-US">record_field ::= </span></pre><pre><span lang="EN-US">    <i>defining_field</i>_identifier <b>:</b> [ <b>list of </b>] property_type_designator <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_type_designator ::= </span></pre><pre><span lang="EN-US">    unique_property_type_identifier |</span></pre><pre><span lang="EN-US">    property_type</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_86b2a470-0642-49b5-b34a-3117adf25c6a"><a name="86b2a470-0642-49b5-b34a-3117adf25c6a" id="id_86b2a470-0642-49b5-b34a-3117adf25c6a" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_86b2a470-0642-49b5-b34a-3117adf25c6a">       
</span></span></span><span lang="EN-US"><span class="requality_text id_86b2a470-0642-49b5-b34a-3117adf25c6a">All property type defining identifiers declared
within the same property set must be distinct from each other, i.e., unique
within the property set namespace.</span>  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A property type is named by its property type
identifier or the qualified name specified by the property set/property type
identifier pair, separated by a double colon (“::”).  An unqualified property
type identifier must be part of the predeclared property sets.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8af7ea9d-daf6-4857-9b01-fb305741e666"><a name="8af7ea9d-daf6-4857-9b01-fb305741e666" id="id_8af7ea9d-daf6-4857-9b01-fb305741e666" class="requality_id"></a>(N3)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8af7ea9d-daf6-4857-9b01-fb305741e666">       
</span></span></span><span lang="EN-US"><span class="requality_text id_8af7ea9d-daf6-4857-9b01-fb305741e666">An enumeration type introduces an enumeration
namespace.  The enumeration literal identifiers in the enumeration list declare
an ordered list of enumeration literals. They must be unique within this
namespace.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_8b6defea-6dd0-488d-aa06-f1310a5986aa"><a name="8b6defea-6dd0-488d-aa06-f1310a5986aa" id="id_8b6defea-6dd0-488d-aa06-f1310a5986aa" class="requality_id"></a>(N4)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_8b6defea-6dd0-488d-aa06-f1310a5986aa">       
</span></span></span><span lang="EN-US"><span class="requality_text id_8b6defea-6dd0-488d-aa06-f1310a5986aa">A units type introduces a units namespace.  The
units identifiers in the units list declare a set of units literals. They must
be unique within this namespace.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The units identifier to the right of a <b>=&gt;</b>
in a units literal statement must refer to a unit identifier defined earlier in
the sequence of the same units type declaration.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The <i>classifier meta model identifier</i> must
refer to a class in the AADL meta model or an Annex meta model.  In the case of
an Annex meta model, the identifier is qualified by the annex name.  Acceptable
classes are listed in tabular form in Appendix </span><span lang="EN-US">C.3</span><span lang="EN-US"> and in relevant Annex standards.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The <i>named element meta model identifier</i>
must refer to a class in the AADL meta model or an Annex meta model that is a
subclass of the <i>NamedElement</i> class and a structural feature, in the case
of the AADL core language a subclass of the <i>ClassifierFeature</i> class. In the
case of an Annex meta model, the identifier is qualified by the annex name. Acceptable
classes are listed in tabular form in an appendix of this standard and in
relevant Annex standards.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_0c867b3e-238c-460e-aabc-3781768b32a6"><a name="0c867b3e-238c-460e-aabc-3781768b32a6" id="id_0c867b3e-238c-460e-aabc-3781768b32a6" class="requality_id"></a>(N8)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_0c867b3e-238c-460e-aabc-3781768b32a6">       
</span></span></span><span lang="EN-US"><span class="requality_text id_0c867b3e-238c-460e-aabc-3781768b32a6">The identifiers of the property field
declarations in a </span><b><span class="requality_text id_0c867b3e-238c-460e-aabc-3781768b32a6">record</span></b><span class="requality_text id_0c867b3e-238c-460e-aabc-3781768b32a6"> property type must be unique within the record
declaration, i.e., the record type represents a local namespace for record
field identifiers.</span></span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The value of the first numeric literal that
appears in a range of a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">number_type</span><span lang="EN-US"> must not be greater than the value of the second numeric literal
including the value’s units.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Range values must always be declared with unit
literals if the property requires a unit literal.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The unique property constant identifier in an
integer range must represent an integer constant. If the integer type requires
units, then the constant value must include a unit literal of the specified
units type.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A boundless range type may be declared such that
the actual range declarations have no limit on the upper and lower bound.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The unique property constant identifier in a
real range must represent a real constant. If the real type requires units,
then the constant value must include a unit literal of the specified units
type.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the property requires a unit, then the unit
must be specified for both lower and upper bound and the unit literal must be
of the specified units type..</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a range is specified for <b>aadlinteger</b>
or <b>aadlreal</b> then the actual value assigned to a property of this type
must be within the specified range.</span></p>

<p class="Note"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">In the original AADL standard reserved words
were used to identify the classifier category or reference category. Those
names are compatible with the qualified meta model identifiers of AADL V2 with
the exception of <i>connections</i>. It is now named <i>connection</i>. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property type declaration associates an identifier with a property
type.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The <b>aadlboolean</b> property type represents the two values, true
and false.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The <b>aadlstring</b> property type represents all legal strings of
the AADL.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <b>enumeration</b> property type represents an ordered list of
enumeration identifiers as the set of legal values.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <b>units</b> property type represents an explicitly listed set of
measurement unit identifiers as the set of legal values.  The second and
succeeding unit identifiers are declared with a multiplier representing the
conversion factor that is applied to a preceding unit to determine the value in
terms of the specified measurement unit. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <b>aadlreal</b> property type represents a real value or a real
value and its measurement unit.  If a units clause is present, then the type
value is a pair of values, a real value and a unit. The unit may only be one of
the enumeration literals specified in the units clause.  If a units clause is
absent, then the value is a real value</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An <b>aadlinteger</b> property type represents an integer value or
an integer value and its measurement unit.  If a units clause is present, then
the value is a pair of values, and unit may only be one of the enumeration
literals specified in the units clause.  If a units clause is absent, then the
value is an integer value. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The <b>range</b> property type represents closed intervals of
numbers. It specifies that a property of this type has a value that is a range
term. The range type specifies the number type of values in the range.  A
property specifying a range term as its value indicates a least value called
the lower bound of the interval, a greatest value called the upper bound of the
interval, and optionally the difference between adjacent values called the <b>delta</b>. 
The delta may be unspecified, in which case the range is dense, but it is
otherwise undefined whether the range is an interval of the real or the
rational numbers.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A <b>classifier</b>
property type represents the subset of syntactically legal classifier
references, whose class is a subclass of the <i>Classifier</i> meta model class
and of one of the meta model classes listed in the classifier identifier list. For
core AADL this is typically the meta model class that represents a component
category.  If the classifier identifier list is absent, all classifier
references are acceptable.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A <b>reference</b>
property type represents the subset of syntactically legal references to those model
elements, whose class is a subclass of the meta model class <i>Named Element</i></span><span lang="EN-US"> and <i>ClassifierFeature</i> or a structural element of an annex
clause</span><span lang="EN-US">.  A </span><i><span lang="EN-US">ClassifierFeature</span></i><span lang="EN-US"> is a structural element that is contained in a component, such as
ports, flow specifications, subcomponents, or connections.  </span><span lang="EN-US">If the identifier list is absent, all model elements whose class is
a subclass of <i>NamedElement</i> and <i>ClassifierFeature </i>are acceptable. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A <b>record</b>
type represents a group of property associations, i.e., a collection of
property values, where each element of the collection of property values is
accessible by name.  The record fields must be explicitly declared by name,
each with its own property type.  </span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">The classifier and reference property types
support the specification of properties representing binding constraints.</span></p>

<p class="Note"><span lang="EN-US">Units literals are not case sensitive.  For
example, <i>mW</i> and <i>MW</i> represent the same units literal.  Therefore,
it is advisable to choose literal names such as <i>milliWatts</i> and <i>MegaWatts</i>.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0"><a name="e963b716-6884-49e3-8eaf-47641c221ea0" id="id_e963b716-6884-49e3-8eaf-47641c221ea0" class="requality_id"></a>property
set</span></span></b><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0"> mine </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">is</span></b></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  Length_Unit
: </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">type units </span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">( mm, cm =&gt; mm * 10, </span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">                           m =&gt; cm *
100, km =&gt; m * 1000 );</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  OnOff : </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">type aadlboolean</span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">;</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  -- This type declaration references a
separately declared units type</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  Car_Length : </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">type aadlreal </span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">1.5 m
.. 4.5 m </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">units</span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0"> mine::Length_Unit ; </span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  -- This type declaration defines the
units in place</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  Speed_Range : </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">type range of aadlreal</span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">
0.0 kph .. 250.0 kph </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">units</span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0"> ( kph );</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">  Position : </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">type record </span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">(</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">       X: </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">aadlinteger</span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">;</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">       Y: </span><b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">aadlinteger</span></b><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">; );</span></span></p><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0">end</span></span></b><span lang="EN-US"><span class="requality_text id_e963b716-6884-49e3-8eaf-47641c221ea0"> mine;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h3><span lang="EN-US">11.1.2<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US"> <a name="_Toc318320357"></a><a name="_Toc169684113"></a><a name="_Toc167033763"></a><a name="_Toc168661880"></a><a name="_Toc86725687"></a><a name="_Toc86220724"></a><a name="_Toc86220255"></a><a name="_Toc86219879"></a><a name="_Toc86219774"></a><a name="_Toc79295009"></a><a name="_Ref72222002"></a><a name="_Toc27797754"></a><a name="_Toc27449582">Property
</a>Definitions</span></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">All property names that appear in a property association list must
be declared with property definition declarations inside a property set. 
Properties are typed and are defined for any named element in an AADL model.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PropertyName"><span lang="EN-US">property_definition_declaration ::= </span></a></pre><pre><span lang="EN-US">    <i>defining_property_name</i>_identifier<b>:</b></span></pre><pre><span lang="EN-US">        [ <b>inherit </b>]</span></pre><pre><span lang="EN-US">        ( single_valued_property | multi_valued_property )</span></pre><pre><span lang="EN-US">        <b>applies to</b> <b>( </b> property_owner { <b>,</b> property_owner }<sup>*</sup> <b>) ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">single_valued_property ::=</span></pre><pre><span lang="EN-US">    property_type_designator [ <b>=&gt;</b> <i>default</i>_property_expression ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">multi_valued_property ::=</span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">{<b> list of </b>}<sup>+</sup> property_type_designator </span></pre><pre><span lang="EN-US">    [ <b>=&gt;</b> <i>default</i>_property_list_value</span></pre><pre><span lang="EN-US">    ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_owner ::= </span></pre><pre><span lang="EN-US">  -- AADL or Annex meta model named element</span></pre><pre><span lang="EN-US">    <i>named_element_</i>qualified_meta_model_identifier  |</span></pre><pre><span lang="EN-US">    unique_classifier_reference</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_classifier_reference ::=</span></pre><pre><span lang="EN-US">    package_name <b>::</b> classifier_identifier</span></pre>

<p class="Note"><span lang="EN-US">Note: Different from AADL V1 the <b>access</b>
keyword is no longer used in property definitions. The fact that a property
applies to an access feature is already specified in the applies to clause.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_03081922-5611-4032-82c9-5e2cb657576b"><a name="03081922-5611-4032-82c9-5e2cb657576b" id="id_03081922-5611-4032-82c9-5e2cb657576b" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_03081922-5611-4032-82c9-5e2cb657576b">       
</span></span></span><span lang="EN-US"><span class="requality_text id_03081922-5611-4032-82c9-5e2cb657576b">All defining identifiers of property definitions
declared within the same property set must be distinct from each other and
distinct from all property type defining identifiers declared within that
property set.  The property set namespace contains the defining identifiers for
all property definitions declared within that property set.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A property is named by its property definition identifier
or the qualified name specified by the property set/property definition
identifier pair, separated by a double colon (“::”).  An unqualified property
identifier must be part of the predeclared property sets.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">named_element_meta_model_identifier</span><span lang="EN-US"> must
identify the name of a class in the AADL meta model or an Annex meta model that
is a subclass of the AADL meta model class </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NamedElement</span><span lang="EN-US">.  In
case of an Annex meta model, the identifier is qualified by the annex name.  Acceptable
classes are listed in tabular form in an appendix of this standard and in
relevant Annex standards.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">unique_classifier_reference</span><span lang="EN-US"> must
identify the name of a classifier in the public section of the named package.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">All properties are automatically defined for
components of the category <b>abstract</b>, i.e., the category <b>abstract</b>
is implicitly included in all <b>applies to </b>statements. </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><b><span lang="EN-US">Classifier</span></b><span lang="EN-US"> and <b>reference
</b>property definition must not have a default value.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property definition declaration introduces a new property that is
of a specified property type, accepts a single value or a list of values, and
may specify a default property expression.  This property is defined for those named
elements of an AADL model whose meta model name is listed after the <b>applies
to </b>in the  </span><span lang="EN-US">list, or those model elements that are
of the specified component type</span><span lang="EN-US">.  Acceptable meta model
names are listed in tabular form in Appendix </span><span lang="EN-US">C.3</span><span lang="EN-US"> of this standard and in relevant Annex
standards. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Property_Owner
</span><span lang="EN-US">list may include component types qualified by a package
name.  In this case, the property can only be associated with components of
this component type or its extensions. If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Property_Owner </span><span lang="EN-US">list</span><span lang="EN-US"> includes </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NamedElement</span><span lang="EN-US">, then the property can be associated with all model elements.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property defined with the reserved word <b>inherit </b>indicates
that if a property value cannot be determined for a component, then its value
will be inherited from a containing component.  The detailed rules for
determining property values are described in Section 11.3.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property declared without a default value is considered undefined
(see also Section </span><span lang="EN-US">11.3</span><span lang="EN-US">).  A
property declared to have a list of values is considered to have an empty list
if no default value is declared.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb"><a name="da30d54c-d3ea-492b-b94e-fc34eacef7cb" id="id_da30d54c-d3ea-492b-b94e-fc34eacef7cb" class="requality_id"></a>-- added
to Property Set mine from previous example</span></span></p><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">Value_Type:
</span><b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">type enumeration </span></b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">( estimate, benchmark, measured );</span></span></p><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">Rotation_Units:
</span><b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">type units </span></b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">( rpm );</span></span></p><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">  Position : </span><b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">type record </span></b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">(</span></span></p><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">       X: </span><b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">aadlinteger</span></b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">;</span></span></p><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">       Y: </span><b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">aadlinteger</span></b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">; );</span></span></p><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">

</span><p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">GPS_Position
: mine::Position </span><b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb">applies to</span></b><span class="requality_text id_da30d54c-d3ea-492b-b94e-fc34eacef7cb"> ( system );</span></span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"> </span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h3><a name="_Toc27797755"></a><a name="_Toc27449583"></a><a name="_Toc318320358"></a><a name="_Toc169684114"></a><a name="_Toc167033764"></a><a name="_Toc168661881"></a><a name="_Toc86725688"></a><a name="_Toc86220725"></a><a name="_Toc86220256"></a><a name="_Toc86219880"></a><a name="_Toc86219775"></a><a name="_Toc79295010"><span lang="EN-US">11.1.3<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Property Constants</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Property constants are property values that are known by a symbolic
name. Property constants are provided in the predeclared property sets and can
be defined in property sets.  They can be referenced in property expressions by
name wherever the value itself is permissible.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PropertyConstant"><span lang="EN-US">property_constant ::= </span></a></pre><pre><span lang="EN-US">        single_valued_property_constant | multi_valued_property_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">single_valued_property_constant ::=</span></pre><pre><span lang="EN-US">    <i>defining_property_constant</i>_identifier <b>:</b> <b>constant</b> </span></pre><pre><span lang="EN-US">            property_type_designator</span></pre><pre><span lang="EN-US">        <b>=&gt;</b> <i>constant</i>_property_expression<b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">multi_valued_property_constant ::=</span></pre><pre><span lang="EN-US">    <i>defining_property_constant</i>_identifier <b>:</b> <b>constant</b> ( <b>list of</b> )<sup>+</sup></span></pre><pre><span lang="EN-US">            property_type_designator</span></pre><pre><span lang="EN-US">        <b>=&gt;</b> <i>constant</i>_property_list_value <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_property_constant_identifier ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">   [ <i>property_set</i>_identifier <b>::</b> ] <i>property_constant</i>_identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_5d64f679-95bc-4e3e-9adf-3e8104ea3346"><a name="5d64f679-95bc-4e3e-9adf-3e8104ea3346" id="id_5d64f679-95bc-4e3e-9adf-3e8104ea3346" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_5d64f679-95bc-4e3e-9adf-3e8104ea3346">       
</span></span></span><span lang="EN-US"><span class="requality_text id_5d64f679-95bc-4e3e-9adf-3e8104ea3346">The defining property constant identifier must
be distinct from all other property constant identifiers, property definition identifiers,
and property type identifiers in the namespace of the property set that
contains the property constant declaration.</span></span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A property constant is named by its property
constant identifier or the qualified name specified by the property
set/property constant identifier pair, separated by double colon (“::”).  An
unqualified property constant identifier must be part of the predeclared
property sets.  Otherwise, the property constant identifier must appear in the
property set namespace.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A property constant cannot be declared for the <b>classifier</b>
property type or the <b>reference</b> property type.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a property constant declaration has more than
one property expression, it must contain the reserved words <b>list of</b>.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The property type of the property constant
declaration must match the property type of the </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">constant property value</span><span lang="EN-US">.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Property constants allow integer, real, string, and other property
values to be known by symbolic name and referenced by that name in property
expressions.  This reference is expressed by referencing the unique property
constant identifier.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_c8270de9-d88e-4053-9c03-be0df80b6e15"><a name="c8270de9-d88e-4053-9c03-be0df80b6e15" id="id_c8270de9-d88e-4053-9c03-be0df80b6e15" class="requality_id"></a>Max_Threads
: </span><b><span class="requality_text id_c8270de9-d88e-4053-9c03-be0df80b6e15">constant</span></b><span class="requality_text id_c8270de9-d88e-4053-9c03-be0df80b6e15"> </span><b><span class="requality_text id_c8270de9-d88e-4053-9c03-be0df80b6e15">aadlinteger</span></b><span class="requality_text id_c8270de9-d88e-4053-9c03-be0df80b6e15"> =&gt; 256;</span></span></p>

<pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre>

<h2><a name="_Toc318320359"></a><a name="_Toc169684115"></a><a name="_Toc167033765"></a><a name="_Toc168661882"></a><a name="_Toc86725689"></a><a name="_Toc86220726"></a><a name="_Toc86220257"></a><a name="_Toc86219881"></a><a name="_Toc86219776"></a><a name="_Toc79295011"><span lang="EN-US">11.2<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">Predeclared Property Sets</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">There is a standard collection of predeclared property sets named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deployment_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Thread_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Timing_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Memory_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Programming_Properties</span><span lang="EN-US">, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Modeling_Properties</span><span lang="EN-US">, which are part of every AADL specification.  These property sets
are listed in </span><span lang="EN-US">Appendix A </span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In addition, there is property set </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> that
declares a set of enumeration property types and property constants for which project-specific
enumeration literals and values can be defined for different projects. This
property set is part of every AADL specification.  All of the property
enumeration types and property constants listed in Appendix A.2 must be
declared in this property set.  The set of enumeration literals may vary.    </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">References to predeclared properties, property
types, and property constants do not have to be qualified with the property set
name.  <span class="requality_text id_6e23b23b-f408-490a-bc8a-60971c7fb0f0"><a name="6e23b23b-f408-490a-bc8a-60971c7fb0f0" id="id_6e23b23b-f408-490a-bc8a-60971c7fb0f0" class="requality_id"></a>As a consequence the predeclared properties, property types, and
property constants must be unique across all predeclared property sets.</span></span></p>

<p class="Note" style="margin-left: 28.8pt;"><span lang="EN-US">NOTE: References to
predeclared properties, property constants, and property types may be qualified
with their property set name.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The predeclared property sets other than </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> cannot be modified.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Existing property type and property constant declarations
in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> property set can be modified. New declarations must not be added to
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> property set, but can be introduced through a separate property set
declaration.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Additional property name declarations may not be inserted into the
standard predeclared property sets.  Separate property set declarations must be
used for nonstandard property definitions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Providers of AADL processing methods may modify the standard
property type declarations in </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> to allow additional values for a specific property definitions. 
For example, additional enumeration identifiers beyond those listed in this
standard may be added.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Users may define additional property sets and use them in AADL
specifications.  AADL tools may be created that make use of those additional
property sets.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Additional property sets that may be suitable for a wide variety
applications may be defined in an Annex document.  AADL tools that support this
Annex should include support for these additional property sets.  Similarly,
AADL specifications that conform to the Annex shall satisfy the requirements
associated with the annex property set. </span></p>

<h2><a name="_Toc2492751"></a><a name="_Ref2420482"></a><a name="_Toc318320360"></a><a name="_Ref208643171"></a><a name="_Ref208220096"></a><a name="_Ref196809529"></a><a name="_Ref193875446"></a><a name="_Ref186863840"></a><a name="_Toc169684116"></a><a name="_Toc167033766"></a><a name="_Toc168661883"></a><a name="_Toc86725690"></a><a name="_Toc86220727"></a><a name="_Toc86220258"></a><a name="_Toc86219882"></a><a name="_Toc86219777"></a><a name="_Toc79295012"></a><a name="_Ref71620485"></a><a name="_Ref62026836"></a><a name="_Ref61970292"></a><a name="_Ref57021947"></a><a name="_Ref56525791"></a><a name="_Ref56405661"></a><a name="_Ref56304344"></a><a name="_Toc27797756"></a><a name="_Toc27449584"></a><a name="_Toc8550347"></a><a name="_Toc2492747"></a><a name="_Toc535736324"></a><a name="_Toc535736004"></a><a name="_Toc535729828"></a><a name="_Toc532013566"></a><a name="_Toc12427993"></a><a name="_Toc12428013"></a><a name="_Toc12428015"></a><span lang="EN-US">11.3<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">Property Association</span><span lang="EN-US">s</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property association assigns a property value or list of property
values with a property.  This may involve evaluation of a property
expressions.  Property associations can be declared within component types,
component implementations, subcomponents, features, connections, flows, modes,
and subprogram calls, as well as their respective refinement declarations.
Contained property associations permit property values to be associated with any
component in the system instance hierarchy (see Section </span><span lang="EN-US">13.1</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PropertyAssociation"><span lang="EN-US">basic_property_association ::= </span></a></pre><pre><span lang="EN-US">  unique_property_identifier </span></pre><pre><span lang="EN-US">( <b>=&gt;</b> | <b>+=&gt; </b>)</span></pre><pre><span lang="EN-US">      [ <b>constant</b> ] property_value<sup> </sup><b>;</b></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">property_association ::= </span></pre><pre><span lang="EN-US">  unique_property_identifier </span></pre><pre><span lang="EN-US">( <b>=&gt;</b> | <b>+=&gt; </b>)</span></pre><pre><span lang="EN-US">      [ <b>constant</b> ] assignment<sup> </sup></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">[ in_binding ]<b> ;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">contained_property_association ::= </span></pre><pre><span lang="EN-US">  unique_property_identifier </span></pre><pre><span lang="EN-US">    <b>=&gt;</b> [ <b>constant</b> ] assignment</span></pre><pre><b><span lang="EN-US">     applies to</span></b><span lang="EN-US"> contained_model_element_path </span></pre><pre><span lang="EN-US">            { <b>,</b> contained_model_element_path }<sup>*</sup> </span></pre><pre><b><span lang="EN-US">     </span></b><span lang="EN-US">[ in_binding ]<b> ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_property_identifier ::=</span></pre><pre><span lang="EN-US">  [ <i>property_set</i>_identifier :: ] <i>property_name</i>_identifier </span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">contained_model_element_path ::= </span></pre><pre><span lang="EN-US">      ( contained_model_element { <b>.</b> contained_model_element }<sup>*</sup></span></pre><pre><span lang="EN-US">        [ annex_path ] )</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">      | annex_path</span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">contained_model_element ::= </span></pre><pre><span lang="EN-US">    <i>named_element</i>_identifier |</span></pre><pre><span lang="EN-US">    <i>named_element_</i>array_selection_identifier</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">annex_path ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <b>annex </b><i>annex</i>_identifier <b>{** </b>annex_specific_path <b>**}</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">annex_specific_path ::= &lt;defined by annex&gt; </span></pre><pre><span lang="EN-US">-- It is recommended this path follows the dot-separation syntax of the component path.</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">assignment ::=  property_value | modal_property_value</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">modal_property_value ::= </span></pre><pre><span lang="EN-US">    { property_value in_modes <b>, </b>}<sup>* </sup>property_value [ in_modes ] </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_value ::= single_property_value | property_list_value</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">single_property_value ::= property_expression</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_list_value ::=</span></pre><pre><span lang="EN-US">        <b>(</b>  [ ( property_list_value | property_expression ) </span></pre><pre><span lang="EN-US">         { <b>,</b> ( property_list_value | property_expression ) }<sup>*</sup> ] <b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">in_binding ::= </span></pre><pre><span lang="EN-US">      <b>in binding( </b>platform<i>_</i>classifier_reference </span></pre><pre><span lang="EN-US">                { <b>,</b> platform<i>_</i>classifier_reference }<sup>*</sup> <b>)</b></span></pre><pre style="margin-top: 12pt;"><i><span lang="EN-US">platform</span></i><span lang="EN-US">_classifier_reference ::= </span></pre><pre><span lang="EN-US">        <i>processor</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>virtual_processor</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>bus</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>virtual_bus</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>memory</i>_unique_component_classifier_reference</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A property is named by an optional property set
identifier followed by a property identifier, separated by a double colon
(“::”).</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The property set identifier, if present, must
appear in the global namespace and must be the defining identifier in a
property set declaration.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The property identifier must exist in the
namespace of the property set, or if the optional property set identifier is
absent, in the namespace of any predeclared property set.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">A property name may appear in the property
association clause only if the respective AADL model element is listed in the
applies to list of the property definition declaration.  </span></p>

<p class="Namingrule"><a name="_Ref166296153"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The <i>contained model element path</i> identifies
named model elements in the containment hierarchy, for which the property value
holds.  The model element with the contained property association is the root
of a path.</span></a></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">For contained property associations declared
with classifiers, e.g., a component type or component implementation, the first
identifier in the path must appear in the local namespace of the classifier to
which the property association belongs.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">For contained property associations declared
with model elements with a classifier reference, e.g., subcomponents, the first
identifier must appear as a identifier within the local namespace of the
classifier that is referenced by the model element.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N8)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">Subsequent identifiers in a contained model
element path must appear in the namespace of the model element identified by
the preceding identifier. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N9)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The annex identifier named in a contained model
element path must be that of an approved or project-specific annex.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N10)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Identifiers in an annex-specific path must appear in the namespace
of the identified annex in the context of the namespace of the model element
identified by the preceding identifier. </span></p>

<p class="Namingrule"><a name="_Ref166296321"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N11)<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">If the identifier of a contained model element
path is a subcomponent array identifier, it can specify a subcomponent array as
a whole, an array subset, or an individual array element.</span></a></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N12)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">If a property association has an <b>in binding</b> statement, then
the unique platform classifier reference must be referenceable according to the
<b>with </b>and <b>renames</b> declarations.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N13)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">If a property association has mode-specific values, i.e., an <b>in
modes</b> statement for values, then the mode must refer to a mode of the component
the property is associated with, or in the case of a property association of
model elements that are not components, the modes of the containing component. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N14)<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">A property association list must have at most one property
association for the same property.  In case of binding-specific property
associations, there must be at most one association for each binding. </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The property definition named by a property
association must list the class of the model element, with which the property
is associated, or any of its super classes in its <b>applies to</b> clause.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A contained property association with
mode-specific values can only be applied to a single model element, i.e., can
only contain a single containment path.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a property expression list consists of a list
of two or more property expressions, all of those property expressions must be
of the same property type.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the property declaration for the associated
property definition does not contain the reserved words <b>list of</b>, the </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">property value</span><span lang="EN-US"> must be a </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">single
property value</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">.  </span><span lang="EN-US">If the property declaration for the associated property definition
contains the reserved words <b>list of</b>, the </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">property list value</span><span lang="EN-US"> must have the correct number of parentheses to match the list or
nested list declaration.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The property association operator <b>+=&gt;</b>
must only be used if the property declaration for the associated property
definition contains the reserved words <b>list of</b>.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A property association with an operator </span><b><span lang="EN-US">+=&gt; </span></b><span lang="EN-US">must not have an </span><b><span lang="EN-US">in modes </span></b><span lang="EN-US">or </span><b><span lang="EN-US">in
binding</span></b><span lang="EN-US"> statement.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L7)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The property association operator <b>+=&gt;</b> must
not be used in contained property associations.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L8)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">In a property association, the type of the
evaluated property expression must match the property type of the named
property.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L9)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A property value declared by a property
association with the reserved word <b>constant</b> cannot be changed when the
rules in the <i>semantics </i> section for determining a property value are
followed.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L10)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">The unique component type identifiers in the </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in binding</span></b><span lang="EN-US"> statement must refer to component types of the categories <b>processor</b>,
<b>virtual processor</b>, <b>bus</b>, <b>virtual bus</b>, or<b> memory.</b></span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L11)<span style="font: 7pt &quot;Times New Roman&quot;;">      </span></span><span lang="EN-US">If a property value with an <b>in modes </b>statement is associated with
a  connection, flow implementation, or call sequence with an <b>in modes</b>
statement, then the set of modes for which the property value applies must be
contained in the set of modes for which the connection, flow implementation, or
call sequence is active.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule"><span lang="EN-US">(C1)</span><span lang="EN-US">If a
property association has mode-specific values, i.e., values declared with the <b>in
modes</b> statement, then the modal value assignment must include a value for
each mode.  If the modal value assignment includes a value without the <b>in
modes</b> statement, this value becomes the default for all modes without an
explicit mode-specific value.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Property associations determine the property value of the model
element instances in the system instance hierarchy (see Section </span><span lang="EN-US">13.1</span><span lang="EN-US">). The property association of a classifier,
subcomponent, feature, flow, connection, mode, or subprogram call and other
declarative model elements determines the property value of all instances derived
from the respective declaration.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property association may be declared for a package.  In this case,
the property value applies to the package.   </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The value of a property is determined through evaluation of the
property expression. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Property associations are declared in the properties subclause of
component types and component implementations.  They are also declared as part
of any other named declarative model element, such as features, subcomponents,
connections, modes, mode transitions, etc. The property association of a
component type acts as default value for all implementations, subcomponents,
and instances, overwriting the default specified in the property definition. 
Similarly, the property association of a component implementation overwrites
the value of a component type, and the subcomponent property association
overwrites the value of the component implementation.  The details of
determining a property value are specified below. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a property association is declared with modal property values,
then the same rules hold for overwriting previous property associations.   Property
values are modal if they are declared with an <b>in </b>modes.  In this case the
property value applies if one of the specified modes is active.  If a property
association contains both mode-specific associations and value without an <b>in
modes</b> statement, then the latter specifies the value for all modes for
which there is not an explicit value with an <b>in modes</b> statements.  A
property value without an <b>in modes</b> statement also applies when the
component is inactive.  If a modal property association does not specify a
property value for one of the modes and there is no property value without <b>in
modes</b>, then the property value is considered to be undefined.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a property association has an <b>in binding</b> statement, the
property value is binding-specific. The property value applies if the binding
is to one of the specified execution platform types of the categories processor,
virtual processor, bus, virtual bus, or memory.  If a property association list
contains both binding-specific associations and an association without an in
binding statement, then the latter applies to bindings to the reference
processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Contained property associations can associate property values to any
named model element down the system hierarchy relative to the location of the
declaration. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The <b>applies to</b> clause of a contained property association may
specify multiple contained model element paths.  In that case the property
value is associated with each of the model elements.  If the property
association specifying contained model elements includes an <b>in modes</b>
statement, then the named modes must exist in the last component of the contained
element path.  If the path refers to a model element that is not a component,
e.g., a feature, then the modes must exist in the containing component of that
model element.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
contained model element path may include the name of an array of components, or
an index range of the array subset.  In that case the property value is
associated with each of the model elements in the array or its subset, or model
elements identified by the remaining path for each of the array elements.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Contained
property associations can be used to record system instance specific property
values for all model elements in a system instance. This permits AADL analysis
tools to record system instance specific information about an actual system in
a single location in an extension of the top-level system implementation. For
example, a resource allocation tool can record the actual bindings of threads
to processors and source text to memory through a set of contained property
associations, and can keep multiple such binding configurations in different
extensions of the same system implementation.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
property value is determined according to the following rules:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a property value is not present after
applying all of the rules below, it is determined by the default value of its property
definition declaration.  If not present in the property definition declaration,
the property value is undefined.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For classifier types, i.e., component types and feature
group types and subclasses of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ComponentType</span><span lang="EN-US"> in Annex meta models, the property value of a property is
determined by its property association in the properties subclause. If not
present, the property value is determined by the first ancestor classifier type
in the extends hierarchy with its property association. Otherwise, it is
considered not present.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For classifier implementations, i.e., a
component implementations and subclasses of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">ClassifierImplementation</span><span lang="EN-US"> in Annex meta models, the property value of a property is
determined by its property association in the properties subclause. If not
present, the property value is determined by the first ancestor classifier
implementation in the extends hierarchy with its property association. If not
present, it is determined by the property value of the classifier implementation’s
classifier type according to the classifier type rules.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For modes, connections, flow sequences, or other
model elements without a classifier reference, the property value of a property
is determined by its property association in the element declaration. If not
present and the model element is refined, then the property value is determined
by a property association in the model element declaration being refined; this
is done recursively along the refinement sequence. If not present and the
property definition has been declared as <b>inherit</b>, it is determined by
the property value of the closest containing component in the containment
hierarchy of the system instance. This inherited property value must not be
mode-specific.  Otherwise, it is considered not present.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For subcomponents, features and other model
elements with classifier references, the property value of a property is
determined by its property association in the model element declaration. If not
present and the model element is refined, then the property value is determined
by a property association in the model element declaration being refined; this
is done recursively along the refinement sequence. If not present in the model
element, it is determined by the model element’s classifier reference according
to the respective classifier rules described above.  If not present for a
feature that is a member of a feature group and the property definition has
been declared as <b>inherit</b>, it is determined by the property value of the
containing feature group type; or if not present and the feature group type is
an extension of another freature group type, it is determined by the feature
group type being extended. If not present and the property definition has been
declared as <b>inherit</b>, it is determined by the property value of the closest
containing component in the containment hierarchy of the system instance.  This
inherited property value must not be mode-specific.  Otherwise, it is
considered not present.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For subprogram calls in call sequences and other
model elements with classifier or feature references, the property value of a
property is determined by its property association in the model element.  If
not present and the reference is a classifier reference, the property value is
determined by the classifier according to its rules described above.  If not
present and the reference is a feature reference in a type, the property value
is determined by the feature according to the feature rules described above. 
If not present and the property definition has been declared as <b>inherit</b>,
it is determined by the property value of the closest containing component in
the containment hierarchy of the system instance.  This inherited property
value must not be mode-specific.  Otherwise, it is considered not present.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For component, feature, connection, flow, mode,
or other model element instances in the system instance hierarchy, the property
value of a property is determined by the contained property association highest
in the system instance hierarchy that references the component, feature,
connection, flow, mode, or other model element.  If not present, then the
property value is determined by the respective subcomponent, mode, connection,
feature, or other model element declaration that results in the instance
according to the rules above.  If not present and the property definition has
been declared as <b>inherit</b>, then it is determined by the property value of
the closest containing component in the containment hierarchy of the system
instance. This inherited property value must not be mode-specific.  Otherwise,
it is undefined.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><img width="464" height="149" alt="figure16" src="imgs/image033.png" /></p>

<p align="center" class="MsoCaption" style="margin-bottom: 12pt; text-align: center; page-break-after: avoid;"><a name="_Toc318320430"></a><a name="_Toc167033818"></a><a name="_Toc86591138"></a><a name="_Toc79295065"></a><a name="_Ref65852839"><span lang="EN-US">Figure </span></a><span lang="EN-US">21</span><span lang="EN-US">
Property Value Determination</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure 21</span><span lang="EN-US"> illustrates the order in which the
value of a property is determined. Instance4 is an element in the system
instance hierarchy.  The value of one of its properties is determined by first
looking for a property associated with the instance itself – shown as step 1. 
This is specified by a contained property association. The contained property
association for this instance declared in a component implementation highest in
the instance hierarchy determines that value.  If no instance value exists, the
implementation (ImplA) of the instance is examined (step 2).  If it does not
exist, ancestor implementations are examined (step 3).  If the property value
still has not been determined, the component type is examined (step 4).  If not
found there, its ancestor component types are examined (step 5).  If not found
and the property is inherited, for subcomponents and features, the enclosing
implementation is examined.  Otherwise, the containing component in the
component instance hierarchy is examined (step 6).  Finally, the default value
is considered.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Two
property association operators are supported.  The property association operator
<b>=&gt;</b> results in a new value for the property.  The property association
operator <b>+=&gt;</b> results in the addition of a value to a property value
list.  In the case of nested lists, the value is added to the outermost list.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US">property value list</span><span lang="EN-US"> is evaluated by
evaluating each of the property expressions, and appending the values in
order.  If the property expression evaluates to a list, all the list elements
are appended.  If the property expression evaluates to undefined, it is treated
as an empty list.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
property value declared by a property association with the reserved word <b>constant</b>
cannot be changed.  For example, if a property association is defined as <b>constant</b>
for a component type, then there cannot be a property association for the same
property in any component implementation of the type, nor any subcomponent, nor
contained property association that applies to a component of the component
type.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the property type is a <b>record</b>, a property association represents the
assignment of a new record value. If a subset of record fields is assigned a
value, the remaining fields have an undefined value.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Component
instance property associations with specified contained subcomponent identifier
sequences allow separate property values to be associated with each component
instance in the containment hierarchy. In particular, it permits separate
property values such as actual processor binding property values or result
values from an analysis method to be associated with each component in the system
instance containment hierarchy.</span></p>

<h2><a name="_Toc318320361"></a><a name="_Ref198607910"></a><a name="_Toc169684117"></a><a name="_Toc167033767"></a><a name="_Toc168661884"></a><a name="_Toc86725691"></a><a name="_Toc86220728"></a><a name="_Toc86220259"></a><a name="_Toc86219883"></a><a name="_Toc86219778"></a><a name="_Toc79295013"></a><a name="_Ref66967584"></a><a name="_Ref35764803"></a><a name="_Toc27797757"></a><a name="_Toc27449585"></a><a name="_Toc8550348"></a><a name="_Toc2492748"></a><a name="_Toc535736325"></a><a name="_Toc535736005"></a><a name="_Toc535729829"></a><a name="_Toc532013567"><span lang="EN-US">11.4<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Property Expressions</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A property expression represents the value that is associated with a
property through a property association.  The type of the property expression
must match the property type declared for the property.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="PropertyExpression"><span lang="EN-US">property_expression ::=</span></a></pre><pre><span lang="EN-US">      boolean_term</span></pre><pre><span lang="EN-US">    | real_term</span></pre><pre><span lang="EN-US">    | integer_term</span></pre><pre><span lang="EN-US">    | string_term</span></pre><pre><span lang="EN-US">    | enumeration_term</span></pre><pre><span lang="EN-US">    | unit_term</span></pre><pre><span lang="EN-US">    | real_range_term</span></pre><pre><span lang="EN-US">    | integer_range_term</span></pre><pre><span lang="EN-US">    | property_term</span></pre><pre><span lang="EN-US">    | component_classifier_term</span></pre><pre><span lang="EN-US">    | reference_term</span></pre><pre><span lang="EN-US">    | record_term</span></pre><pre><span lang="EN-US">    | computed_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">boolean_term ::= </span></pre><pre><span lang="EN-US">      boolean_value</span></pre><pre><span lang="EN-US">    | <i>boolean_</i>property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">boolean_value ::= </span><b><span lang="EN-US">true </span></b><span lang="EN-US">| <b>false</b></span></pre><pre><span lang="EN-US">    </span></pre><pre><span lang="EN-US">real_term ::= </span></pre><pre><span lang="EN-US">   signed_aadlreal_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_term ::= </span></pre><pre><span lang="EN-US">   signed_aadlinteger_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">string_term ::= string_literal | <i>string</i>_property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">enumeration_term ::= </span></pre><pre><span lang="EN-US">    <i>enumeration</i>_identifier | <i>enumeration</i>_property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unit_term ::= </span></pre><pre><span lang="EN-US">    <i>unit</i>_identifier | <i>unit</i>_property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_range_term ::=</span></pre><pre><span lang="EN-US">    integer_term <b>.. </b>integer_term [ <b>delta</b> integer_term ]</span></pre><pre><span lang="EN-US">    | <i>integer_range</i>_property_constant_term</span></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">real_range_term ::=</span></pre><pre><span lang="EN-US">    real_term <b>.. </b>real_term [ <b>delta</b> real_term ]</span></pre><pre><span lang="EN-US">    | <i>real_range</i>_property_constant_term</span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">property_term ::= </span></pre><pre><span lang="EN-US">   [ <i>property_set</i>_identifier <b>::</b> ] <i>property_name</i>_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_constant_term ::= </span></pre><pre><span lang="EN-US">   [ <i>property_set</i>_identifier <b>::</b> ] <i>property_constant</i>_identifier </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_classifier_term ::= </span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">    <b>classifier (</b></span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">     ( unique_component_type_reference |</span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">       unique_component_implementation_reference
)</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> <b>)</b></span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US"> </span></p>

<pre><span lang="EN-US">reference_term ::= </span></pre><pre><span lang="EN-US">    <b>reference (</b> contained_model_element_path <b>)</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">record_term ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <b>[ </b><i>record_field</i>_identifier =&gt; property_value <b>;</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">     { <i>record_field</i>_identifier =&gt; property_value<b>;</b> }<sup>*</sup>  <b>]</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">computed_term ::=</span></pre><pre><span lang="EN-US">    <b>compute ( </b><i>function_</i>identifier <b>)</b>    </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">Boolean operators have the following decreasing
precedence order: (), <b>not</b>, <b>and</b>, <b>or</b>.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The component type identifier or component
implementation name of a subcomponent classifier reference must appear
namespace of the specified package.    </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The enumeration identifier of a property
expression must have been declared in the enumeration list of the property type
that is associated with the property.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">For reference terms the naming rules </span><span lang="EN-US">(N5)</span><span lang="EN-US"> .. </span><span lang="EN-US">(N11)</span><span lang="EN-US"> in Section </span><span lang="EN-US">11.3</span><span lang="EN-US"> are applicable in order to resolve
contained model element paths.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If a <b>classifier</b> property is associated
with a core AADL model element, then the classifier meta model identifier of a
classifier term can only refer to a core AADL meta model class.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If a <b>classifier</b> property is associated
with an AADL annex model element, then the classifier meta model identifier of
a classifier term can refer to a core AADL meta model class or an annex meta
model class of the same annex.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If a <b>reference</b> property is associated
with a core AADL model element, then the contained model element path of a
reference term can only refer to a core AADL model element.  The first
identifier in the path must be defined in the namespace of the directly
enclosing component that contains the property association.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">If a <b>reference</b> property is associated
with an AADL annex model element, then the contained model element path of a
reference term can refer to a core AADL model element or an annex model element
of the same annex.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N8)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The field identifier of a record expression must
exist in the local namespace of the record type.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N9)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The function identifier of a <b>compute</b>
expression must exist as function in the source text.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the base type of a property number type or range
type is integer, then the numeric literals must be integers.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The type of a property named in a property term
must be identical to the type of the property name in the property association.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The type of a property constant named in a
property constant term must match the type of the property name in the property
association.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Property references in <i>property_term</i> or <i>property_constant_term</i>
of property expressions must be applicable to the model element to which the
property association applies.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L5)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Property references in <i>property_term</i> or <i>property_constant_term</i>
of property expressions cannot be circular. If a property has a property
expression that refers to a property or property constant, then that expression
evaluation cannot directly or indirectly depend on the value of the original
property or property constant.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L6)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If the contained model element path of a
reference term includes a subcomponent array identifier that does not identify
a single element in the array, then the expression results in a list of references.</span></p>

<p class="DescriptionHeading" style="margin: 12pt 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Every property expression can be evaluated to produce a value, a
range of values, or a reference.  It can be statically determined whether this
value satisfies the property type designator of the property name in the
property association.  </span><span lang="EN-US">The value of the property
association may evaluate undefined, if no property association or default value
has been declared.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Boolean terms</span></i><span lang="EN-US"> are of property type <b>aadlboolean</b>. 
The reserved words <b>true</b> and <b>false</b> evaluate to the Boolean values
true and false.  The operator <b>not</b> logically negates the value of a
Boolean term.  Expressions containing the operators <b>or</b> and <b>and</b>
are of type Boolean.  They evaluate to the logical disjunction and conjunction
of the values of their subexpression.  Boolean operators have the following
decreasing precedence order: (), <b>not</b>, <b>and</b>, <b>or</b>.  Because
Boolean expressions can contain property terms that reference the values of
other properties, and a referenced property value could be undefined, the
Boolean operators are defined to operate over the three values true, false, and
undefined.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr style="height: 20.65pt;">
  <td width="129" style="width: 96.4pt; border: 1pt solid windowtext; padding: 0cm 5.75pt; height: 20.65pt;">
  <p class="MsoFooter"><span lang="EN-US">op1 and op2</span></p>
  </td>
  <td width="124" style="width: 93.1pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt; height: 20.65pt;">
  <p class="MsoNormal"><b><span lang="EN-US">True</span></b></p>
  </td>
  <td width="97" style="width: 73.1pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt; height: 20.65pt;">
  <p class="MsoNormal"><b><span lang="EN-US">False</span></b></p>
  </td>
  <td width="123" style="width: 92.4pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt; height: 20.65pt;">
  <p class="MsoNormal"><b><span lang="EN-US">Undefined</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="129" style="width: 96.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><b><span lang="EN-US">True</span></b></p>
  </td>
  <td width="124" style="width: 93.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
  <td width="97" style="width: 73.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
  <td width="123" style="width: 92.4pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
 </tr>
 <tr>
  <td width="129" style="width: 96.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.75pt;">
  <p class="MsoHeader"><b><span lang="EN-US">False</span></b></p>
  </td>
  <td width="124" style="width: 93.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
  <td width="97" style="width: 73.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
  <td width="123" style="width: 92.4pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
 </tr>
 <tr style="page-break-inside: avoid;">
  <td width="129" style="width: 96.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><b><span lang="EN-US">Undefined</span></b></p>
  </td>
  <td width="124" style="width: 93.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
  <td width="97" style="width: 73.1pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
  <td width="123" style="width: 92.4pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.75pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr style="page-break-inside: avoid;">
  <td width="103" style="width: 77.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">op1 or op2</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">True</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">False</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">Undefined</span></b></p>
  </td>
 </tr>
 <tr style="page-break-inside: avoid;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">True</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
 </tr>
 <tr style="page-break-inside: avoid;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">False</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
 </tr>
 <tr style="page-break-inside: avoid;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">Undefined</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="85" style="width: 63.9pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">X</span></b></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><b><span lang="EN-US">Not X</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="85" style="width: 63.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
 </tr>
 <tr>
  <td width="85" style="width: 63.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">False</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">True</span></p>
  </td>
 </tr>
 <tr>
  <td width="85" style="width: 63.9pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
  <td width="90" style="width: 67.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">Undefined</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoBodyText"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Number terms</span></i><span lang="EN-US"> evaluate to a numeric value
denoted by the numeric literal, or evaluate to a pair consisting of a numeric
value and the specified units identifier.  A number term satisfies an <b>aadlinteger</b>
property type if the numeric value is a numeric literal without decimal point
or exponent.  Otherwise, it satisfies the <b>aadlreal</b> property type. If
specified, the units identifier must be one of the unit identifiers in the unit
designator of the property type.  Furthermore, the value must fall within the
optionally specified range of the property type – taking into account unit
conversion as necessary.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Enumeration terms</span></i><span lang="EN-US"> evaluate to
enumeration identifiers.  The <b>enumeration</b> property type of the property
name is satisfied if the enumeration identifier is declared in the enumeration
list of the property type.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Range terms</span></i><span lang="EN-US"> are of <b>range</b> property
type and are represented by number terms for lower and upper range bounds plus
and an optional <b>delta</b> value.  Range terms evaluate to two or three
numeric values that and each must satisfy the number type declared as part of
the range property type. The <b>delta</b> value represents the maximum
difference between two values, e.g., between two values of a data stream coming
through a data port.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">String terms</span></i><span lang="EN-US"> are of <b>aadlstring</b>
property type.  A string literal evaluates to the string of characters denoted
by that literal.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Property terms</span></i><span lang="EN-US"> evaluate to the value of
the referenced property. This allows one property value to be expressed in
terms of another. The value of the referenced property is determined in the
context of the element for which the property value is being determined.  For
example, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US"> property has the property term </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> as its default
property expression.  If this default value is not overwritten by another
property association, the value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US"> of a thread subcomponent is
determined by evaluating the property term in the context of the thread
subcomponent, i.e., the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline
</span><span lang="EN-US">value is determined by the</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Period </span><span lang="EN-US">value for the
thread subcomponent rather than the context of the default value declaration. 
The value of the referenced property may be undefined, in which case the
property term evaluates to undefined.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><i><span lang="EN-US">Property constant terms</span></i><span lang="EN-US"> evaluate to the
value of the referenced property constant. This allows one property value to be
expressed symbolically in terms of a constant identifier rather than the actual
value. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Component classifier terms</span></i><span lang="EN-US"> are of the
property type <b>classifier</b>. They evaluate to a classifier reference.</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Reference
terms</span></i><span lang="EN-US"> are of <b>reference</b> property type and
evaluate to a reference.  This reference may be a reference to a model element
in the model containment hierarchy, e.g., to a contained component, to a
connection, mode, feature, or an annex model element. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Record
terms</span></i><span lang="EN-US"> evaluate to a record value, which consists of
a separate value for each named field in the record expression. Any record
fields defined in a record type, for which there is no value in the record
expression, the field value is determined by the default value; otherwise it is
considered not present .  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><i><span lang="EN-US">Computed
terms </span></i><span lang="EN-US">allow a user-defined function to be called to
calculate a property value. This function is called every time the value of the
property is accessed. This function may access other properties of the same and
other model elements to calculate its value and it is assumed to complete its
computation in finite time.  A typical use of this function is to calculate the
value of a property based on the value of a property of its subcomponents.  It
takes the property association and the model element it is associated with as
parameters.  The function is expected to be without side effects and to return
a value that is consistent with the type of the property.  The function being
called is assumed to exist in a library that is supplied to methods of
processing.</span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES</span><span lang="EN-US">:</span></p>

<p class="Note"><span lang="EN-US">Expressions of the property type <b>reference </b>or
<b>classifier</b> are provided to support the ability to refer to classifiers
and model elements in the model.  For example, they are used to specify
bindings of application components to execution platform components.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of processing specifications may define additional rules to determine if
an expression value is legal for a property, beyond the restrictions imposed by
the declared property type.  The declared property type represents a minimum
set of restrictions that must be enforced for every use of a property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
an associated expression or default value is not specified for a property, a
method of processing specifications is permitted to reject that specification
as erroneous.  A method of processing specifications is permitted to construct
a default expression, providing that default is made known to the developers. 
This decision may be made on a per property basis.  If a property value is not
required for a specific development activity, then the method of processing
associated with this activity must accept a specification in which that
property has no associated value.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of processing specifications may impose additional restrictions on the
use of property expressions whose value depends on the current mode of
operation, or on bindings.  For example, mode-dependent values may be allowed
for some properties but disallowed for others.  Mode-dependent property
expressions may be disallowed entirely.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of processing specifications may access and change field values of a
record property value programmatically.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of processing specifications may impose restrictions on the use of
computed values in order to allow the computed value function to compute the
value once and store the result as a cached value.  For example, it may assume
that the values of properties used in the computation have been declared
through property associations. In that case the computed property value are not
changed programmatically by a method of processing and can be determined at
model instantiation time.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"><a name="e6d47ce9-b9e9-4759-b6ef-970b1a4e587f" id="id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f" class="requality_id"></a>-- This is
an AADL fragment inside a package</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">thread </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Producer </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> Producer;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">thread</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">implementation</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Producer.Basic </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">properties</span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Compute_Execution_Time  =&gt;
0ms..10ms </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">in binding</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> ( powerpc.speed_350Mhz );</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Compute_Execution_Time  =&gt; 0ms..8ms</span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
in binding</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> ( powerpc.speed_450MHz );</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Producer.Basic ;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">process </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Collect_Samples</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Collect_Samples;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Software
</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Software;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><br class="requality_node id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f" /><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> Software.Basic </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">subcomponents</span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Sampler_A : </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">process</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Collect_Samples; </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Sampler_B : </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">process</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Collect_Samples</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">      {</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">          -- A property with a list of
values</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">          Source_Text =&gt; (
“collect_samples.ads”, “collect_samples.adb” ) ;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">          Period =&gt; 50 ms; </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">      } ;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Software.Basic;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">device </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">car</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">properties</span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">  </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">mine::Car_Length
=&gt; 3.25 meter;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">  mine::Position =&gt; ( x =&gt; 3; y
=&gt; 4;);</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">  mine::Car_Name =&gt; ( US =&gt; “Rabbit”;
Germany =&gt; “Golf”; );</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">car;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Hardware
</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Hardware;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> Hardware.Basic </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">subcomponents</span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Host_A: </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">processor</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">; </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Host_B: </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">processor</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Hardware.Basic
;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Total_System</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
Total_System;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> Total_System.SW_HW </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">subcomponents</span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   SW : </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> Software.Basic; </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   HW : </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">system</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> Hardware.Basic; </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">properties</span></span></b></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   -- examples of contained property
associations</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   -- in a subcomponent of SW we are
setting the binding to a </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   -- component contained in HW</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Allowed_Processor_Binding =&gt; </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">reference</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
( HW.Host_A ) </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">                                       </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">applies
to</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> SW.Sampler_A;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">   Allowed_Processor_Binding =&gt; </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">reference</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">
( HW.Host_B ) </span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">                                       </span><b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">applies
to</span></b><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f"> SW.Sampler_B;</span></span></p><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">end </span></span></b><span lang="EN-US"><span class="requality_text id_e6d47ce9-b9e9-4759-b6ef-970b1a4e587f">Total_System.SW_HW;
</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h1><a name="_Toc318320362"></a><a name="_Ref193874794"></a><a name="_Ref193874790"></a><a name="_Ref193869006"></a><a name="_Ref193868415"></a><a name="_Ref193790563"></a><a name="_Ref193789121"></a><a name="_Ref193535613"></a><a name="_Toc169684118"></a><a name="_Toc167033768"></a><a name="_Toc168661885"></a><a name="_Toc86725692"></a><a name="_Toc86220729"></a><a name="_Toc86220151"></a><a name="_Toc86219884"></a><a name="_Toc86219779"></a><a name="_Toc79295014"></a><a name="_Toc27797771"></a><a name="_Toc27449599"></a><a name="_Ref27386521"><span lang="EN-US">12<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Modes</span></a><span lang="EN-US"> and Mode Transitions</span></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>mode</i> represents an operational mode state, which manifests
itself as a configuration of contained components, connections, and
mode-specific property value associations.  Modes can be defined for different
components in a system and modes can be inherited from the enclosing component.
A configuration may be an execution platform configuration in the form of a set
of processors, memories, buses, and devices; an application system
configuration in the form of a set of threads communicating through connections
or calls within or across processes and systems; or a source text operational
mode within a thread, i.e., an execution behavior embedded in the source text
itself.  When multiple modes are declared for a component, a mode transition
behavior declaration identifies which event and event data arrivals cause a
mode switch and the new mode, i.e., a change to a different configuration. 
Exactly one mode is considered the current mode.  The current mode determines
the set of threads that are considered <i>active</i>, i.e., ready to respond to
dispatches, and the connections that are available to transfer data and
control.  A set of modes may be inherited from the containing component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Mode transitions model dynamic operational behavior that represents
switching between configurations and changes in components internal
characteristics.  Such transitions are initiated  by mode transition triggering
events, i.e., the arrival of events or event data on ports named in a mode
transition or an event raised by the component itself (<b>self</b>).  When
declared for processes and systems, mode transitions model the switch between
alternative configurations of active threads. When declared for execution
platforms, mode transitions model the change between different execution
platform configurations.  When declared for threads and subprograms, modes may
represent application logic that is encoded in the source text and may result
in different associated property values for the thread or data component.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="FR">Syntax</span></p>

<pre style="page-break-after: avoid;"><a name="Mode"><span lang="FR">modes_subclause ::=</span></a></pre><pre style="page-break-after: avoid;"><b><span lang="FR">    modes</span></b><span lang="FR"> ( { mode | mode_transition }<sup>+ </sup>| none_statement )</span></pre><pre style="page-break-after: avoid;"><span lang="FR"> </span></pre><pre style="page-break-after: avoid;"><span lang="FR">requires_modes_subclause ::=</span></pre><pre style="page-break-after: avoid;"><b><span lang="FR">    requires modes</span></b><span lang="FR"> ( { mode }<sup>+ </sup>| none_statement )</span></pre><pre style="page-break-after: avoid;"><span lang="FR"> </span></pre><pre style="page-break-after: avoid;"><span lang="FR">mode ::= </span></pre><pre><span lang="FR">    <i>defining_mode</i>_identifier : [ <b>initial</b> ] <b>mode</b></span></pre><pre><b><span lang="FR">        </span></b><span lang="FR">[ <b>{</b> { <i>mode</i>_property_association }<sup>+</sup> <b>}</b> ]<b>;</b></span></pre><pre><b><span lang="FR"> </span></b></pre><pre><span lang="FR">mode_transition ::=</span></pre><pre><span lang="FR">    [ <i>defining__mode_transition</i>_identifier <b>:</b> ]</span></pre><pre><span lang="FR">    <i>source_mode</i>_identifier </span></pre><pre><span lang="FR">        <b>-[</b> mode_transition_trigger { <b>,</b> mode_transition_trigger }<sup>*</sup> <b>]-&gt; </b></span></pre><pre><b><span lang="FR">        </span></b><i><span lang="FR">destination_mode</span></i><span lang="FR">_identifier </span></pre><pre><b><span lang="FR">      </span></b><span lang="FR">[<b> {</b> { <i>mode_transition</i>_property_association }<sup>+</sup> <b>}</b> ] <b>;</b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">mode_transition_trigger ::= </span></pre><pre><span lang="FR">    unique_port_identifier | <b>self </b>. <i>event_</i>or_event_data_<i>source_</i>identifier </span></pre><pre><span lang="FR">    | <b>processor . </b><i>port_</i>identifier</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">unique_port_identifier ::= </span></pre><pre><span lang="FR">   [ <i>subcomponent_or_feature_group_or_subprogram_call</i>_identifier <b>. </b>] <i>port</i>_identifier</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">in_modes ::= </span></pre><pre><span lang="FR">    <b>in modes (</b> <i>mode</i>_identifier { <b>,</b> <i>mode</i>_identifier }<sup>*</sup> <b>)</b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="EN-US">component_in_modes ::= </span></pre><pre><span lang="EN-US">    <b>in modes (</b> ( mode_name { <b>,</b> mode_name }<sup>*</sup> ) <b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="FR">mode_name ::= <i>local_mode</i>_identifier [ <b>=&gt; </b><i>subcomponent_mode_</i>identifier ]</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">in_modes_and_transitions ::= </span></pre><pre><span lang="FR">    <b>in modes (</b> ( mode_or_transition { <b>,</b> mode_or_transition }<sup>*</sup> <b>)</b></span></pre><pre><b><span lang="FR"> </span></b></pre><pre><span lang="FR">mode_or_transition ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="FR">        <i>mode</i>_identifier | <i>mode_transition</i>_identifier</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="FR">Naming Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;"><span class="requality_text id_bdbdf608-0503-46c7-9545-09fb9f9f6be1"><a name="bdbdf608-0503-46c7-9545-09fb9f9f6be1" id="id_bdbdf608-0503-46c7-9545-09fb9f9f6be1" class="requality_id"></a>(N1)</span><span style="font: 7pt &quot;Times New Roman&quot;;"><span class="requality_text id_bdbdf608-0503-46c7-9545-09fb9f9f6be1">       
</span></span></span><span lang="EN-US"><span class="requality_text id_bdbdf608-0503-46c7-9545-09fb9f9f6be1">The defining mode and mode transition identifiers
must be unique within the local namespace of the component classifier that
contains the mode subclause.</span>  This means that modes declared in component types
and in component implementations for the same type must have different
identifiers.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The identifiers in a mode transition that refer
to modes must exist in the local namespace of the component classifier that
contains the mode subclause.  In other words, mode transitions of a component
can only refer to modes of the same component. </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">unique port </span><span lang="EN-US">identifier must be
either an <b>in </b>or <b>in out </b>event, data, or event data port identifier
in the namespace of the associated component type or an <b>out </b>or <b>in out
</b>event, data, or event data port in the namespace of the component type
associated with the named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">event_or_event_data_identifier</span><span lang="EN-US">.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N4)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The mode and mode transition identifiers named
in an </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in
modes</span></b><span lang="EN-US"> statement of a subcomponent or connection must
refer to modes or mode transitions declared in the local namespace of the
component implementation that contains the subcomponent or connection.  The
modes and mode transitions in the local name space are those declared in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">modes_subclause</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">requires_modes_subclause</span><span lang="EN-US"> of the component implementation or the component type.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N5)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">subcomponent_mode_identifier</span><span lang="EN-US"> in a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes</span><span lang="EN-US"> must refer to a required mode of the subcomponent for which the <b>in
modes</b> is declared.  If the subcomponent’s component type has a <b>requires
modes </b>clause and no mapping to a subcomponent mode identifier is specified,
then for each such mode in the subcomponent there must be a mode with the same
name in the containing component.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N6)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">An </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement in a
subcomponent or connection refinement declaration may be used to specify mode
membership to replace the one, if any, in the declaration being refined. A subcomponent
or connection refinement declaration without an <b>in modes</b> statement specifies
that the connection is active in all modes. </span></p>

<p class="MsoNormal"><span lang="EN-US">Special rules apply for <b>in modes </b>in
property associations (see Section 11.3). </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N7)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">For a contained property association with an </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement, the identifier must refer to modes or mode transitions
of the last subcomponent named in the dot-separated identifier list of the <b>applies
to </b>subclause, or to modes and mode transitions of the component containing
the property association if the <b>applies to </b>subclause does not start with
a subcomponent identifier.  </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A mode or mode transition can be declared in any
of the component categories.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L2)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a component classifier contains mode
declarations, one of those modes must be declared with the reserved word <b>initial</b>. 
If the component classifier extends another component classifier,  the initial
mode must have been declared in one of the ancestor component classifier. This rule
does not apply to <b>requires modes </b>subclauses.</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L3)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The set of transitions declared within a single
component implementation must define a deterministic transition function.  For
each mode, there must exist exactly one transition, which can cause transition
to another mode.  </span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L4)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">If a component has been declared with a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">requires_mode_clause</span><span lang="EN-US">, then a subcomponent declaration referencing this component
classifier may include a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_in_modes</span><span lang="EN-US"> that specifies a mapping for the inherited modes by specifying the
subcomponent’s mode identifier after the optional <b>=&gt;</b>; if the mapping
is not specified the same mode identifier is assumed.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Standard
Properties</span></p>

<pre><span lang="EN-US">Mode_Transition_Response: <b>enumeration </b>( emergency, planned )</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Mode Sensitive Architecture</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The mode semantics described here focus on a single mode subclause. 
A system instance that represents the runtime architecture of an operational
system can contain multiple components with their own mode transitions.  The
semantics of system-wide mode transitions are discussed in Section </span><span lang="EN-US">13.6</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A mode represents an operational state that is represented as a
runtime configuration of contained components, connections, and mode-specific
property value associations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A mode may represent a runtime configuration of systems, processes,
thread groups and threads and their connections for a given operational state. 
In this case the modes are declared in thread groups, processes and systems,
and <b>in modes</b> clauses indicate which subcomponents and connections are
active in a given mode.  In this case, only the threads that are part of the
current mode are in the <i>suspended awaiting dispatch</i> state – responding
to dispatch requests.  All other threads are in the <i>suspended awaiting mode</i>
state or <i>thread halted</i> state.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A mode may also represent logical execution state within a thread.
In this case the mode logic is embedded in the source text and may be
represented as thread modes and mode-specific thread property values or
mode-specific call sequences through the use of the <b>in modes </b>clause.  Thread
and subprogram internal modes effectively represent a set of behavioral states,
whose state transition behavior can be specified through annex subclauses of
the Behavior Annex notation (see </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">System and execution platform component declarations can have
subcomponents with <b>in modes </b>clauses.  In this case, only the execution
platform components that are part of the current mode are accessible to
software components. For example, only the processors and memories that are
part of the current mode can be the target of bindings of application components
active in that mode.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">For execution platform components a mode can represent an
operational mode that is internal to the execution platform component.  For
example, a processor may execute at two execution speeds.  The different
execution speeds are reflected in mode-specific property values</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A component type or component implementation may contain several
declared modes.  Exactly one of those modes is the <i>current</i> mode. 
Initially, the initial mode is the current mode. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component that has modes itself can be a subcomponent of another component with
modes.  As a result, the component can be deactivated and activated as result
of mode transitions in the enclosing component. On activation of a components
with modes the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Resumption_Policy</span><span lang="EN-US"> property determines whether the initial mode is entered or the mode
from the last deactivation is resumed.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement is declared as part of subcomponent declarations,
subprogram call sequences, flow implementations, and property associations.  It
specifies the modes for which these declarations and property values hold. The
mode identifiers refer to mode declarations in the modes subclause of the
component classifier.  If the </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement is not
present, then the subcomponent, subprogram call sequence, flow implementation,
or property association is part of all modes.  If a property association has
both mode-specific declarations and a declaration without an </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement, then the declaration without the </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement applies to those modes not covered by the mode-specific
declarations.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
component type may specify through a <b>requires modes</b> declaration that a
subcomponent should inherit the modes of its containing component..  In this
case the <b>in modes</b> declared as part of a subcomponent  defines a mapping
of the modes of the containing component to the inherited modes of the subcomponent. 
The modes of both may have the same names, or they may be different.  Multiple
modes of the containing component may be mapped to the same subcomponent mode. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement declared as part of connection declarations specify the
modes or mode transitions for which these connection declarations hold. The
mode identifiers refer to mode declarations in the modes subclause of the
component implementation. If a connection is declared to be part of a mode
transition, then the content of the ultimate source port is transferred to the
ultimate destination port at the actual mode switch time. If the </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement contains only mode transitions, then the connection is
part of the specified mode transitions, but not part of any particular mode. 
If the  </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in
modes</span></b><span lang="EN-US"> statement is not present, then the connection
is part of all modes.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
the </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in
modes</span></b><span lang="EN-US"> statement is declared as part of a
refinement, the newly named modes replace the modes specified in the
declaration being refined.</span></p>

<p class="MsoBodyText"><b><span lang="EN-US">Mode Transition</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
modes subclause declares a state machine describing the dynamic mode transition
behavior between modes. The states of the state machine represent the different
modes and the transitions specify the event(s) that can trigger a transition to
the destination mode. Only one mode alternative represents the current mode at
any one time.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
arrival of an event or event data through an event or event data port that is
named in one of the transitions is called a mode transition <i>trigger event</i>.
A mode transition is triggered if one of the ports named in a mode transition out
of the state representing the current mode causes the trigger event. If such an
trigger event occurs and there is no transition out of the current mode naming
the port with the trigger event, the trigger event is ignored with respect to
mode transitions of the receiving modal component.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
mode transition may actually be performed immediately if it is considered an <i>emergency</i>,
or it may be performed in a <i>planned</i> fashion  after currently executing
threads complete their execution and the dispatches of a set of critical thread
are aligned (see Section </span><span lang="EN-US">13.6</span><span lang="EN-US">
for more detail). This is indicated by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Mode_Transition_Response</span><span lang="EN-US"> property on the mode transition with the default being planned.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
several trigger events occur logically simultaneously and affect different mode
transitions out of the current mode, the order of arrival for the purpose of
determining the mode transition is implementation dependent.  </span><span lang="EN-US">If an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US"> property is associated with each port named in mode transitions,
then the mode transition with the highest port urgency takes precedence. If
several ports have the same urgency then the mode transition is chosen
non-deterministically.</span><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Any
change of the current mode has the effect of changing the property value in
property associations with mode-specific values – as expressed by the </span><b><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">in modes</span></b><span lang="EN-US"> statement.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
thread may execute different source text sequences under different modes
declared within a thread. This may be represented by different compute
execution times and different entrypoints or call sequences for different
modes. The current mode at dispatch time determines the source text sequence to
be executed. In other words, a thread-internal mode represents a behavioral
state, in which the thread completes execution of one dispatch and awaits the
next dispatch. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
semantics of mode transitions between modes declared inside threads have been
described in Section </span><span lang="EN-US">5.4.5</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Mode
transitions within an execution platform component occur as a result of
external or internal events, e.g., a processor may switch to a different
execution speed. A mode transition within a thread or execution platform
component does not affect the set of active threads, processors, devices,
buses, or memories, nor does it affect the set of active connections external
to the thread or execution platform component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
mode transition within a system, process, or thread group implementation has
the effect of deactivating and activating threads to respond to dispatches, and
changing the pattern of connections between components.  Deactivated threads
transition to the <i>suspended awaiting mode</i> state.  Background threads
that are not part of the new mode suspend performing their execution. Activated
threads transition to the <i>suspended awaiting dispatch</i> state and start
responding to dispatches.  Previously suspended background threads that are
part of the new mode resume performing execution once the transition into the
new mode is complete.  Threads that are part of both the old and new mode of a
mode transition continue to respond to dispatches and perform execution.  Ports
that were connected in the old mode, may not be connected in the new mode and
vice versa.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Threads
that are active in both the old and the new mode are dispatched in their usual
manner; in the case of background threads, they continue in the <i>execute</i>
state.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">At
the time of the actual mode switch, any threads that were active in the old
mode and are inactive in the new mode execute their </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deactivate_Entrypoint</span><span lang="EN-US">.
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">At
the time of the actual mode switch, any threads that were inactive in the old
mode and are active in the new mode execute their </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Activate_Entrypoint</span><span lang="EN-US">. </span></p>

<p class="Note"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">Mode transitions can only be triggered by the
arrival of an event or event data on a named port or a <b>self </b>event. This
means that trigger conditions based on the content of any data cannot be
expressed in the mode transition declaration. Instead, they have to be
connected to a thread whose source text interprets the data portion to identify
the error type and then raise an appropriate event through an out event port
that triggers the appropriate mode transition.  Such a thread typically plays
the role of a system health monitor that makes system reconfiguration decisions
based on the nature and frequency of detected faults.</span></p>

<p class="Note"><span lang="EN-US">The default mode transition trigger conditions
based on a set of ports is a disjunction.  Other conditions can be modeled
through the use of the Behavior Annex (see </span><span lang="EN-US">Annex Document D</span><span lang="EN-US">).</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Permissions and Requirements</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Every
method for processing specifications must parse mode transition declarations
and check the legality rules defined in this standard.  However, a method of
processing specifications need not define how to build a system from a
specification that contains mode transition declarations.  That is, complex
behaviors that may have multiple modes of operation may be rejected by a method
of building systems as an unsupported capability.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In an
actual distributed system, exact simultaneity among multiple events cannot be
achieved.  A system realization must use synchronization protocols sufficient
to ensure that the causal ordering of event and data transfers defined by the
logical temporal semantics of this standard are satisfied by the actual system,
to the degree of assurance required by an application.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation is permitted to provide preservation of queue content
for aperiodic and sporadic threads on a mode switch until the next activation.
This is specified using the thread property </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Queue_Handling_Protocol</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A method
of implementation is permitted to support a subset of the described protocols
to handle threads that are in the performing computation state at the time
instant of actual mode switch.  They must document the chosen subset and its
semantic behavior as part of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Active_Thread_Handling_Protocol</span><span lang="EN-US"> property.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of implementation may enforce that there is a mode-specific property
value defined for each mode.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"><a name="0bf95a0e-0399-481c-9d7c-b38f0b1e2f61" id="id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61" class="requality_id"></a>-- This is
an AADL fragment inside a package</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">data</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Position_Type</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Position_Type; </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Gps_Sender</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">features</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Position:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Position_Type;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   -- if connected secondary position
information is used to recalibrate</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">SecondaryPosition:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Position_Type </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">                                 {
Required_Connection =&gt; </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">false</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;};</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Gps_Sender;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps_Sender.Basic</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps_Sender.Basic;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">implementation</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps_Sender.Secure</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps_Sender.Secure;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> GPS_Health_Monitor</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">features</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  
Backup_Stopped: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">event</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Main_Stopped:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">event</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   All_Ok: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">event</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Run_Secure: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">event</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Run_Normal: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">event</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> GPS_Health_Monitor;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">system </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Gps</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">features</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Position:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Position_Type;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Init_Done: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">event</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Gps;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps.Dual</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">subcomponents</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Main_Gps: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Gps_Sender.Basic </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> (Dualmode, Mainmode);</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Backup_Gps: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Gps_Sender.Basic </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> (Dualmode, Backupmode);</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Monitor: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
GPS_Health_Monitor;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">connections</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   conn1 : </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Main_Gps.Position -&gt; Position</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> in modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> (Dualmode, Mainmode);</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   conn2 : </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Backup_Gps.Position -&gt; Position </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> (Backupmode);</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   conn3 : </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Backup_Gps.Position -&gt; Main_Gps.SecondaryPosition </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">                                       </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in
modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> (Dualmode);</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">modes</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   </span></span></b><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Initialize: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">initial
mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Dualmode : </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;  </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Mainmode : </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">; </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Backupmode: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   </span></span><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Started: Initialize
–[ Init_Done ]-&gt; Dualmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Dualmode –[ Monitor.Backup_Stopped
]-&gt; Mainmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Dualmode –[ Monitor.Main_Stopped
]-&gt; Backupmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Mainmode –[ Monitor.All_Ok ]-&gt;
Dualmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Backupmode –[ Monitor.All_Ok ]-&gt;
Dualmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Gps.Dual;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> </span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps.Secure </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">extends</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps.Dual</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">subcomponents</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Secure_Gps: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Gps_Sender.Secure
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> ( Securemode );</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">connections</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   secureconn: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Secure_Gps.Position -&gt; Position</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> in modes</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> ( Securemode );</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">modes</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Securemode: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   SingleSecuremode: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Dualmode –[ Monitor.Run_Secure ]-&gt;
Securemode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Securemode –[ Monitor.Run_Normal
]-&gt; Dualmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Securemode –[ Monitor.Backup_Stopped
]-&gt; SingleSecuremode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   SingleSecuremode –[ Monitor.Run_Normal
]-&gt; Mainmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">   Securemode –[ Monitor.Main_Stopped
]-&gt; Backupmode;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end</span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">
Gps.Secure;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="MsoBodyText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">The following example illustrates
inherited modes. A process declares a high fidelity and a low fidelity mode. 
All threads in the process respond to these two modes by performing high or low
fidelity computation.</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">thread </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Calculate</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">features</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Incoming:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in event data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Outgoing:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out event data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">requires modes</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">HighFidelity:
</span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">initial mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  LowFidelity: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Calculate;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Altitude</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">features </span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">doHigh: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in
event port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  doLow: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in event port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  Incoming: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in event data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  Outgoing: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">out event data port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Altitude;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">process implementation </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Altitude.impl</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">subcomponents</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  calc: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">thread C</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">alculate </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">in
modes </span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">(LowFid =&gt; LowFidelity, HiFid =&gt; HighFidelity);</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">connections</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  inconn: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> Incoming -&gt;
calc.Incoming;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  outconn: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">port</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> calc.Outgoing
-&gt; Outgoing;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">modes</span></span></b></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  HiFid: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">initial mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  LowFid: </span><b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61"> mode</span></b><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="FR"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  </span></span><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">HiFid –[ doLow
]-&gt; LowFid;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">  LowFid –[ doHigh ]-&gt; HiFid;</span></span></p><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">end </span></span></b><span lang="EN-US"><span class="requality_text id_0bf95a0e-0399-481c-9d7c-b38f0b1e2f61">Altitude.impl;</span></span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h1><a name="_Toc318320363"></a><a name="_Toc169684120"></a><a name="_Toc167033770"></a><a name="_Toc168661887"></a><a name="_Toc86725694"></a><a name="_Toc86220731"></a><a name="_Toc86220152"></a><a name="_Toc86219886"></a><a name="_Toc86219781"></a><a name="_Toc79295016"></a><a name="_Ref70144460"></a><a name="_Ref70144428"><span lang="EN-US">13<span style="font: 7pt &quot;Times New Roman&quot;;"> 
</span></span><span lang="EN-US">Operational System</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Component type and component implementation declarations are
architecture design elements that define the structure and connectivity of a actual
system architecture.  They are component classifiers that must be instantiated
to create a complete system instance.  A complete system instance that
represents the containment hierarchy of the actual system is created by
instantiating a root system implementation and then recursively instantiating
the subcomponents and their subcomponents.  Once instantiated, a system
instance can be completely bound, i.e., each thread is bound to a processor;
each source text, data component, and port is bound to memory; and each
connection is bound to a bus if necessary.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A completely instantiated and bound system acts as a blueprint for a
system build.  Binary images are created and configured into load instructions
according to the system instance specification in AADL.</span></p>

<h2><a name="_Toc318320364"></a><a name="_Toc169684121"></a><a name="_Toc167033771"></a><a name="_Toc168661888"></a><a name="_Toc86725695"></a><a name="_Toc86220732"></a><a name="_Toc86220261"></a><a name="_Toc86219887"></a><a name="_Toc86219782"></a><a name="_Toc79295017"></a><a name="_Ref56935634"><span lang="EN-US">13.1<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">System Instances</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system instance represents the runtime architecture of a actual
system that consists of application software components and execution platform
components. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system instance is <i>completely instantiable</i> if the system
implementation being instantiated is completely specified and completely
resolved. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system instance is <i>completely instantiated and bound</i> if all
threads are ultimately bound to a processor, all source text making up process
address spaces are bound to memory, connections are bound to buses if their
ultimate source and destinations are bound to different processors, and
subprogram calls are bound to remote subprograms as necessary. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A set of contained property associations can reflect property values
that are specific to individual instances of components, ports, connections,
provided and required access.  These properties may represent the actual
binding of components, as well as results of analysis, simulation, or actual
execution of the completely instantiated and bound system.  Thus, multiple sets
of contained property associations can be associated with the same system
instance to represent different system configurations.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">A complete system instance must not
contain incompletely specified subcomponents, ports, and subprograms.  All
processes in a completely instantiable system must contain at least one thread.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C2)</span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Connection</span><span lang="EN-US">
property may be used to indicate that a port connection is required.  In the
case of the predeclared </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete</span><span lang="EN-US"> ports (see Section 5.4), connections are optional.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C3)</span><span lang="EN-US">In a complete system instance, the required
ports of all threads, devices, and processors must be the ultimate source or
destination of semantic connections. </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C4)</span><span lang="EN-US">In a completely instantiable system, the
subprogram calls of all threads must either be local calls or be bound to a remote
subprogram whose thread is part of the same mode.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C5)</span><span lang="EN-US">In a completely instantiable system, for
every mode that is the source of mode transitions, there must be at least one
mode transition that is the ultimate destination of a semantic connection whose
ultimate source is part of the mode.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C6)</span><span lang="EN-US">In a complete system instance, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aperiodic</span><span lang="EN-US">
and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sporadic</span><span lang="EN-US"> threads that are part of a given mode must have at least one
connection to one of their <b>in</b> event ports or <b>in</b> event data
ports.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C7)</span><span lang="EN-US">For instantiable systems, all threads
must be bindable to processors and all components representing source text must
be bindable to memory.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C8)</span><span lang="EN-US">The source text associated with all
contained components of the system instance must be compliant with the
specified component type, component implementation, and property associations. </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C9)</span><span lang="EN-US">In order to be considered complete,
system instance must contain at least one thread, one processor and one memory
component in its containment hierarchy to represent an application system that
is executable on an execution platform, i.e., a processor with memory
containing the application code and data. </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C10)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a system instance has processors of different types, then the
execution time of threads must be specified for each processor type using the <b>in
binding</b> statement, or a reference processor type must be identified through
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Reference_Processor</span><span lang="EN-US"> property. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system instance represents an operational actual system. That actual
system may be a stand-alone system or a system of systems.  A system instance
consists of application software and execution platform components.  The
component configuration, i.e., the hierarchical structure and interconnection
topology of these components is statically known.  The mode concept describes
alternative statically known component configurations.  The runtime behavior of
the system allows for switching between these alternative configurations
according to a mode transition specification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The actual system denoted by a system implementation can be built if
the system is instantiable and if source text exists for all components whose
properties refer to source text. This source text must be compliant with the
AADL specification and the source text language semantics.  Source text is compiled
and linked to generate binary images.  The binary images are loaded into memory
and made accessible to threads in virtual address spaces of processes.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In addition, there exists a kernel address space for every
processor.  This address space contains binary images of processor software and
device driver software bound to the processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Execution time of threads and subprograms is specified in units of
time.  If a system instance has processors of different types, then the
execution time may vary from processor type to processor type.  Execution time
specific to a processor type can be specified using the <b>in binding </b>statement
in a property association.  Alternatively, the execution time can be specified
with respect to a reference processor.  The reference processor is specified
through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Reference_Processor</span><span lang="EN-US"> property.  This property is declared as <b>inherit</b>, i.e., it
can be declared at the system level and apply to all threads in a system.  When
a thread is bound to a specific processor type, its execution time, if not
explicitly defined for this processor, will be adjusted according to a scaling
factor between the reference processor and the target processor.</span></p>

<h2><a name="_Toc318320365"></a><a name="_Toc169684122"></a><a name="_Toc167033772"></a><a name="_Toc168661889"></a><a name="_Toc86725696"></a><a name="_Toc86220733"></a><a name="_Toc86220262"></a><a name="_Toc86219888"></a><a name="_Toc86219783"></a><a name="_Toc79295019"></a><a name="_Toc27797773"><span lang="EN-US">13.2<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">System Binding</span></a></h2>

<p class="NumberedParagraph"><a name="_Toc27449601"></a><a name="_Toc27449665"></a><a name="_Toc27450177"></a><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This section defines how binary images produced by compiling source
units are assigned to and loaded onto processor and memory resources, taking
into account requirements for component sharing and the interconnect topology
between processors, memories and devices.  The decisions and methods required
to combine the components of a system to produce a actual system implementation
are collectively called bindings.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Naming
Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Allowed_Processor_Binding</span><span lang="EN-US"> property
values must evaluate to a processor, virtual processor, or a system that
contains a processor in its component containment hierarchy.  </span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Allowed_Memory_Binding</span><span lang="EN-US"> property values must
evaluate to a memory, a processor that contains memory or a system that
contains a memory or a processor containing memory in its component containment
hierarchy.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The memory requirements of ports and data
components are specified as property values of their data types or by
properties on the port feature or data subcomponent.  Those property
associations can have binding-specific values.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Consistency
Rules</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C1)</span><span lang="EN-US">Every mode-specific configuration of a
system instance must have a binding of every process component to a (set of)
memory component(s), and a binding of every thread component to a (set of)
processor(s).  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C2)</span><span lang="EN-US">In the case of dynamic process loading,
the actual binding may change at runtime.  In the case of tightly coupled
multi-processor configurations, such as dual core processors, the actual thread
binding may change between members of an actual binding set of processors as
these processors service a common set of thread ready queues.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C3)</span><span lang="EN-US">Multiple software components may be
bound to a single memory component. </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C4)</span><span lang="EN-US">A software component may be bound to
multiple memory components.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C5)</span><span lang="EN-US">A thread must be bound to a one or more
processors. If it is bound to multiple processors, the processors share a ready
queue, i.e., the thread executes on one processor at a time.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C6)</span><span lang="EN-US">Multiple threads can be bound to a
single processor.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C7)</span><span lang="EN-US">All software components for a process
must be bound to memory components that are all accessible from every processor
to which any thread contained in the process is bound.  That is, every thread
is able to access every memory component into which the process containing that
thread is loaded.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C8)</span><span lang="EN-US">A shared data component must be bound to
memory accessible by all processors to which the threads sharing the data
component are bound.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C9)</span><span lang="EN-US">For all threads in a process, all
processors to which those threads are bound must have identical component types
and component implementations.  That is, all threads that are contained in a
given process must all be executing on the same kind of processor, as indicated
by the processor classifier reference value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Processor_Binding_Class</span><span lang="EN-US"> property associated with the process.  Furthermore, all those
processors must be able to access the memory to which the process is bound.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C10)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The complete set of software components making up the functionality
of the processor must be bound to memory that is accessible by that processor.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C11)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Each thread must be bound to a processor satisfying the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Processor_Binding_Class </span><span lang="EN-US">and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Processor_Binding</span><span lang="EN-US"> property values of the thread.  </span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C12)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Processor_Binding</span><span lang="EN-US"> property may specify a single processor, thus specifying the exact
processor binding.  It may also specify a list of processor components or
system components containing processor components, indicating that the thread
is bindable to any of those processor components.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C13)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Each process must be bound to a memory satisfying the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding_Class </span><span lang="EN-US">and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding</span><span lang="EN-US"> property values of the process.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding</span><span lang="EN-US"> property may specify a single memory component, thus specifying the
exact memory binding. It may also specify a list of memory components or system
components containing memory components, indicating that the process is
bindable to any of those memory components.</span></p>

<p class="ConsistencyRule" style="margin-left: 28.8pt; text-indent: -28.8pt;"><span lang="EN-US">(C14)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The memory requirements of the binary images and the runtime memory
requirements of threads and processes bound to a memory component must not
exceed that memory’s capacity. The execution time requirements of all threads
bound to a processor must not exceed the schedulable cycles required to ensure
that all thread timing requirements are met.  These two constraints may be
checked statically or dynamically.  Runtime detection of such a memory capacity
or timing requirements violation results in an error that the application
system can choose to recover from.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A complete system instance is instantiated and bound by identifying
the actual binding of all threads to processors, all binary images reflected in
processes and other components to memory, and all connections to buses if they
span multiple processors.  The actual binding can be recorded for each
component in the containment hierarchy by property associations declared within
the system implementation.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The actual binding must be determined within specified binding
constraints. Binding constraints of application components to execution
platform components are expressed by the allowed binding and allowed binding
class properties for memory, processor, and bus.  In the case of an allowed
binding property, the execution platform component is identified by a sequence
of ‘.’ (dot) separated subcomponent names. This sequence starts with the
subcomponent contained in the component implementation for which the property
association is declared. Or the sequence begins with the subcomponent contained
in the component implementation of the subcomponent or system implementation
for which the property association is declared. This means that the property
association representing the binding constraint or the actual binding may have
to be declared as a component instance property association of a component that
represents a common root of the components to be bound.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A method of building systems is permitted to require bindings of
selected kinds to be fixed at development time, or to be fixed at the time of actual
system construction.  A method of building systems is permitted to allow
bindings of selected kinds to change dynamically at runtime.  For example, a
method of building systems may require process to memory binding and loading to
be fixed during actual system construction, and may require thread to processor
bindings to be fixed at mode changes.  Other choices are possible and
permitted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A method of building systems must check and enforce the semantics
and legality rules defined in this standard.  Property associations may impose
constraints on allowed bindings.  The access semantics impose a number of
constraints on allowed bindings for processes and threads to execution platform
systems, and ultimately to processors and memories.  In general, the semantic
constraints depend on the particular software and hardware architecture
interconnect topologies.  In particular, for most hardware and operating system
configurations all threads contained in a process must execute on the same
processor.  Such additional restrictions must be taken into account by the
method of building systems.  A method of building systems is otherwise
permitted to make any partitioning and binding choices that are consistent with
the semantics and legality rules of this standard.</span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">If multiple processes share a component, then
the physical memory to which the shared component is bound will appear in the
virtual address space of all those processes.  This physical memory is not
necessarily addressed using either the same virtual address in different
processes or the same physical address from different processors.  An access
property association may be used to specify different addresses used to access
the same component from different processors.</span></p>

<p class="Note"><span lang="EN-US">The AADL supports binding-specific property
values.  This allows different property values to be specified for a component
property whose values are sensitive to binding decisions.  </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><a name="_Ref57444776"><span lang="EN-US">Examples</span></a></p>

<p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"><a name="8ec2922c-f246-4e0e-8f64-77cb847405a5" id="id_8ec2922c-f246-4e0e-8f64-77cb847405a5" class="requality_id"></a>package </span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">Deployment</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">system</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> smp</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText" style="page-break-after: avoid;"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
smp;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> smp.s1</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">-- a multi-processor system</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">subcomponents</span></span></b></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   p1: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   p2: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1; </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   p3: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
smp.s1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">process</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p1</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">process implementation</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p1.i1</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">subcomponents</span></span></b></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   ta: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">thread</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> t1.i1; </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   tb: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">thread</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> t1.i1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p1.i1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">thread</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> t1</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> t1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">thread</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">implementation</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> t1.i1</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> t1.i1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">implementation</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">system</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> S</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US" style="background: none repeat scroll 0% 0% white;"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> S;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">system implementation</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> S.I </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">-- a system combining application
components </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">-- with execution platform components</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">subcomponents</span></span></b></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   p_a: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">process</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p1.i1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   p_b: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">process</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p1.i1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   up1: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1; </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   up2: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">processor</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> cpu.u1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   ss1: </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">system</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> smp.s1;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">properties</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">    Allowed_Processor_Binding =&gt; ( </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">reference</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
(up1), </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">reference</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> (up2) ) </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">                                     </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">applies
to</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p_a.ta; </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">    Allowed_Processor_Binding =&gt; ( </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">reference</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
(up1), </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">reference</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> (up2) )</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">                                    
applies to</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p_a.tb;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><br class="requality_node id_8ec2922c-f246-4e0e-8f64-77cb847405a5" /><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
   -- ta is restricted to a subset of processors that tb can be bound to;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   -- since ta and tb are part of the
same process they must be bound to the</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   -- same processor in most hardware
configurations </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   Allowed_Processor_Binding =&gt; </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">reference</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
(ss1.p3</span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">)</span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> applies to</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p_b.ta;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">   Allowed_Processor_Binding =&gt; </span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">reference</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">
(ss1</span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> </span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">)</span><b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> applies to</span></b><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> p_b.tb; </span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end</span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5"> S.I;</span></span></p><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">

</span><p class="ExampleText"><b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">end </span></span></b><span lang="EN-US"><span class="requality_text id_8ec2922c-f246-4e0e-8f64-77cb847405a5">Deployment;</span></span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES: </span></p>

<p class="Note" style="page-break-after: auto;"><span lang="EN-US">Binding properties
are declared in the system implementation that contains in its containment
hierarchy both the components to be bound and the execution platform components
that are the target of the binding.  Binding properties can also be declared
separately for each instance of such a system implementation, either as part of
the system instantiation or as part of a subcomponent declaration.</span></p>

<p class="Note" style="page-break-after: auto;"><span lang="EN-US"> </span></p>

<h2><a name="_Toc318320366"><span lang="EN-US">13.3<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">System Startup</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">On system startup the system instance transitions from <i>system
offline</i> to <i>system starting </i>(see Figure 22).   <b>Start(system)</b>
initiates the initialization of the execution platform components.  In the case
of processors, the binary images of the kernel address space are loaded into
memory of each processor, and execution is started to initialize the execution
platform software (see </span><span lang="EN-US">Figure 9</span><span lang="EN-US">). 
Loading into memory may take zero time, if the memory can be preloaded, e.g.,
PROM or flash memory.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Once a processor is initialized (<i>Processor operational</i>), each
processor initiates the initialization of virtual processors bound to the
processor, if any (see </span><span lang="EN-US">Figure 9</span><span lang="EN-US">). 
When the virtual processors have completed their initialization they are
operational (see </span><span lang="EN-US">Figure 10</span><span lang="EN-US">).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US"> When processors and virtual processors have entered their
operational state (<b>started(processor) </b>and <b>started(vprocessor)</b>), the
loading of the binary images of processes bound to the specific processor or
its virtual processors into memory is initiated (see </span><span lang="EN-US">Figure 8</span><span lang="EN-US">). Process binary images are loaded
in the memory component to which the process and its contained software
components are bound.  In a static process loading scenario, all binary images
must be loaded before execution of the application system starts, i.e., thread
initialization is initiated. In a dynamic process loading scenario, binary
images of all the processes that contain a thread that is part of the current
mode must be loaded.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The maximum system initialization time can be determined as </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">max(</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Startup_Deadline</span><span lang="EN-US">) of all processors and
other hardware components </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">+ max(</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Startup_Deadline</span><span lang="EN-US">) of all virtual
processors </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">+ max(</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Load_Deadline</span><span lang="EN-US">) of all processes </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">+ max(</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Process_Startup_Deadline)</span><span lang="EN-US"> of all processes</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">+ max(</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Initialize_Deadline</span><span lang="EN-US">) of all threads.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">All software components for a process must be bound to memory
components that are all accessible from every processor to which any thread
contained in the process is bound.  That is, every thread is able to access
every memory component into which the binary image of the process containing
that thread is loaded.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Data components shared across processes must be bound to memory
accessible by all processors to which the processes sharing the data component
are bound. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Thread initialization must be completed by the next hyperperiod of
the initial mode.  Once all threads are initialized, threads that are part of
the initial mode enter the await dispatch state.   If loaded, threads that are
not part of the initial mode enter the suspend awaiting mode state (see Figure 5).
At their first dispatch, the initial values of connected <b>out</b> or <b>in
out</b> ports are made available to destination threads in their <b>in</b> or <b>in
out</b> ports.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This initialization model assumes independent initialization of
threads, i.e., no ordering requirement (other than processes must be initialized
first).  If there is an ordering requirement the user can introduce an
initialization mode, in which they can utilize the full power of AADL to
specify thread execution dependencies.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="572" height="273" src="imgs/image034.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center; page-break-after: avoid;"><a name="_Toc318320431"></a><a name="_Toc167033819"></a><a name="_Toc86591139"></a><a name="_Toc79295066"></a><a name="_Ref37236789"><span lang="EN-US">Figure </span></a><span lang="EN-US">22</span><span lang="EN-US"> System
Instance States, Transitions, and Actions</span></p>

<h2><a name="_Toc318320367"><span lang="EN-US">13.4<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Normal System Operation</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Normal operation, i.e., the execution semantics of individual
threads and transfer of data and control according to connection and shared
access semantics, have been covered in previous sections.  In this section we
focus on the coordination of such execution semantics throughout a system
instance.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A system instance is called synchronized if all components use a
globally synchronized reference time. A system instance is called asynchronous
if different components use separate clocks with the potential for clock drift.
The clock drift in asynchronous systems may be bounded, e.g., by
resynchronizing the clocks.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In a synchronized system, periodic threads are dispatched
simultaneously with respect to a global clock.  The hyperperiod of a set of
periodic threads is defined to be the least common multiple of the periods of
those threads.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In a synchronized system, a raised event logically arrives
simultaneously at the ultimate destination of all semantic connections whose
ultimate source raised the event.  In a synchronized system, two events are
considered to be raised logically simultaneously if they occur within the
granularity of the globally synchronized reference time. If several events are
logically raised simultaneously and arrive at the same port or at different
transitions out of the current mode in the same or different components, the
order of arrival is implementation-dependent. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In an asynchronous system the above hold within a synchronization
domain, i.e., periodic threads are dispatched simultaneously and events arrive
logically simultaneously. A method of implementing a system may provide coordination
protocols for asynchronous system to provide simultaneity guarantees within a
certain time granularity.  Otherwise, the dispatches and event arrivals are
considered independent across synchronization domains.</span></p>

<h2><a name="_Toc318320368"><span lang="EN-US">13.5<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">System Operation Modes</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The set of all modes specified for all components of a system
instance form a set of concurrent mode state machines, whose composite state is
called <i>system operation mode</i> (SOM).  The set of possible SOMs is the
cross product of the sets of modes for each component.  That is, a SOM is a set
of component modes, one mode for each component of the system.  The initial SOM
is the set of initial modes for each component.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The set of possible SOMs can be reduced by taking into account mode
combinations that are not reachable. For example, if a component instance with
modes is itself not active under certain modes of one of its containing
components, then these mode combinations can be excluded.  Similarly, of a
component inherits modes from a containing component, then only the mode
combinations of the containing component need to be considered.  Finally,
reachability analysis of modes taking into account mode transition conditions may
further reduce the set of SOMs to be considered.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The discrete variable <b>Mode</b> denotes a SOM.  That is, the
variable <b>Mode</b> denotes a compound discrete state that is defined by the
mode hybrid semantic diagrams for each component instance in the system.  Note
that the value of <b>Mode</b> will in general change at various instants of
time during system operation, although not in a continuous time-varying way.</span></p>

<h2><a name="_Toc318320369"></a><a name="_Ref199821556"></a><a name="_Ref199821517"></a><a name="_Ref199820986"></a><a name="_Ref199819407"></a><a name="_Ref199819368"></a><a name="_Ref197933714"><span lang="EN-US">13.6<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">System Operation Mode Transitions</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A SOM transition is initiated whenever a mode transition trigger
event (see also Section </span><span lang="EN-US">12</span><span lang="EN-US">)
occurs in any modal component in the system instance.  A single sent event or
event data can trigger a mode switch request in one or more components.  In a
synchronized system, this trigger event occurs logically simultaneously for all
components and the resulting component mode transition requests are treated as
a single SOM transition.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Several events may occur logically simultaneously and may originate
from different ports of the same component, e.g., through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service call with multiple ports as parameter, or from different
components at the same time.  If they are semantically connected to transitions
in different components that lead out of their current mode or to different
transitions out of the same mode in one component, then events are treated as independent
SOM transition initiations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If multiple SOM transition initiations occurs logically
simultaneously, one is chosen in an implementation-dependent manner.  </span><span lang="EN-US">If an </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US"> property is associated with each port named in mode transitions,
then the mode transition with the highest port urgency takes precedence. If
several ports have the same urgency then the mode transition is chosen
non-deterministically.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A mode transition of a thread internal mode, i.e., a mode declared
in the thread or one of its subprograms, that is triggered by the component
itself or is triggered by an event or data arriving ata port of the thread,
takes place at the next thread dispatch.  For further detail see Section </span><span lang="EN-US">5.4.5</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A mode transition of a processor, device, bus, or memory internal
mode, i.e., a mode declared in the component implementation, that is triggered
by the component itself or is triggered by an external event, takes place
immediately.</span></p>

<p class="MsoBodyText"><span lang="EN-US">The next paragraphs address mode
transitions that involve activation and deactivation of threads and
connections.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">If a mode transition has a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Mode_Transition_Response</span><span lang="EN-US"> property value
of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Emergency, </span><span lang="EN-US">the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered in zero time and the actual SOM transition is
performed immediately.  In this case all threads in the performing state that have
to be deactivated are aborted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">After an event triggering a SOM transition request has arrived, the
actual SOM transition occurs as a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Planned</span><span lang="EN-US"> response, if the mode transition
does not have a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Mode_Transition_Response</span><span lang="EN-US"> property value of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Emergency</span><span lang="EN-US">.  In this case, execution continues under the old SOM until the
dispatches of a critical set of periodic components (threads and devices),
which are active in the old SOM, align at their hyperperiod. At that point the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered.  A component is considered critical if it has a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Synchronized_Component</span><span lang="EN-US"> property value of true. If the set of critical components is empty,
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered immediately.  This is indicated in </span><span lang="EN-US">Figure 23</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">by the guard of the function Hyper(<b>Mode</b>) on the transition
from the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">current_system_operation_mode</span><span lang="EN-US"> state to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Until the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered, any mode transition trigger event with the same
or lower urgency that would result in a SOM transition from the current SOM is
ignored.  A trigger event with higher urgency supersedes the event under
consideration for determining the SOM transition at the time the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
runtime transition between SOMs requires a non-zero interval of time, during
which the system is said to be in transition between two system modes of
operation. While a system is in transition, excluding the instants of time at
the start and end of a transition, all mode transition trigger events are
ignored with respect to mode transitions.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
system is in a <i>mode transition in progress state</i> for a limited amount of
time.  This is determined by the maximum time required to perform all
deactivations and activations of threads and connections (see below), increased
to the next multiple of the hyperperiod of a non-zero set of critical
components that continue to execute, i.e., periodic threads that are active in
the old and in the new SOM and have a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Synchronized_Component</span><span lang="EN-US"> property value of
true.  This is shown in </span><span lang="EN-US">Figure 23</span><span lang="EN-US">.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">by
the guard of the function Hyper(<b>Mode</b>)* on the transition from the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">current_system_operation_mode</span><span lang="EN-US"> state.  After that period of time, the component is considered to
operate in the new mode and the active threads in the new mode start to
execute.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">At
the time the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered there are several kinds of threads</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Continuing threads</span></i><span lang="EN-US">: threads that continue to execute because they are active in the
old mode and active in the new mode; </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Activated threads</span></i><span lang="EN-US">:
threads that are inactive in the old mode and are active in the new mode;</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Deactivated threads</span></i><span lang="EN-US">: threads that are active in the old mode, not active in the new
mode, and whose dispatches align at the hyperperiod;</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Zombie threads</span></i><span lang="EN-US">: aperiodic,
sporadic, timed, or hybrid threads as well as periodic threads that are active
in the old mode and not active in the new mode and whose dispatches are not aligned
at the hyperperiod, i.e., they may still be in the perform thread computation
state (see </span><span lang="EN-US">Figure 5</span><span lang="EN-US">) and may
have events or event data in their port queues. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">At
the instant of time the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered, connections that are part of the old SOM and not
part of the new SOM are disabled. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">While
in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state, for all connections between data ports that are declared to
be active in the current mode transition and whose source threads have
completed execution at the time the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is
entered, data is transferred from the <b>out</b> data port such that its value
becomes available at the first dispatch of the receiving thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">At
the instant in time the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is exited, connections that are not part of the old SOM and
are part of the new SOM are enabled. At that time the new current SOM is
entered and the following hold for data port connections. The data value of the
<b>out</b> data port of the source thread is transferred into the <b>in</b>
data port variable of the newly enabled thread, unless the <b>in</b> data port
of the destination thread is the destination of a connection active in the
current mode transition. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">While
in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state, all continuing threads continue to get dispatched and
execute, but will only use connections that are active in both the old and the
new SOM.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered, <i>thread </i><b>exit(Mode)</b> is triggered to
deactivate all threads that are part of the old mode and not part of the new
mode, i.e., the set of deactivated threads. This results in the execution of
deactivation entrypoints for those threads (see Figure 5).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">When
the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered, <i>thread</i> <b>enter(Mode)</b> is triggered to
activate threads that are part of the new mode and not part of the old mode,
i.e., the set of activated threads.  This permits those threads to execute
their activation entrypoints (see Figure 5).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">There
is no requirement that all deactivation entrypoint executions complete before
any activation entrypoint executions start.  The maximum execution time for the
deactivations and activations is the maximum deadline of the respective
entrypoints.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Zombie
threads may be stopped at actual mode switch time, they may be suspended, or
they may complete their execution while mode transition is in progress. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Handling_Protocol </span><span lang="EN-US">property specifies for each such thread what action is to be taken
at the time the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state is entered. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
default action is to </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">stop</span><span lang="EN-US"> the execution of the zombie thread and execute its recover
entrypoint indicating an stop for deactivation - effectively handling them like
deactivated threads.  This permits the thread to recover to a consistent state
for future activation, including the release of resources held by the thread.
Upon completion of the recover entrypoint, execution the thread enters the
suspended awaiting mode state; event and event data port queues of the thread
are flushed by default or remain in the queue until the thread is activated
again as specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Queue_Handling_Protocol
</span><span lang="EN-US">property.  If the thread was executing a remotely
called subprogram, the current dispatch execution of the calling thread of a
call in progress or queued call is also aborted.  In this case the recover
entrypoint deadline is taken into account when determining the duration of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Other
actions are project-specific implementor provided action and may include:</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Suspend</span><span lang="EN-US"> the execution of the zombie thread for resumption the next time the
thread is part of a new mode. This action is only safe to use if the thread
does not hold the lock to a shared resource.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete_one</span><span lang="EN-US"> permits the thread to complete the execution of its current
dispatch and invoke its deactivation entrypoint. Any remaining queued events,
or event data may be flushed, or remain in the queue until the thread is
activated again, as specified by the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Queue_Handling_Protocol </span><span lang="EN-US">property.
The output is held and communicated according to the connections when the
thread is reactivated.  In this case the execution of the zombie thread competes
for execution platform resources. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Complete_all</span><span lang="EN-US"> permits the thread to finish processing all events or event data in
its queues at the time the actual mode switch state is entered. The output is held
and communicated according to the connections when the thread is reactivated.
When execution completes the deactivation entrypoint is executed. In this case
the execution of the zombie thread competes for execution platform resources.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">At
the next multiple of the SOM transition hyperperiod the system instance enters </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">current_system_operation_mode</span><span lang="EN-US"> state and starts responding to new requests for SOM transition.</span></p>

<p align="center" class="MsoBodyText" style="text-align: center;"><span lang="EN-US"><img width="530" height="154" src="imgs/image035.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc167033820"></a><a name="_Toc86591140"></a><a name="_Toc79295067"></a><a name="_Ref37207469"></a><a name="_Ref37207475"></a><a name="_Toc318320432"></a><a name="_Ref213859977"><span lang="EN-US">Figure </span></a><span lang="EN-US">23</span><span lang="EN-US"> System Mode Transition Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
synchronization scope for <b>enter(Mode)</b> consists of all threads that are
contained in the system instance that were inactive and are about to become
active.  The synchronization scope for <b>exit(Mode)</b> contains all threads
that are contained in the system instance that were active and are to become
inactive.  The edge labels <b>enter(Mode)</b> and <b>exit(Mode)</b> also appear
in the set of concurrent semantic automata derived from the mode declarations
in a specification.  That is, <b>enter(Mode)</b> and <b>exit(Mode)</b>
transitions for threads occur synchronously with a transition from the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">current_system_operation_mode</span><span lang="EN-US"> state to the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">mode_transition_in_progress</span><span lang="EN-US"> state.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
description of this time-coordinated transitioning of system operation mode
assumes a synchronous system, i.e., a single synchronization domain.  In the
case of an asynchronous system, multiple synchronization domains exist in a
system.  In this case, the coordinated activation and deactivation of threads
and connections as part of a system operation mode transition must be ensured
within each synchronization domain.  In the case of an asynchronous system,
coordination protocols may be supported to coordinate system operation mode transition
across synchronization domains within bounded time. </span></p>

<h2><a name="_Toc318320370"><span lang="EN-US">13.7<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">System-wide Fault Handling, Shutdown, and
Restart</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Thread unrecoverable errors result in transmission of event data on
the Error port of the appropriate thread, processor, or device.  The ultimate
destination of this semantic connection can be a thread or set of threads whose
role is that of a system health monitor and system configuration manager.  Such
threads make decisions about appropriate fault handling actions to take.  Such
actions include raising of events to trigger mode switches, e.g., to request
SOM transitions.</span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Runtime
Services</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Several runtime services are provided to control starting and
stopping of the system, processors, virtual processors, and processes. They may
be explicitly called by application source code, or they may be called by an
AADL runtime system that is generated from an AADL model.</span></p>

<p class="NumberedParagraph"><a name="SystemStopAPI"></a><a name="ModeAPI"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Current_System_Mode</span><b><span lang="EN-US"> </span></b><span lang="EN-US">returns a value corresponding to the
active system operation mode (SOM). </span></a></p>

<pre><span lang="EN-US">    <b>subprogram </b>Current_System_Mode</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">ModeID: <b>out parameter </b>&lt;implementor-specific&gt;; -- ID of the mode</span></pre><pre><span lang="EN-US">    <b>end </b>Current_System_Mode;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Set_System_Mode</span><b><span lang="EN-US"> </span></b><span lang="EN-US">indicates the next SOM the runtime
system must switch to.  System modes are assumed to have identifying numbers.</span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Set_System_Mode</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">ModeID: <b>in parameter </b>&lt;implementor-specific&gt;; -- ID of the SOM</span></pre><pre><span lang="EN-US">    <b>end </b>Set_System_Mode;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following subprograms take a process, virtual processor, or
processor ID as parameter.  The ID representation is determined by the runtime
system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Process</span><span lang="EN-US"> is called for a controlled shut-down of a process, i.e., all of its
contained threads, whether executing, awaiting a dispatch, or not part of the
current mode, are given a chance to execute their finalize entrypoint before
being halted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_Process</span><span lang="EN-US"> is called for a shut-down of a process due to an anomaly.  All of
its contained threads are terminated immediately.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Virtual_Processor</span><span lang="EN-US"> is called to initiate a transition to the virtual processor
stopping state at the next hyperperiod. This has the effect of initiating </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Virtual_Processor</span><span lang="EN-US"> for all virtual processors bound to the virtual processor, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Process</span><span lang="EN-US"> for all processes bound to the virtual processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_Virtual_Processor</span><span lang="EN-US">  is called for a shut-down of a virtual processor due to an
anomaly.  All virtual processors and processes bound to the virtual processor
are aborted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Processor</span><span lang="EN-US"> is
called to initiate a transition to the processor stopping state at the next
hyperperiod. This has the effect of initiating </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Virtual_Processor</span><span lang="EN-US"> for all virtual processors bound to the processor, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Process</span><span lang="EN-US"> for all processes bound to the processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_Processor</span><span lang="EN-US">  is
called for a shut-down of a processor due to an anomaly.  All virtual
processors and processes bound to the processor are aborted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_System</span><span lang="EN-US"> is called
to initiate a transition to the system stopping state, which will initiate a
Stop_Processor for all processors in the system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_System</span><span lang="EN-US"> is
called for a shut-down of the system due to an anomaly.  All processors in the
system are aborted.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">This
standard does not require that source text be associated with a software or
execution platform category.  However, a method of implementing systems may
impose this requirement as a precondition for constructing a actual system from
a specification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A system
instance represents the runtime architecture of an application system that is
to be analyzed and processed.  A system instance is identified to a tool by a
component classifier reference to an instantiable system implementation.  For
example, a tool may allow a system classifier reference to be supplied as a
command line parameter.  Any such externally identified component specification
must satisfy all the rules defined in this specification for system instances.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of building systems is permitted to only support static process loading.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of building systems is permitted to create any set of loadable binary
images that satisfy the semantics and legality rules of this standard.  For
example, a single load image may be created for each processor that contains
all processes and threads executed by that processor and all source text
associated with devices and buses accessible by that processor.  Or a separate
load image may be created for each process to be loaded into memory to make up
the process virtual address space, in addition to the kernel address space
created for each processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
process may define a source namespace for the purpose of compiling source
programs, define a virtual address space, and define a binary image for the
purpose of loading.  A method of building systems is permitted to separate
these functions.  For example, processes may be compiled and pre-linked as
separate programs, followed by a secondary linking to combine the process
binary images to form a load image.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of building systems is permitted to compile, link and load a process as
a single source program.  That is, a method of building systems is permitted to
impose the additional requirement that all associated source text for all
threads contained in a process form a legal program as defined in the
applicable programming language standard.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If
two software components that are compiled and linked within the same namespace
have identical component types and implementations, or the intersection of
their associated source text compilation units is non-empty, then this must be
detected and reported.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
method of building systems is permitted to omit loading of processor, device
driver, and bus protocol software in a processor kernel address space if none
of the threads bound to that processor need to access or execute that software.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">This
standard supports static virtual memory management, i.e., permits the
construction of systems in which binary images of processes are loaded during
system initialization, before a system begins operation.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Also
permitted are methods of dynamic virtual memory management or dynamic library
linking after process loading has completed and thread execution has started. 
However, any method for implementing a system must assure that all deadline
properties will be satisfied for each thread.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">An
alternative implementation of the process and thread state transition sequences
is permitted in which a </span><span lang="EN-US" style="color: windowtext;">process</span><span lang="EN-US"> is loaded and initialized each time the system changes to a mode of
operation in which any of the containing threads in that </span><span lang="EN-US" style="color: windowtext;">process</span><span lang="EN-US"> are
active.  This process load and initialize replaces the perform thread activate
action in the thread state transition sequence as well as the process load
action in the process state transition sequence. These alternative semantics
may be adopted for any designated subset of the </span><span lang="EN-US" style="color: windowtext;">processes</span><span lang="EN-US"> in a system.  All
threads contained in a process must obey the same thread semantics.</span></p>

<h1><a name="_Toc318320371"></a><a name="_Toc169684124"></a><a name="_Toc167033774"></a><a name="_Toc168661891"></a><a name="_Ref167117698"></a><a name="_Ref167113420"><span lang="EN-US">14<span style="font: 7pt &quot;Times New Roman&quot;;"> 
</span></span><span lang="EN-US">Layered System Architectures</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Layering of system architectures is supported in AADL in several ways:
</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Hierarchical containment of components;</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Layered use of threads for processing and
services;</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Layered virtual machine abstraction of the
execution platform.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The hierarchical containment of components is the result of modeling
a system as a component architecture and decomposing its capabilities
hierarchically. This is supported by the abstract component category as well as
the software components, the hardware components, and the system components.
Interaction between components at different levels of the system hierarchy is
managed and controlled by the component features.  Connections between the
components must follow the component hierarchy.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Threads and devices represent active components in a system. 
Threads and devices interact with other threads and devices through directional
flow of events and data, representing a pipeline architecture pattern.  Threads
also may call on services of other threads through subprogram service calls. 
These thread services often are organized into service layers in that threads
of one layer call on services of the same or lower layer, but not higher
layers.  Multi-tiered e-business architectures are examples of this
architecture pattern.  Threads and related components of different service
layer can be organized into separate packages and access to packages can be
restricted by convention to follow the layering hierarchy.  Packages or
components such as threads can be attributed with a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Service_Layer</span><span lang="EN-US">
property that can be used by a design rule checker to enforce such layering.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Execution platform components virtual processor and virtual bus can
represent virtual machine abstractions.  For example, a virtual processor may
represent a language runtime system such as the Ada runtime system, which is
responsible for scheduling the execution of Ada tasks. This runtime system may
be implemented on top of another virtual processor, namely a real-time
operating system.  Virtual processors and processors provide the runtime
service calls described in <i>Runtime Support</i> in Section </span><span lang="EN-US">5.4</span><span lang="EN-US">, and Section </span><span lang="EN-US">8.3</span><span lang="EN-US">, as well as services declared explicitly
as part of the features of a (virtual) processor type.  Similarly, a virtual
bus may represent a protocol that is implemented in terms of a lower level
protocol.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL can be used to represent this system layering as follows: The
implementation of an execution platform component can be described by system
components.  For example, a processor that represents hardware and an operating
system can be described by an application software system to represent the
operating system and a lower level execution platform system that includes a
lower-level processor abstraction.  Similarly, the internal implementation of a
device, e.g., a digital camera, can be described as a system that consists of
image processing and transfer software as well as processors, internal memory,
and USB bus interface, and CCD sensors as devices.  A map data base may be a
highly abstracted memory component type, whose implementation consists of
database software and data components that represent the database content
together with physical disks as lower-level memory components and a processor
that acts as dedicated database server.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">System implementations can be associated with their respective
processor, virtual processor, memory, bus, virtual bus, and device types and
implementations through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Implemented_As</span><span lang="EN-US"> property, which takes classifiers as its value.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the case of processors, virtual processors, and devices, these
system implementations can be used as plug-replaceable patterns for the
original platform components, when an instance model is created. The pattern is
called plug-replaceable because the system component implementing the execution
platform element implements the interface defined by the execution platform
element type.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the case of a virtual bus or bus a connection bound to a bus or
virtual bus is interpreted during model instantiation as rerouting the
connection from its source to a source feature in the  system implementation of
the bus or virtual bus, and a second connection from a predeclared destination
feature to the destination of the original connection.  For example, the system
implementation realizing a virtual bus may consist of a sender thread with a
predeclared source port and a receiver thread with a predeclared destination
port.  Alternatively, the connection can be mapped into </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service calls (see <i>Runtime Support </i>in Section </span><span lang="EN-US">8.3</span><span lang="EN-US">) to reflect an API-based functional
service architecture.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the case of a memory component, read and write accesses to data
components that are bound to a memory component can be mapped into read and
write accesses to data components in the system implementation of the memory
abstraction, or interpreted as retrieve and store service calls to the
subprogram access features of the system component.</span></p>

<h1><a name="_Toc318320372"></a><a name="_Toc169684125"></a><a name="_Toc167033775"></a><a name="_Toc168661892"></a><a name="_Toc86725698"></a><a name="_Toc86220735"></a><a name="_Toc86220153"></a><a name="_Toc86219890"></a><a name="_Toc86219785"></a><a name="_Toc79295021"></a><a name="_Toc27797780"></a><a name="_Toc27449609"></a><a name="_Toc8550410"></a><a name="_Toc2492815"></a><a name="_Toc535736392"></a><a name="_Toc535736072"></a><a name="_Toc535729914"></a><a name="_Toc532013631"></a><a name="_Ref532011395"><span lang="EN-US">15<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Lexical
Elements</span></a></h1>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The text of an AADL description consists of a sequence of lexical
elements, each composed of characters.  The rules of composition are given in
this section. </span></p>

<h2><a name="_Toc318320373"></a><a name="_Toc169684126"></a><a name="_Toc167033776"></a><a name="_Toc168661893"></a><a name="_Toc86725699"></a><a name="_Toc86220736"></a><a name="_Toc86220264"></a><a name="_Toc86219891"></a><a name="_Toc86219786"></a><a name="_Toc79295022"></a><a name="_Toc27797781"></a><a name="_Toc27449610"></a><a name="_Toc8550411"></a><a name="_Toc2492816"></a><a name="_Toc535736393"></a><a name="_Toc535736073"></a><a name="_Toc535729915"></a><a name="_Toc532013632"><span lang="EN-US">15.1<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Character Set</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The only characters allowed outside of comments are the
graphic_characters and format_effectors. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 31.5pt;"><span lang="EN-US">character ::= graphic_character | format_effector </span></pre><pre style="margin-left: 31.5pt;"><span lang="EN-US">            | other_control_character</span></pre><pre><span lang="EN-US"> </span></pre><pre style="margin-left: 31.5pt;"><span lang="EN-US">graphic_character ::= identifier_letter | digit | space_character </span></pre><pre style="margin-left: 31.5pt;"><span lang="EN-US">                    | special_character</span></pre><pre style="margin-left: 31.5pt;"><span lang="EN-US"> </span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The character repertoire for the text of an AADL specification
consists of the collection of characters called the Basic Multilingual Plane
(BMP) of the ISO 10646 Universal Multiple-Octet Coded Character Set, plus a set
of format_effectors and, in comments only, a set of other_control_functions;
the coded representation for these characters is implementation defined (it
need not be a representation defined within ISO-10646-1). </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The description of the language definition in this standard uses the
graphic symbols defined for Row 00: Basic Latin and Row 00: Latin-1 Supplement
of the ISO 10646 BMP; these correspond to the graphic symbols of ISO 8859-1
(Latin-1); no graphic symbols are used in this standard for characters outside
of Row 00 of the BMP.  The actual set of graphic symbols used by an implementation
for the visual representation of the text of an AADL specification is not
specified. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The categories of characters are defined as follows: </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">identifier_letter </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">upper_case_identifier_letter |
lower_case_identifier_letter </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">upper_case_identifier_letter </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Any character of Row 00 of ISO 10646 BMP
whose name begins “Latin Capital Letter”. </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">lower_case_identifier_letter </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Any character of Row 00 of ISO 10646 BMP
whose name begins “Latin Small Letter”. </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">digit </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One of the characters 0, 1, 2, 3, 4, 5, 6, 7,
8, or 9. </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">space_character </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US">The character of
ISO 10646 BMP named “Space''. </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">special_character </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US">Any character of
the ISO 10646 BMP that is not reserved for a control function, and is not the
space_character, an identifier_letter, or a digit. </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">format_effector </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US">The control
functions of ISO 6429 called character tabulation (HT), line tabulation (VT),
carriage return (CR), line feed (LF), and form feed (FF). </span></p>

<p class="MsoNormal" style="margin-left: 36pt;"><i><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">other_control_character </span></i></p>

<p class="MsoNormal" style="margin-left: 72pt;"><span lang="EN-US">Any control character,
other than a format_effector, that is allowed in a comment; the set of
other_control_functions allowed in comments is implementation defined. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following names are used when referring to certain
special_characters: </span></p>

<table cellspacing="0" cellpadding="0" border="0" class="MsoNormalTable" style="margin-left: 35pt; border-collapse: collapse;">
 <tbody><tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><b><span lang="EN-US">Symbol</span></b></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><b><span lang="EN-US">Name</span></b></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><b><span lang="EN-US">Symbol</span></b></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><b><span lang="EN-US">Name</span></b></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">"</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">quotation mark</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">:</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">colon</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">#</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">number sign</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">;</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">semicolon</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">=</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">equals sign</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">(</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">left parenthesis</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">)</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">Right parenthesis</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">_</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">underline</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">+</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">plus sign</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">[</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">left square bracket</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">,</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">Comma</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">]</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">right square bracket</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">-</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">Minus</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">{</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">left curly bracket</span></pre></td>
 </tr>
 <tr>
  <td width="62" valign="top" style="width: 46.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">.</span></pre></td>
  <td width="168" valign="top" style="width: 126.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">Dot</span></pre></td>
  <td width="65" valign="top" style="width: 48.5pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">}</span></pre></td>
  <td width="198" valign="top" style="width: 148.5pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">right curly bracket</span></pre></td>
 </tr>
</tbody></table>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Implementation
Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In a nonstandard mode, the implementation may support a different
character repertoire; in particular, the set of symbols that are considered
identifier_letters can be extended or changed to conform to local conventions. </span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">Every code position of ISO 10646 BMP that is not
reserved for a control function is defined to be a graphic_character by this
standard. This includes all code positions other than 0000 - 001F, 007F - 009F,
and FFFE - FFFF. </span></p>

<h2><a name="_Toc318320374"></a><a name="_Toc169684127"></a><a name="_Toc167033777"></a><a name="_Toc168661894"></a><a name="_Toc86725700"></a><a name="_Toc86220737"></a><a name="_Toc86220265"></a><a name="_Toc86219892"></a><a name="_Toc86219787"></a><a name="_Toc79295023"></a><a name="_Toc27797782"></a><a name="_Toc27449611"></a><a name="_Toc8550412"></a><a name="_Toc2492817"></a><a name="_Toc535736394"></a><a name="_Toc535736074"></a><a name="_Toc535729916"></a><a name="_Toc532013633"><span lang="EN-US">15.2<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Lexical Elements, Separators, and Delimiters</span></a></h2>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The text of an AADL specification consists of a sequence of separate
<i>lexical elements</i>.  Each lexical element is formed from a sequence of
characters, and is either a delimiter, an identifier, a reserved word, a
numeric_literal, a character_literal, a string_literal, or a comment.  The
meaning of an AADL specification depends only on the particular sequences of lexical
elements that form its compilations, excluding comments. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The text of an AADL specification is divided into lines. In general,
the representation for an end of line is implementation defined.  However, a
sequence of one or more format_effectors other than character tabulation (HT)
signifies at least one end of line. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In some cases an explicit <i>separator</i> is required to separate
adjacent lexical elements.  A separator is any of a space character, a
format_effector, or the end of a line, as follows: </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A space character is a separator except within a
comment, a string_literal, or a character_literal. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">Character tabulation (HT) is a separator except
within a comment. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The end of a line is always a separator. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">One or more separators are allowed between any two adjacent lexical
elements, before the first, or after the last.  At least one separator is
required between an identifier, a reserved word, or a numeric_literal and an
adjacent identifier, reserved word, or numeric_literal. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>delimiter</i> is either one of the following special characters
</span></p>

<p class="MsoNormal" style="text-indent: 36pt;"><b><span lang="EN-US">(    )   [   
]   {   }     ,      .     :     ;      =    *   +   - </span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">or one of the following <i>compound delimiters</i> each composed of
two or three adjacent special characters </span></p>

<p class="MsoNormal" style="text-indent: 36pt;"><b><span lang="EN-US">::    
=&gt;       +=&gt;       -&gt;    &lt;-&gt;      ..     </span></b><b><span lang="EN-US" style="font-family: Symbol;">-</span><span lang="EN-US">[       ]</span></b><b><span lang="EN-US" style="font-family: Symbol;">-</span><span lang="EN-US">&gt;   {**   
**}</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Each of the special characters listed for single character
delimiters is a single delimiter except if that character is used as a
character of a compound delimiter, or as a character of a comment,
string_literal, character_literal, or numeric_literal. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following names are used when referring to compound delimiters: </span></p>

<table cellspacing="0" cellpadding="0" border="0" class="MsoNormalTable" style="margin-left: 36pt; border-collapse: collapse;">
 <tbody><tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><b><span lang="EN-US">Delimiter</span></b></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><b><span lang="EN-US">Name</span></b></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><b><span lang="EN-US">::</span></b></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">qualified name separator</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">=&gt;</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">association</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">+=&gt;</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">additive association</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">-&gt;</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">directional connection</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">&lt;-&gt;</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">bidirectional connection</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">..</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">interval</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">-[</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">left step bracket</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">]-&gt;</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">right step bracket</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">{**</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">begin annex</span></pre></td>
 </tr>
 <tr>
  <td width="134" valign="top" style="width: 100.8pt; padding: 0cm 5.4pt;"><pre style="text-align: center;"><span lang="EN-US">**}</span></pre></td>
  <td width="287" valign="top" style="width: 215.1pt; padding: 0cm 5.4pt;"><pre><span lang="EN-US">end annex</span></pre></td>
 </tr>
</tbody></table>

<p class="DescriptionHeading"><span lang="EN-US">Processing Requirements and
Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An implementation shall support lines of at least 200 characters in
length, not counting any characters used to signify the end of a line.  An
implementation shall support lexical elements of at least 200 characters in
length.  The maximum supported line length and lexical element length are
implementation defined. </span></p>

<h2 style="margin-top: 0cm;"><a name="_Toc318320375"></a><a name="_Toc169684128"></a><a name="_Toc167033778"></a><a name="_Toc168661895"></a><a name="_Toc86725701"></a><a name="_Toc86220738"></a><a name="_Toc86220266"></a><a name="_Toc86219893"></a><a name="_Toc86219788"></a><a name="_Toc79295024"></a><a name="_Toc27797783"></a><a name="_Toc27449612"></a><a name="_Toc8550413"></a><a name="_Toc2492818"></a><a name="_Toc535736395"></a><a name="_Toc535736075"></a><a name="_Toc535729917"></a><a name="_Toc532013634"><span lang="EN-US">15.3<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Identifiers</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Identifiers are used as names. Identifiers are case insensitive.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 31.5pt; page-break-after: avoid;"><span lang="EN-US"><span class="requality_text id_837df2bd-183e-41c0-848b-be88187512da"><a name="837df2bd-183e-41c0-848b-be88187512da" id="id_837df2bd-183e-41c0-848b-be88187512da" class="requality_id"></a>identifier ::= identifier_letter {[underline] letter_or_digit}*</span></span></pre><pre style="margin-left: 31.5pt;"><span lang="EN-US"><span class="requality_text id_837df2bd-183e-41c0-848b-be88187512da">letter_or_digit ::= identifier_letter | digit</span></span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An identifier shall not be a reserved word. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">For the lexical rules of identifiers, the rule
of whitespace as token separator does not apply.  In other words, identifiers
do not contain spaces or other whitespace characters.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">An identifier must be distinct from the reserved
words of the AADL.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">All characters of an identifier are significant, including any
underline character.  Identifiers differing only in the use of corresponding
upper and lower case letters are considered the same. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Processing
Requirements and Permissions</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In a nonstandard mode, an implementation may support other
upper/lower case equivalence rules for identifiers, to accommodate local
conventions. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In non-standard mode, a method of implementation may accept
identifier syntax of any programming language that can be used for software
component source text.</span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText"><span lang="EN-US">   Count          X           Get_Symbol  Ethelyn           Garçon</span></p>

<p class="ExampleText"><span lang="EN-US">   Snobol_4       X1          Page_Count  Store_Next_Item   Verrűckt</span></p>

<p class="ExampleText"><span lang="EN-US"> </span></p>

<h2><a name="_Toc318320376"></a><a name="_Toc169684129"></a><a name="_Toc167033779"></a><a name="_Toc168661896"></a><a name="_Toc86725702"></a><a name="_Toc86220739"></a><a name="_Toc86220267"></a><a name="_Toc86219894"></a><a name="_Toc86219789"></a><a name="_Toc79295025"></a><a name="_Toc27797784"></a><a name="_Toc27449613"></a><a name="_Toc8550414"></a><a name="_Toc2492819"></a><a name="_Toc535736396"></a><a name="_Toc535736076"></a><a name="_Toc535729918"></a><a name="_Toc532013635"><span lang="EN-US">15.4<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Numerical Literals</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">There are two kinds of numeric literals, real and integer.  A
real_literal is a numeric_literal that includes a point; an integer_literal is
a numeric_literal without a point. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 36pt;"><span lang="EN-US">numeric_literal ::= integer_literal | real_literal</span></pre><pre style="margin-left: 36pt;"><span lang="EN-US">integer_literal ::= decimal_integer_literal | based_integer_literal</span></pre><pre style="margin: 0cm 0cm 12pt 36pt;"><span lang="EN-US">real_literal ::= decimal_real_literal </span></pre>

<h3><a name="_Toc318320377"></a><a name="_Toc169684130"></a><a name="_Toc167033780"></a><a name="_Toc168661897"></a><a name="_Toc86725703"></a><a name="_Toc86220740"></a><a name="_Toc86220268"></a><a name="_Toc86219895"></a><a name="_Toc86219790"></a><a name="_Toc79295026"></a><a name="_Toc27797785"></a><a name="_Toc27449614"></a><a name="_Toc8550415"></a><a name="_Toc2492820"></a><a name="_Toc535736397"></a><a name="_Toc535736077"></a><a name="_Toc535729919"></a><a name="_Toc532013636"><span lang="EN-US">15.4.1<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Decimal Literals</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A decimal literal is a numeric_literal in the conventional decimal
notation (that is, the base is ten). </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 36pt;"><span lang="EN-US">decimal_integer_literal ::= numeral [ positive_exponent ]</span></pre><pre style="margin-left: 36pt;"><span lang="EN-US">decimal_real_literal ::= numeral <b>. </b>numeral [ exponent ]</span></pre><pre style="margin-left: 36pt;"><span lang="DE">numeral ::= digit {[underline] digit}<sup>*</sup></span></pre><pre style="margin-left: 36pt;"><span lang="DE">exponent ::= E [+] numeral | E – numeral</span></pre><pre style="margin: 0cm 0cm 12pt 36pt;"><span lang="EN-US">positive_exponent ::= E [+] numeral</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An underline character in a numeral does not affect its meaning. 
The letter E of an exponent can be written either in lower case or in upper
case, with the same meaning. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An exponent indicates the power of ten by which the value of the
decimal literal without the exponent is to be multiplied to obtain the value of
the decimal literal with the exponent. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText"><span lang="EN-US">     12       0         1E6       123_456   <em><span style="font-family: &quot;Courier New&quot;;">-- integer literals</span></em></span></p>

<p class="ExampleText"><span lang="EN-US">     12.0     0.0       0.456         3.14159_26    <em><span style="font-family: &quot;Courier New&quot;;">-- real literals</span></em></span></p>

<p class="ExampleText"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span></em></p>

<h3><a name="_Toc318320378"></a><a name="_Toc169684131"></a><a name="_Toc167033781"></a><a name="_Toc168661898"></a><a name="_Toc86725704"></a><a name="_Toc86220741"></a><a name="_Toc86220269"></a><a name="_Toc86219896"></a><a name="_Toc86219791"></a><a name="_Toc79295027"></a><a name="_Toc27797786"></a><a name="_Toc27449615"></a><a name="_Toc8550416"></a><a name="_Toc2492821"></a><a name="_Toc535736398"></a><a name="_Toc535736078"></a><a name="_Toc535729920"></a><a name="_Toc532013637"><span lang="EN-US">15.4.2<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Based Literals</span></a></h3>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A based literal is a numeric_literal expressed in a form that
specifies the base explicitly. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 36pt;"><span lang="EN-US">based_integer_literal ::= base <b>#</b> based_numeral <b>#</b> [ positive_exponent ]</span></pre><pre style="margin-left: 36pt;"><span lang="EN-US">base ::= digit [ digit ]</span></pre><pre style="margin-left: 36pt;"><span lang="EN-US">based_numeral ::= extended_digit {[underline] extended_digit}</span></pre><pre style="margin: 0cm 0cm 12pt 36pt;"><span lang="ES-MX">extended_digit ::= digit | A | B | C | D | E | F | a | b | c | d | e | f</span></pre>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The base (the numeric value of the decimal
numeral preceding the first #) shall be at least two and at most sixteen.  The
extended_digits A through F represent the digits ten through fifteen
respectively.  The value of each extended_digit of a based_literal shall be
less than the base. </span></p>

<p class="DescriptionHeading" style="margin-top: 12pt;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The conventional meaning of based notation is assumed.  An exponent
indicates the power of the base by which the value of the based literal without
the exponent is to be multiplied to obtain the value of the based literal with
the exponent.  The base and the exponent, if any, are in decimal notation. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The extended_digits A through F can be written either in lower case
or in upper case, with the same meaning. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText"><span lang="EN-US">     2#1111_1111#    16#FF#      016#0ff#    <em><span style="font-family: &quot;Courier New&quot;;">-- integer literals of value 255</span></em></span></p>

<p class="ExampleText"><span lang="EN-US">     2#1110_0000#    16#E#E1     8#340#      <em><span style="font-family: &quot;Courier New&quot;;">-- integer literals of value 224</span></em></span></p>

<p class="ExampleText"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span></em></p>

<h2><a name="_Toc318320379"></a><a name="_Toc169684132"></a><a name="_Toc167033782"></a><a name="_Toc168661899"></a><a name="_Toc86725705"></a><a name="_Toc86220742"></a><a name="_Toc86220270"></a><a name="_Toc86219897"></a><a name="_Toc86219792"></a><a name="_Toc79295029"></a><a name="_Toc27797787"></a><a name="_Toc27449616"></a><a name="_Toc8550417"></a><a name="_Toc2492822"></a><a name="_Toc535736399"></a><a name="_Toc535736079"></a><a name="_Toc535729921"></a><a name="_Toc532013638"></a><a name="_Toc79227477"></a><a name="_Toc79244108"></a><a name="_Toc79245425"></a><a name="_Toc79295028"></a><span lang="EN-US">15.5<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">String Literals</span></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A string_literal is formed by a sequence of graphic characters
(possibly none) enclosed between two quotation marks used as string brackets. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 36pt;"><span lang="EN-US">string_literal ::= "{string_element}*"</span></pre><pre style="margin-left: 36pt;"><span lang="EN-US">string_element ::= "" | non_quotation_mark_graphic_character</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A string_element is either a pair of quotation marks (""),
or a single graphic_character other than a quotation mark. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The sequence of characters of a string_literal is formed from the
sequence of string_elements between the bracketing quotation marks, in the
given order, with a string_element that is "" becoming a single
quotation mark in the sequence of characters, and any other string_element
being reproduced in the sequence. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A null string literal is a string_literal with no string_elements
between the quotation marks. </span></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">An end of line cannot appear in a
string_literal. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="margin-left: 36pt;"><span lang="EN-US">"Message
of the day:"</span></p>

<p class="ExampleText" style="margin-left: 36pt;"><span lang="EN-US">""         
                 <em><span style="font-family: &quot;Courier New&quot;;">--  a null string
literal</span></em></span></p>

<p class="ExampleText" style="margin-left: 36pt;"><span lang="EN-US">"
"   "A"   """"             <em><span style="font-family: &quot;Courier New&quot;;">--  three string literals of length 1</span></em></span></p>

<p class="ExampleText" style="margin-left: 36pt;"><span lang="EN-US">"Characters
such as $, %, and } are allowed in string literals"</span></p>

<h2 style="margin: 12pt 0cm; text-indent: 0cm;"><a name="_Toc318320380"></a><a name="_Toc169684133"></a><a name="_Toc167033783"></a><a name="_Toc168661900"></a><a name="_Toc86725706"></a><a name="_Toc86220743"></a><a name="_Toc86220271"></a><a name="_Toc86219898"></a><a name="_Toc86219793"></a><a name="_Toc79295030"></a><a name="_Toc27797788"></a><a name="_Toc27449617"></a><a name="_Toc8550418"></a><a name="_Toc2492823"></a><a name="_Toc535736400"></a><a name="_Toc535736080"></a><a name="_Toc535729922"></a><a name="_Toc532013639"><span lang="EN-US">15.6<span style="font: 7pt &quot;Times New Roman&quot;;">   
</span></span><span lang="EN-US">Comments</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;; color: windowtext;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A comment starts with two adjacent hyphens and extends up to the end
of the line. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Syntax</span></p>

<pre style="margin-left: 36pt;"><span lang="EN-US">comment ::= <em><span style="font-family: &quot;Courier New&quot;;">--{non_end_of_line_character}*</span></em></span></pre>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">A comment may appear on any line of a program. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Semantics</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The presence or absence of comments has no influence on whether a
program is legal or illegal.  Furthermore, comments do not influence the
meaning of a program; their sole purpose is the enlightenment of the human
reader. </span></p>

<p class="DescriptionHeading" style="margin-top: 0cm;"><span lang="EN-US">Examples</span></p>

<p class="ExampleText" style="margin-left: 36pt;"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">--  this is a comment</span></em></p>

<p class="ExampleText" style="margin-left: 36pt;"><span lang="EN-US"> </span></p>

<p class="ExampleText" style="margin-left: 36pt;"><b><span lang="EN-US">end</span></b><span lang="EN-US">;  <em><span style="font-family: &quot;Courier New&quot;;">--  processing of
Line is complete</span></em></span></p>

<p class="ExampleText" style="margin-left: 36pt;"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span></em></p>

<p class="ExampleText" style="margin-left: 36pt;"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">--  a long comment may be split onto</span></em></p>

<p class="ExampleText" style="margin-left: 36pt;"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">--  two or more consecutive lines</span></em></p>

<p class="ExampleText" style="margin-left: 36pt;"><span lang="EN-US"> </span></p>

<p class="ExampleText" style="margin-left: 36pt;"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">----------------  the first two hyphens start
the comment</span></em></p>

<p class="ExampleText" style="margin-left: 36pt;"><em><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span></em></p>

<h2><a name="_Toc318320381"></a><a name="_Toc169684134"></a><a name="_Toc167033784"></a><a name="_Toc168661901"></a><a name="_Toc86725707"></a><a name="_Toc86220744"></a><a name="_Toc86220272"></a><a name="_Toc86219899"></a><a name="_Toc86219794"></a><a name="_Toc79295031"></a><a name="_Ref71720374"></a><a name="_Toc27797789"></a><a name="_Toc27449618"></a><a name="_Toc8550419"></a><a name="_Toc2492824"></a><a name="_Toc535736401"></a><a name="_Toc535736081"></a><a name="_Toc535729923"></a><a name="_Toc532013640"><span lang="EN-US">15.7<span style="font: 7pt &quot;Times New Roman&quot;;">    </span></span><span lang="EN-US">Reserved Words</span></a></h2>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following are the AADL reserved words.  Reserved words are case
insensitive.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoTableGrid" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="160" valign="top" style="width: 119.7pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">aadlboolean</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">aadlinteger</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">aadlreal</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">aadlstring</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">abstract</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">access</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">all</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">and</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">annex</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">applies</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">binding</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">bus</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">calls</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">classifier</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">compute</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">connections</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">constant</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">data</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">delta</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">device</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">end</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">enumeration</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">event</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">extends</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">false</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">feature</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">features</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">flow</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">flows</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">group</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">implementation</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">in</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">inherit</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">initial</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">inverse</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">is</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">list</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">memory</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">mode</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">modes</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">none</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">not</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">of</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">or</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">out</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">package</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">parameter</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">path</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">port</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">private</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">process</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">processor</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">properties</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">property</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">prototypes</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">provides</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">public</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">range</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">record</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">reference</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">refined</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">renames</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">requires
  </span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">self</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">set</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">sink</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">source</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">subcomponents</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">subprogram</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">system</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">thread</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">to</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">true</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">type</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">units</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">virtual</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US">with</span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US"> </span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US"> </span></b></p>
  </td>
  <td width="160" valign="top" style="width: 119.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="text-align: left;"><b><span lang="EN-US"> </span></b></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><b><span lang="EN-US"> </span></b></p>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">The reserved words appear in lower case boldface
in this standard.  Lower case boldface is also used for a reserved word in a </span><span lang="EN-US">string_literal</span><span lang="EN-US"> used as an </span><span lang="EN-US">operator_symbol</span><span lang="EN-US">.  This is merely a
convention – AADL specifications may be written in whatever typeface is desired
and available. </span></p>

<p class="Appendix" style="margin-left: 0cm; text-indent: 0cm;"><a name="_Toc8550429"></a><a name="_Toc535729933"></a><a name="_Toc532013650"></a><a name="_Ref194287925"></a><a name="_Ref194287918"></a><a name="_Toc318320382"></a><a name="_Toc169684135"></a><a name="_Toc167033785"></a><a name="_Toc168661902"></a><a name="_Toc86725708"></a><a name="_Toc86220745"></a><a name="_Toc86220273"></a><a name="_Toc86220154"></a><a name="_Toc86219900"></a><a name="_Toc86219795"></a><a name="_Toc79295032"></a><a name="_Ref27808931"></a><a name="_Ref27808917"><span lang="EN-US" style="">Appendix A <span style="font: 7pt &quot;Times New Roman&quot;;"> </span></span><span lang="EN-US">Predeclared Property Sets</span></a><span lang="EN-US"> </span></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The set of predeclared property sets </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deployment_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Thread_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Timing_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Memory_Properties</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">,</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Programming_Properties, </span><span lang="EN-US">and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Modeling_Properties
</span><span lang="EN-US">is part of every AADL specification. It defines
properties for AADL model elements that are defined in the core of the AADL. These
property sets may not be modified by the modeler.</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Deployment_Properties </span><span lang="EN-US">contains properties related to the deployment of the embedded
application on the execution platform.</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Thread_Properties
</span><span lang="EN-US">contains properties that characterize threads and their
features.</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">
Timing_Properties </span><span lang="EN-US">contains properties related to
execution timing.</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">
Memory_Properties </span><span lang="EN-US">contains properties related to memory
as storage, data access, and device access</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">.</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Programming_Properties </span><span lang="EN-US">contains properties  for relating AADL models to application
programs.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Modeling_Properties
</span><span lang="EN-US">contains properties  related to the AADL model itself.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The property set </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> is a part of every AADL specification. It defines property
enumeration types and property constants that can be tailored for different
AADL projects and site installations. These definitions allow for
tailoring of the predeclared properties through changes to these predeclared
property types and property constants.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The property types, property definitions, and property constants of
these predeclared property sets can be named with or without property set name
qualification.</span></p>

<p class="Note"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">All predeclared properties and user-defined
properties are applicable to components of the category <b>abstract </b>without
listing this category in the <b>applies to</b> statement of the property
definition.</span></p>

<p class="MsoNoteHeading"><span lang="EN-US" style="font-size: 9pt;">NOTES:</span></p>

<p class="Note"><span lang="EN-US">In accordance with the naming rules for
references to items defined in the predeclared property sets, the declarations
in these property set refer to enumeration types and property constants
declared in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> property set without a qualifying property set name.</span></p>

<p class="appendix2"><a name="_Toc318320383"><span lang="EN-US">A.1<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Deployment Properties</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The properties of the predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deployment_Properties</span><span lang="EN-US"> record binding constraints and actual bindings of software
components to hardware components, i.e., of threads and virtual processors to virtual
processors and processors, of processes and data components to memory, and of
connections to virtual buses and buses, and of virtual buses to virtual buses, buses,
virtual processors, and processors.  </span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Deployment_Properties <b>is </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr style="height: 24.25pt;">
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt; height: 24.25pt;"><pre style="margin-bottom: 0.0001pt;"><a name="AllowedProcessorBindingClass"><span lang="EN-US">Allowed_Processor_Binding_Class: </span></a></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (processor, virtual processor, system)</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, virtual processor, device);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Allowed_Processor_Binding_Class
  </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">property specifies a set of virtual
  processor, processor and system classifiers.  These component classifiers
  constrain the set of candidate virtual processors and processors for binding to
  the subset that satisfies the component classifier. </span></span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The value may be inherited from
  the containing component.</span></span></p>
  <p class="MsoListContinue"><span lang="EN-US">If this property has no associated
  value, then all processors specified in the </span><span class="HTMLPreformattedChar"><span lang="EN-US">Allowed_Processor_Binding </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">are
  acceptable candidates</span><span lang="EN-US">.</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="AllowedProcessorBinding"><span lang="EN-US">Allowed_Processor_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, system)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, virtual processor, device);</span></pre>
  <p class="MsoListContinue"><a name="AllowedProcessorBindingDesc"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The
  </span><span lang="EN-US">Allowed_Processor_Binding</span></span></a><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies the set of virtual processors and processors that are
  available for binding.  The set is specified by a list of virtual processor, processor
  and system component names. System names represent the processors contained
  in them.</span></span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">If the property is specified for
  a thread, the thread can be bound to any of the specified set of virtual processors
  or processors for execution. If the property is specified for a thread group,
  process, or system, then it applies to all contained threads, i.e., the
  contained threads inherit the property association unless overridden. If this
  property is specified for a device, then the thread associated with the
  device driver code can be bound to one of the set of processors for execution. 
  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Processor_Binding</span><span lang="EN-US"> property may
  specify a single processor, thus specifying the exact processor binding.  </span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The allowed binding may be
  further constrained by the processor classifier reference specified in the </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Processor_Binding_Class</span><span lang="EN-US"> property</span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">. </span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If this property has no associated value, then all processors
  declared in n AADL specification are acceptable candidates.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="ActualProcessorBinding"><span lang="EN-US">Actual_Processor_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (processor, virtual processor)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, virtual processor, device);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">A
  thread is bound to the processor specified by the </span><span lang="EN-US">Actual_Processor_Binding</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property.  The process of binding threads to processors determines the value
  of this property.  If there is more than one processor listed, a scheduler
  will dynamically assign the thread to one at a time.  This allows modeling of
  multi-core processors without explicit binding to one of the cores.</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">If
  a device is bound to a processor this indicates the binding of the device
  driver software. </span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">A
  virtual processor may be bound to a processor. This indicates that the
  virtual processor executes on the processor it is bound to.</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Threads,
  devices, and virtual processors can be bound to virtual processors, which in
  turn are bound to virtual processors or processors.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre style="margin-bottom: 0.0001pt;"><a name="AllowedMemoryClass"><span lang="EN-US">Allowed_Memory_Binding_Class: </span></a></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b> (memory, system, processor)     </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, device, data, data port, event data port, subprogram, subprogram group, processor);</span></pre>
  <p class="MsoListContinue"><a name="AllowedMemoryBindingClassDesc"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The
  </span><span lang="EN-US">Allowed_Memory_Binding_Class </span></span></a><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">property
  specifies a set of memory, device, and system classifiers.  These classifiers
  constrain the set of memory components in the </span><span lang="EN-US">Allowed_Memory_Binding</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property to the subset that satisfies the component classifier. </span></span></p>
  <p class="MsoListContinue"><span lang="EN-US">The value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding </span><span lang="EN-US">property may be inherited from the component that contains the
  component or feature.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If this property has no associated value, then all memory
  components specified in the </span><span class="HTMLPreformattedChar"><span lang="EN-US">Allowed_Memory_Binding </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">are
  acceptable candidates</span><span lang="EN-US">.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="AllowedMemory"><span lang="EN-US">Allowed_Memory_Binding: <b>inherit list</b> <b>of</b> <b>reference</b> (memory, system, processor)</span></a></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, device, data, data port, event data port, subprogram, subprogram group, processor);</span></pre>
  <p class="MsoListContinue"><a name="AllowedMemoryBindingDesc"><span lang="EN-US">Code
  and data produced from source text can be bound to the set of memory
  components that is specified by the </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding </span><span lang="EN-US">property.  </span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The set is specified
  by a list of memory and system component names.  System names represent the
  memories contained in them.  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding</span><span lang="EN-US"> property may specify a single memory, thus specifying the exact
  memory binding.  </span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The allowed binding may be
  further constrained by the memory classifier specified in the </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding_Class</span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">.
  </span></span></p>
  <p class="MsoListContinue"><span lang="EN-US">The value of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Memory_Binding </span><span lang="EN-US">property may be inherited from the component that contains the
  component or feature.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If this property has no associated value, then all memory
  components declared in an AADL specification are acceptable candidates.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="ActualMemoryBinding"><span lang="EN-US">Actual_Memory_Binding: <b>inherit</b> <b>list of</b> <b>reference</b> (memory)</span></a></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, processor, device,</span></pre><pre style="text-align: justify;"><span lang="EN-US">               data, data port, event data port, subprogram, subprogram group);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Code
  and data from source text is bound to the memory specified by the </span><span lang="EN-US">Actual_Memory_Binding </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">property. 
  The property can hold a list of values to reflect the possibility of code and
  data being bound to different memory components, for example.</span></span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre style="margin-bottom: 0.0001pt;"><a name="AllowedConnectionBindingClass"><span lang="EN-US">Allowed_Connection_Binding_Class: </span></a></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>classifier</b>(processor, virtual processor, bus, virtual bus, device, memory)</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (feature, connection, thread, thread group, process, system, virtual bus);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Connection_Binding_Class </span><span lang="EN-US">property specifies a set of execution platform classifiers to
  constrain the binding of connections and virtual buses.  The named component
  classifiers must belong to a processor, virtual processor, bus, virtual bus,
  device, or memory category, i.e., any execution platform component that
  supports communication between threads.  When specified for a feature it
  indicates a binding constraint for all connections through that feature,
  e.g., any protocol assumptions a component makes about its communication
  through the port.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="AllowedConnectionBinding"><span lang="EN-US">Allowed_Connection_Binding: <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (feature, connection, thread, thread group, process, system, virtual bus);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Connection_Binding</span><span lang="EN-US"> property specifies </span><span lang="EN-US">a set of execution
  platform components to constrain the binding of connections and virtual
  buses.  The named components must belong to a processor, virtual processor,
  bus, virtual bus, device, or memory category. When specified for a feature
  such as a port it indicates a binding constraint for all connections through
  that feature, e.g., any protocol assumptions a component makes about its
  communication through the port.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="ActualConnectionBinding"><span lang="EN-US">Actual_Connection_Binding: <b>inherit list of</b> <b>reference</b> (processor, virtual processor, bus, virtual bus, device, memory)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (feature, connection, thread, thread group, process, system, virtual bus);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="ActualConnectionBindingDesc"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Connections and
  virtual buses are bound to the bus, virtual bus, processor, virtual processor,
  device, and memory specified by the </span><span lang="EN-US">Actual_Connection_Binding
  </span></span></a><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">property.  The entries in the
  list represent the flow sequence of the connection through the execution
  platform.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 21.1pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 21.1pt;"><pre><a name="AllowedSubprogramCall"><span lang="EN-US">Allowed_Subprogram_Call: <b>list of</b> <b>reference</b> (subprogram)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram access);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">A
  subprogram call can be bound to any member of the set of subprograms
  specified by the </span><span lang="EN-US">Allowed_Subprogram_Call</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property. These may be remote subprograms, i.e., subprogram instances in
  other threads, or local subprogram instances.  In the latter case the
  property identifies a specific code instance. If no value is specified, then
  subprogram call must be a local call.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="ActualSubprogramCall"><span lang="EN-US">Actual_Subprogram_Call: <b>reference</b> (subprogram)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram access);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The
  </span><span lang="EN-US">Actual_Subprogram_Call</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies the subprogram instance whose code is servicing the
  subprogram call. These may be remote subprograms, i.e., subprogram instances
  in other threads, or local subprogram instances.  In the latter case the
  property identifies a specific local code instance, i.e., it can model
  sharing of subprogram. If no value is specified, the subprogram call is a
  local call.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre style="margin-bottom: 0.0001pt;"><a name="AllowedSubprogramCallBinding"><span lang="EN-US">Allowed_Subprogram_Call_Binding: </span></a></pre><pre><span lang="EN-US">   <b>inherit</b> <b>list</b> <b>of</b> <b>reference</b> (bus, processor, device)</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram, thread, thread group, process, system);</span></pre>
  <p class="MsoListContinue"><a name="AllowedSubprogramCallBindingDesc"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Remote
  subprogram calls can be bound to the physical connection of an execution
  platform that is specified by the </span><span lang="EN-US">Allowed_Subprogram_Call_Binding</span></span></a><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property. If no value is specified, then subprogram call may be a local call
  or the binding may be inferred from the bindings of the caller and callee.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="ActualSubprogramCallBinding"><span lang="EN-US">Actual_Subprogram_Call_Binding: <b>list of</b> <b>reference</b> (bus, processor, memory, device)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="ActualSubprogramCallBindingDesc"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Actual_Subprogram_Call_Binding</span></span></a><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies the bus, processor, device, or memory to which a remote
  subprogram call is bound. If no value is specified, the subprogram call is a
  local call or the binding can be inferred from the binding of the caller and
  callee.</span></span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 46.75pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 46.75pt;"><pre><a name="ProvidedVirtualBusClass"></a><a name="ProvidedTransferProtocol"><span lang="EN-US">Provided_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(bus, virtual bus, processor, virtual processor, device, memory, system);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property specifies the set of virtual bus classifiers (protocols)
  supported by a bus, virtual bus, virtual processor, device, or processor. 
  The property indicates that a component with a binding requirement for a
  virtual bus classifier can be bound to a component whose </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Virtual_Bus_Class</span><span lang="EN-US"> property value includes the desired virtual bus classifier.  Note
  that the component with this property is not required to have virtual bus
  subcomponents.</span></p>
  </td>
 </tr>
 <tr style="height: 46.75pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 46.75pt;"><pre><a name="RequiredVirtualBusClass"><span lang="EN-US">Required_Virtual_Bus_Class : <b>inherit list of</b> <b>classifier</b> (virtual bus)</span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(virtual bus, connection, port, <a name="OLE_LINK2"></a><a name="OLE_LINK1">thread, thread group, process, system, device</a>);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Virtual_Bus_Class</span><span lang="EN-US"> property specifies the set of virtual bus classifiers (protocols)
  that this connection or virtual bus needs to be bound to, i.e., that it
  requires to be bound to one instance of each of the specified classifiers. 
  This property complements the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Connection_Binding_Class</span><span lang="EN-US">
  property, which specifies that the connection binding must be to components
  of one of the specified classifiers. </span></p>
  </td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="ProvidedQualityOfService"><span lang="EN-US">Provided_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(bus, virtual bus, processor, virtual processor, system, device, memory);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Provided_Connection_Quality_Of_Service</span><span lang="EN-US"> property specifies the quality of service provided by a protocol,
  i.e., a virtual bus, bus, virtual processor, or processor supporting
  protocols, for its transmission.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="RequiredQualityOfService"><span lang="EN-US">Required_Connection_Quality_Of_Service : <b>inherit list of </b>Supported_Connection_QoS</span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(port, connection, virtual bus, thread, thread group, process, system, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Connection_Quality_Of_Service</span><span lang="EN-US"> property specifies that a connection or virtual bus expects a
  certain quality of service from the protocol that is used for its
  transmission.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="NotColocated"><span lang="EN-US">Not_Collocated: <b>record </b>( </span></a></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre style="text-align: justify;"><span lang="EN-US">    <b>applies</b> <b>to</b> (process, system);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Not_Collocated</span><span lang="EN-US">
  property specifies that hardware resources used by several software
  components must be distinct.  The components referenced by </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Target</span><span lang="EN-US">
  must not be bound to the same hardware of the type specified in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Location</span><span lang="EN-US">
  field.  If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Location</span><span lang="EN-US"> is a system component, then they may not be collocated to any
  component contained in the system component.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr style="height: 71.5pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 71.5pt;"><pre><a name="Colocated"><span lang="EN-US">Collocated: <b>record </b>( </span></a></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">Targets:<b> list</b> <b>of</b> <b>reference</b> (data, thread, process, system, connection);</span></pre><pre><span lang="EN-US">    Location: <b>classifier </b>( processor, memory, bus, system ); )</span></pre><pre style="text-align: justify;"><span lang="EN-US">    <b>applies</b> <b>to</b> (process, system);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Collocated</span><span lang="EN-US"> property
  specifies that several software components must be bound to the same hardware. 
  The components referenced by </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Target</span><span lang="EN-US"> must be bound to the same hardware of the type specified in the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Location</span><span lang="EN-US">
  field.  If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Location</span><span lang="EN-US"> is a system component, then they must be collocated on any
  component contained in the system component.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The next set of properties specify characteristics of the computing
hardware as it relates to the deployment of software.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt; text-align: justify;"><a name="AllowedConnectionType"><span lang="EN-US">Allowed_Connection_Type: <b>list</b> <b>of</b> <b>enumeration </b></span></a></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                        (Sampled_Data_Connection, Immediate_Data_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Delayed_Data_Connection, Port_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Data_Access_Connection,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                         Subprogram_Access_Connection)</span></pre><pre style="text-align: justify;"><span lang="EN-US">    <b>applies</b> <b>to</b> (bus, device);</span></pre>
  <p class="MsoListContinue"><a name="AllowedConnectionProtocolDesc"><span lang="EN-US">The </span></a><span class="HTMLPreformattedChar"><span lang="EN-US">Allowed_Connection</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Type</span><span lang="EN-US"> property specifies the categories of connections a bus supports. 
  That is, a connection may only be legally bound to a bus if the bus supports
  that category of connection.    </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If a list of allowed connection protocols is not specified for a
  bus, then any category of connection can be bound to the bus.</span></p>
  <p class="MsoNormal"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="AllowedDispatchProtocol"><span lang="EN-US">Allowed_Dispatch_Protocol:<b> list of </b>Supported_Dispatch_Protocols</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, virtual processor);</span></pre>
  <p class="MsoListContinue"><a name="AllowedDispatchProtocolDesc"><span lang="EN-US">The </span></a><span class="HTMLPreformattedChar"><span lang="EN-US">Allowed_Dispatch</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Protocol</span><span lang="EN-US"> property specifies the thread dispatch protocols are supported by
  a processor.  That is, a thread may only be legally bound to the processor if
  the specified thread dispatch protocol of the processor corresponds to the
  dispatch protocol required by the thread.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If a list of allowed scheduling protocols is not specified for a
  processor, then a thread with any dispatch protocol can be bound to and
  executed by the processor.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><a name="AllowedPeriod"><span lang="EN-US">Allowed_Period: <b>list</b> <b>of</b> Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, system, virtual processor);</span></pre>
  <p class="MsoListContinue"><a name="AllowedPeriodDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Allowed_Period</span><span lang="EN-US"> property specifies a set of allowed periods for periodic tasks
  bound to a processor. </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The period of every thread bound to
  the processor must fall within one of the specified ranges.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If an allowed period is not specified for a processor, then there
  are no restrictions on the periods of threads bound to that processor.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="AllowedPhysicalAccessClass"><span lang="EN-US">Allowed_Physical_Access_Class: <b>list</b> <b>of</b> <b>classifier</b> ( device, processor, memory, bus )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">    <b>applies</b> <b>to</b> (bus);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="HTMLPreformattedChar"><span lang="EN-US">Allowed_Physical_Access_Class</span></span><span lang="EN-US"> property specifies the classifiers of processors, devices,
  memory, and buses that are allowed to be connected to the bus, i.e., whose
  connection is supported by the bus.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If the property is not specified for a bus, then the bus may be
  used to connect both devices and memory to the processor.</span></p>
  <p class="MsoNormal"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="AllowedPhysicalAccess"><span lang="EN-US">Allowed_Physical_Access: <b>list</b> <b>of</b> <b>reference</b> ( device, processor, memory, bus )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">    <b>applies</b> <b>to</b> (bus);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="HTMLPreformattedChar"><span lang="EN-US">Allowed_Physical_Access</span></span><span lang="EN-US"> property specifies the classifiers of processors, devices,
  memory, and buses that are allowed to be connected to the bus, i.e., whose
  connection is supported by the bus.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If the property is not specified for a bus, then the bus may be
  used to connect both devices and memory to the processor.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="MemoryProtocol"><span lang="EN-US">Memory_Protocol: <b>enumeration</b> (execute_only, read_only, write_only, read_write) =&gt; read_write<b> </b></span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (memory);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="MemoryProtocolDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Memory_Protocol </span><span lang="EN-US">property
  specifies memory access and storage behaviors and restrictions.  Writeable
  data produced from software source text may only be bound to memory
  components that have the </span><span class="HTMLPreformattedChar"><span lang="EN-US">write_only or read_write </span></span><span lang="EN-US">property
  value.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RuntimeProtectionSupport"><span lang="EN-US">Runtime_Protection_Support : <b>aadlboolean </b></span></a></pre><pre><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (processor, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The Runtime_Protection_Support
  property specifies whether the processor or virtual processor is able to
  support runtime enforcement of protected address spaces. Processes and
  virtual processors bound to virtual processors and processors specify the
  demand for such runtime enforcement.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SchedulingProtocol"><span lang="EN-US">Scheduling_Protocol: <b>inherit</b> <b>list of</b> Supported_Scheduling_Protocols</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (virtual processor, processor);</span></pre>
  <p class="MsoListContinue"><a name="SchedulingProtocolDesc"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The
  </span><span lang="EN-US">Scheduling_Protocol</span></span></a><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies what scheduling protocol the thread scheduler of the
  processor uses.  The core standard does not prescribe a particular scheduling
  protocol.</span></span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Scheduling protocols may result
  in schedulers that coordinate scheduling of threads across multiple
  processors.</span></span></p>
  <pre><tt><span lang="EN-US"> </span></tt></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="margin-bottom: 6pt; text-align: left;"><span class="HTMLPreformattedChar5"><span lang="EN-US">Preemptive_Scheduler : <b>aadlboolean</b>
  </span></span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar5"><span lang="EN-US">    
  <b>applies to </b>(processor);</span></span></p>
  <p class="MsoListContinue"><span class="ListContinueChar"><span lang="EN-US">This
  property specifies if the processor can preempt a thread during its
  execution. By default, if this property is not specified, the processor owns
  a preemptive scheduler.</span></span><span lang="EN-US">  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ThreadLimit"><span lang="EN-US">Thread_Limit: <b>aadl</b><b>integer</b> 0 .. Max_Thread_Limit </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, virtual processor);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="ThreadLimitDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Thread_Limit </span><span lang="EN-US">property specifies</span><span lang="EN-US"> the maximum number of
  threads supported by the processor.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="PriorityMap"><span lang="EN-US">Priority_Map: <b>list of</b> Priority_Mapping</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Priority_Map</span><span lang="EN-US"> property specifies a mapping of AADL priorities into priorities
  of the underlying real-time operating system. This map consists of a list of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aadlinteger</span><span lang="EN-US"> pairs. </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><span lang="EN-US">Priority_Mapping: <b>type</b> <b>record </b>(</span></pre><pre><span lang="EN-US">       Aadl_Priority: <b>aadlinteger</b>;</span></pre><pre><span lang="EN-US">       RTOS_Priority: <b>aadlinteger;</b> );</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Priority_Mapping</span><span lang="EN-US"> property specifies a mapping of a single AADL priority value into
  a single priority value of the underlying real-time operating system. This
  property is used to define the elements of a  consists of a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Priority_Map</span><span lang="EN-US">. </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="PriorityRange"><span lang="EN-US">Priority_Range: <b>range of aadlinteger</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Priority_Range</span><span lang="EN-US"> property specifies the range of thread priority values that are
  acceptable to the processor.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The
  property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">range
  of aadlinteger</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">. 
  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Deployment_Properties;</span></pre><pre style="text-align: justify;"><span lang="EN-US"> </span></pre>

<p class="appendix2"><a name="_Toc169684137"></a><a name="_Toc167033787"></a><a name="_Toc168661904"></a><a name="_Toc86725710"></a><a name="_Toc86220747"></a><a name="_Toc86220275"></a><a name="_Toc86219902"></a><a name="_Toc86219797"></a><a name="_Toc79295034"></a><a name="_Ref56323158"></a><a name="_Toc318320384"><span lang="EN-US">A.2<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">Predeclared Thread Properties</span></a><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The properties of the predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Thread_Properties</span><span lang="EN-US"> record information related to threads and devices, i.e., active
application components. They address dispatching, concurrency, and mode transition. 
</span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Thread_Properties <b>is </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="DispatchProtocol"><span lang="EN-US">Dispatch_Protocol: Supported_Dispatch_Protocols</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Dispatch_Protocol</span><span lang="EN-US"> property specifies the dispatch behavior for a thread.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">A method used to construct a actual system from a specification is
  permitted to support only a subset of the standard scheduling protocols.  A
  method used to construct a actual system is permitted to support additional
  non-standard scheduling protocols.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-indent: 36pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DispatchTrigger"><span lang="EN-US">Dispatch_Trigger: <b>list of</b> <b>reference </b>(port)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (device, thread);</span></pre>
  <p class="MsoListContinue"><a name="DeviceDispatchProtocolDesc"><span lang="EN-US">The
  </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Dispatch_Trigger</span><span lang="EN-US"> property specifies the list of ports that can trigger the dispatch
  of a thread or device. </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DispatchAble"><span lang="EN-US">Dispatch_Able: <b>aadlboolean </b></span></a></pre><pre><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The Dispatch_Able property
  specifies whether a thread should be dispatched. Threads can be activated for
  dispatch in given modes, which is specified as part of the subcomponent
  declaration of the component using the thread. In some cases the thread
  itself may have modes and that mode determines whether the thread is active
  or idle. For example, various combinations of low level control threads may
  be active or idle at various points in time.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">Expressing this through modes in
  the enclosing component would lead to possibly having to model many mode
  combinations of subcomponents. Specification of zero compute_execution_time
  for a thread indicates that thread is dispatched and its application code
  decides there is nothing to do.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoListContinue" style="margin-left: 0cm;"><a name="POSIXSchedulingPolicy"><span class="HTMLPreformattedChar5"><span lang="EN-US">POSIX_Scheduling_Policy : <b>enumeration</b> (SCHED_FIFO,
  SCHED_RR, SCHED_OTHERS)</span></span></a></p>
  <p align="left" class="MsoListContinue" style="text-align: left;"><span class="HTMLPreformattedChar5"><span lang="EN-US">   <b>applies to</b> (thread,
  thread group);</span></span></p>
  <p class="MsoListContinue" style="margin-left: 0cm;"><span class="ListContinueChar"><span lang="EN-US">The POSIX_Scheduling_Policy property
  is used for the modeling of the</span></span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> scheduling protocols defined by </span><span class="ListContinueChar"><span lang="EN-US">POSIX 1003.1b. Such a property
  specifies the policy assign to a given thread. The policy may be either </span></span><span class="ListContinueChar"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">SCHED_FIFO</span></span><span class="ListContinueChar"><span lang="EN-US">, </span></span><span class="ListContinueChar"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">SCHED_RR</span></span><span class="ListContinueChar"><span lang="EN-US"> or </span></span><span class="ListContinueChar"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">SCHED_OTHER</span></span><span class="ListContinueChar"><span lang="EN-US">. In a POSIX 1003.1b architecture,
  the policy allows the scheduler to choose the thread to run when several
  threads have the same fixed priority. If a thread does not define the
  POSIX_Scheduling_Policy property, it has by default the SCHED_FIFO policy.
  The policy semantics are :</span></span></p>
  <p align="left" class="MsoNormal" style="margin: 0cm 0cm 0.0001pt 54pt; text-align: left; text-indent: -18pt;"><span lang="EN-GB" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><tt><span lang="EN-GB">SCHED_FIFO </span></tt><span lang="EN-US">:
  this policy im</span><span lang="EN-GB">plements a FIFO scheduling protocol on
  the set of equal fixed priority : a thread stays on the processor until it
  has terminated or until a highest priority thread is released. </span></p>
  <p align="left" class="MsoNormal" style="margin: 0cm 0cm 0.0001pt 54pt; text-align: left; text-indent: -18pt;"><span lang="EN-GB" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><tt><span lang="EN-GB">SCHED_RR </span></tt><span lang="EN-US">:
  this policy is </span><span lang="EN-GB">similar to </span><tt><span lang="EN-GB">SCHED_FIFO </span></tt><span lang="EN-GB">except that the quantum is
  used. At the end of the quantum, the running thread is pre-empted from the
  processor and a equal priority thread has to be released. </span></p>
  <p align="left" class="MsoNormal" style="margin: 0cm 0cm 0.0001pt 54pt; text-align: left; text-indent: -18pt;"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><tt><span lang="EN-GB">SCHED_OTHER</span></tt><span lang="EN-GB"> :
  its semantic is defined by POSIX policy implementers. This policy usually
  implements a timing sharing scheduling protocol.</span><span lang="EN-GB"> </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Priority"><span lang="EN-US">Priority<span class="HTMLPreformattedChar5">:</span> <b>inherit</b> <b>aadlinteger</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Priority</span><span lang="EN-US"> property specifies the priority of the thread that is taken into
  consideration by some scheduling protocols in scheduling the execution order
  of threads.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The
  property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">aadlinteger</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  Its value is expected
  to be within the range of priority values supported by a given processor.  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Criticality"><span lang="EN-US">Criticality</span><span lang="EN-US">: <b>aadlinteger</b></span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread, thread group);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">This property specifies the criticality level of a thread. This
  property is used by maximum urgency first scheduling protocols. Such a
  property can also be used by any project specific  scheduling protocols.</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> </span></p>
  <pre><tt><span lang="EN-US"> </span></tt></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="TimeSlot"><span lang="EN-US">Time_Slot: <b>list of aadl</b><b>integer </b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, virtual processor, system);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time_Slot</span><span lang="EN-US"> property specifies statically allocated slots on a timeline. 
  This property is used by scheduling protocols with a time slot allocation
  approach, such as the protocol for scheduling partitions on a static
  timeline.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="ConcurrencyControlProtocol"><span lang="EN-US">Concurrency_Control_Protocol: Supported_Concurrency_Control_Protocols</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">      <b>applies</b> <b>to</b> (data);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="ConcurrencyControlProtocolDesc"><span lang="EN-US">The </span></a><span class="HTMLPreformattedChar1"><span lang="EN-US">Concurrency_Control_Protocol</span></span><span lang="EN-US"> property specifies the concurrency control protocol used to
  ensure mutually exclusive access, i.e., a critical region, to a shared data
  component.  If no value is specified the default value is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">None_Specified</span><span lang="EN-US">, i.e., no concurrency control protocol.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Urgency"><span lang="EN-US">Urgency: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Urgency</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port, subprogram);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Urgency</span><span lang="EN-US"> property specifies the urgency with which an event at an in port
  is to be serviced relative to other events arriving at or queued at other in
  ports of the same thread.  A numerically larger number represents higher
  urgency.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DequeueProtocol"><span lang="EN-US">Dequeue_Protocol: <b>enumeration</b> ( OneItem, MultipleItems, AllItems ) =&gt; OneItem</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (event port, event data port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US">
  property specifies different dequeuing options.</span></p>
  <p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OneItem:</span><span lang="EN-US"> (default) a single frozen item is dequeued at input time and made
  available to the source text unless the queue is empty. The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> service call has no effect.</span></p>
  <p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AllItems:</span><span lang="EN-US"> all items that are frozen at input time are dequeued and made
  available to the source text via the port variable, unless the queue is
  empty.  Individual items become accessible as port variable value through the
  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> service call. Any element in the frozen queue that are not
  retrieved through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> service call are discarded, i.e., are removed from the queue and
  are not available at the next input time. </span></p>
  <p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">MultipleItems:</span><span lang="EN-US"> multiple items can be dequeued one at a time from the frozen
  queue and made available to the source text via the port variable.  One item
  is dequeued and its value made available via the port variable with each </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> service call.  Any items not dequeued remain in the queue and are
  available at the next input time.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">If the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeued_Items </span><span lang="EN-US">property
  is set, then it imposes a maximum on the number of elements that are made
  accessible to a thread at input time when the  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US">
  property is set to </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AllItems</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">MultipleItems</span><span lang="EN-US">.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default property value is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OneItem</span><span lang="EN-US">.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DequeuedItems"><span lang="EN-US">Dequeued_Items: <b>aadlinteger</b> </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (event port, event data port);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeued</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Items</span><span lang="EN-US"> property specifies the maximum number of items that are made
  available to the application via a port variable for event or event data
  ports when the input is frozen at input time.  Its value cannot exceed that
  of the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Size</span><span lang="EN-US"> property for the same port.  See also </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US">
  property.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ModeTransitionResponse"><span lang="EN-US">Mode_Transition_Response: <b>enumeration </b>( emergency, planned )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (mode transition);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Mode_Transition_Response</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US">property specifies whether the mode transition occurs immediately
  due to an emergency, or whether it is planned in that the completion of
  thread execution can be coordinated before performing the mode transition. If
  not specified the mode transition is considered to be planned.</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ResumptionPolicy"><span lang="EN-US">Resumption_Policy: <b>enumeration</b> ( restart, resume )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, device, processor, memory, bus, system, virtual processor, virtual bus, subprogram);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Resumption_Policy </span><span lang="EN-US">property specifies whether as result of a mode transition
  activation a component that has modes itself starts in the initial mode or
  resumes in the current mode at the time of its deactivation.  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-indent: 36pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="ActiveThreadHandlingProtocol"><span lang="EN-US">Active_Thread_Handling_Protocol: </span></a></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US">   inherit</span></b><span lang="EN-US"> Supported_Active_Thread_Handling_Protocols =&gt; abort</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies to </b>(thread, thread group, process, system);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Handling_Protocol</span><span lang="EN-US"> property specifies the protocol to use to handle execution at the
  time instant of an actual mode switch. The available choices are implementation
  defined. The default value is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">abort</span><span lang="EN-US">. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt; text-align: justify;"><a name="ActiveThreadQueueHandlingProtocol"><span lang="EN-US">Active_Thread_Queue_Handling_Protocol: </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>inherit </b><b>enumeration </b>(flush, hold) =&gt; flush</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies to </b>(thread, thread group, process, system);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Active_Thread_Queue_Handling_Protocol</span><span lang="EN-US"> property specifies the protocol to use to handle the content of
  any event port or event data port queue of a thread at the time instant of an
  actual mode switch. The available choices are </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">flush</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">hold</span><span lang="EN-US">. 
  Flush empties the queue. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Hold</span><span lang="EN-US"> keeps the content in the queue of the thread being deactivated
  until it is reactivated.  The default value is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">flush</span><span lang="EN-US">.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-indent: 36pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeactivationPolicy"><span lang="EN-US">Deactivation_Policy: <b>enumeration </b>(inactive, unload) =&gt; inactive<b> </b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, process, virtual processor, processor);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deactivation_Policy</span><span lang="EN-US"> property specifies whether a process is to be unloaded when it is
  deactivated. If the policy is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">unload</span><span lang="EN-US">, then the process is unloaded
  on deactivate and loaded on activate. In the case of threads, the property
  indicates whether thread state is saved.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default is that the process is loaded during startup and is
  not unloaded when deactivated.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RuntimeProtection"><tt><span lang="EN-US">Runtime_Protection</span></tt><span lang="EN-US"> : <b>inherit</b> <b>aadlboolean</b> </span></a></pre><pre><b><span lang="EN-US">   applies to</span></b><span lang="EN-US"> (process, system, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">This property specifies whether a
  process requires runtime enforcement of address space protection. If no value
  is specified the default is assumed to be <b>true</b>.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SubprogramCallType"><span lang="EN-US">Subprogram_Call_Type: <b>enumeration</b> (Synchronous, SemiSynchronous)</span></a></pre><pre><span lang="EN-US">    =&gt; Synchronous</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Subprogram_Call_Type</span><span lang="EN-US"> property specifies whether the call is to be performed
  synchronous or semi-synchronous. In case of a semi-synchronous call the user
  of the result is may be suspended until the result is available. The default
  is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Synchronous</span><span lang="EN-US"> if no property value is specified.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SynchronizedComponent"><span lang="EN-US">Synchronized_Component: <b>inherit</b> <b>aadlboolean </b>=&gt; <b>true</b></span></a></pre><pre><span lang="EN-US">      <b>applies to</b> (thread, thread group, process, system);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="SynchronizedComponentsDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Synchronized_Component</span><span lang="EN-US"> property specifies whether a periodic thread will be synchronized
  with transitions into and out of a mode.  In other words, the thread affects
  the hyperperiod for mode switching of the property value is true.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default value is true.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Thread_Properties;</span></pre>

<p class="appendix2"><a name="_Toc318320385"><span lang="EN-US">A.3<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Timing Properties</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timing_Properties</span><span lang="EN-US"> contains
execution time related property definitions regarding threads, devices, and
runtime system support for thread execution.  </span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Timing_Properties <b>is </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="Time"><span lang="EN-US">Time: <b>type</b> <b>aadl</b><b>integer </b>0 ps .. Max_Time <b>units</b> Time_Units;</span></a></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="TimeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Time</span><span lang="EN-US"> property type
  specifies a property type for time that is expressed as numbers with
  predefined time units.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="TimeRange"><span lang="EN-US">Time_Range: <b>type</b> <b>range</b> <b>of</b> Time;</span></a></pre>
  <p class="MsoListContinue"><a name="TimeRangeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Time_Range</span><span lang="EN-US"> property type specifies a property type for a closed range of
  time, i.e., a time span including the lower and upper bound. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours).</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">These properties record information related to the  timing of thread
and device execution timing.  </span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><a name="ActivateDeadline"><span lang="EN-US">Activate</span><span lang="EN-US">_Deadline: Time</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (Thread);</span></pre>
  <p class="MsoListContinue"><a name="ActivateDeadlineDesc"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Activate_Deadline</span><span lang="EN-US"> specifies the maximum amount of time allowed for the execution of
  a thread’s activation sequence.  The numeric value of time must be positive.</span></a></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property type is </span><span lang="EN-US">Time</span><span lang="EN-US">.  The standard units are </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">ps (picoseconds), </span><span lang="EN-US">ns (nanoseconds), </span><span lang="EN-US" style="color: windowtext;">us</span><span lang="EN-US"> (microseconds), </span><span lang="EN-US" style="color: windowtext;">ms</span><span lang="EN-US"> (milliseconds), </span><span lang="EN-US" style="color: windowtext;">sec</span><span lang="EN-US"> (seconds), </span><span lang="EN-US" style="color: windowtext;">min</span><span lang="EN-US"> (minutes) and hr (hours).  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ActivateComputeTime"><span lang="EN-US">Activate_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="ActivateComputeTimeDesc"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Activate_Execution_Time </span><span lang="EN-US">specifies
  the minimum and maximum execution time, in the absence of runtime errors,
  that a thread will use to execute its activation sequence, i.e., when a
  thread becomes active as part of a mode switch.  The specified execution time
  includes all time required to execute any service calls that are executed by
  a thread, but excludes any time spent by another thread executing remote
  procedure calls in response to a remote subprogram call made by this thread.</span></a></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ComputeDeadline"><span lang="EN-US">Compute</span><span lang="EN-US">_Deadline: Time</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread, device, subprogram, subprogram access, event port, event data port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US" style="color: windowtext;">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Deadline</span><span lang="EN-US"> specifies the maximum amount of time allowed for the execution of
  a thread’s compute sequence.  If the property is specified for a subprogram,
  event port, or event data port feature, then this compute execution time
  applies to the dispatched thread when the corresponding call, event, or event
  data arrives.   When specified for a subprogram access feature, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Deadline</span><span lang="EN-US"> applies to the thread executing the remote procedure call in
  response to the remote subprogram call.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Deadline</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">
  specified for a feature</span><span lang="EN-US"> must not exceed the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Deadline</span><span lang="EN-US"> of the </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">associated</span><span lang="EN-US"> thread. The numeric
  value of time must be positive.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The values specified for this
  property for a thread are bounds on the values specified for specific
  features.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US"> property places
  a limit on </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US">: </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> + </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: Symbol;">£</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours). </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ComputeTime"><span lang="EN-US">Compute_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device, subprogram, event port, event data port);</span></pre>
  <p class="MsoListContinue"><a name="ComputeTimeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Compute_Execution_Time </span><span lang="EN-US">property specifies the amount
  of time that a thread will execute after a thread has been dispatched, before
  that thread begins waiting for another dispatch.  If the property is
  specified for a subprogram, event port, or event data port feature, then this
  compute execution time applies to the dispatched thread when the
  corresponding call, event, or event data initiates a dispatch.  When
  specified for a subprogram (access) feature, it applies to the thread
  executing the remote procedure call in response to a remote subprogram call.
  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Execution_Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">
  specified for a feature</span><span lang="EN-US"> must not exceed the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Execution_Time</span><span lang="EN-US"> of the </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">associated</span><span lang="EN-US"> thread.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The range expression specifies a
  minimum and maximum execution time in the absence of runtime errors.  The
  specified execution time includes all time required to execute any service
  calls that are executed by a thread, but excludes any time spent by another
  thread executing remote procedure calls in response to a remote subprogram
  call made by the thread.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The values specified for this
  property for a thread are bounds on the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Execution_Time</span><span lang="EN-US"> values specified for ports or subprogram access that dispatch
  execution.</span></p>
  <pre style="text-indent: 36pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ClientSubprogramExecutionTime"><span lang="EN-US">Client_Subprogram_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram);</span></pre>
  <p class="MsoListContinue"><a name="ClientSubprogramExecutionTimeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Client_Subprogram_Execution_Time</span><span lang="EN-US"> property specifies the length of time it takes to execute the
  client portion of a remote subprogram call.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time_Range</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are
  ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).  The numeric value must be a positive number.  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeactivateDeadline"><span lang="EN-US">Deactivate</span><span lang="EN-US">_Deadline: Time</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="DeactivateDeadlineDesc"><span lang="EN-US" style="color: windowtext;">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Deactivate_Deadline</span><span lang="EN-US">
  property specifies the maximum amount of time allowed for the execution of a
  thread’s deactivation sequence.  The numeric value of time must be positive.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours).  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeactivateComputeTime"><span lang="EN-US">Deactivate_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue" style="margin-left: 40pt; text-indent: -4pt;"><a name="DeactivateComputeTimeDesc"><span lang="EN-US" style="color: windowtext;">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Deactivate_Execution_Time </span><span lang="EN-US" style="color: windowtext;">property
  </span><span lang="EN-US">specifies the amount of time that a thread will
  execute its deactivation sequence, i.e., when the thread is deactivated as
  part of a mode switch. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum execution
  time in the absence of runtime errors.  The specified execution time includes
  all time required to execute any service calls that are executed by a thread,
  but excludes any time spent by another thread executing remote procedure
  calls in response to a remote subprogram call made by this thread.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Deadline"><span lang="EN-US">Deadline: <b>inherit</b> Time =&gt; Period</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread, thread group, process, system, device, virtual processor);</span></pre>
  <p class="MsoListContinue"><a name="DeadlineDesc"><span lang="EN-US" style="color: windowtext;">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Deadline</span><span lang="EN-US"> property
  specifies the maximum amount of time allowed between a thread dispatch and
  the time that thread begins waiting for another dispatch.  Its numeric value
  must be positive.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US"> property
  places a limit on </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US">: </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> + </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: Symbol;">£</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US"> property
  may not be specified for threads with background dispatch protocol.</span></p>
  <p class="MsoNormal"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><a name="DispatchAbsoluteTime"><tt><span lang="EN-US">First_Dispatch_Time</span></tt><b><span lang="EN-US"> : inherit </span></b><span lang="EN-US">Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">This property specifies the time of the first dispatch request.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><span lang="EN-US">Dispatch_Jitter: <b>inherit </b>Time</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Dispatch_Jitter</span><span lang="EN-US"> property specifies a maximum bound on the lateness of a thread
  dispatching. In the case of a periodic thread for instance, the thread is
  supposed to be dispatched according to a fixed delay called the period.
  However, for many reasons, a periodic thread dispatching event can be
  delayed. The </span><tt><span lang="EN-US">Dispatch_Jitter</span></tt><span lang="EN-US"> property can be used to specify such a delay. The </span><tt><span lang="EN-US">Dispatch_Jitter</span></tt><span lang="EN-US"> property can be
  specified on any thread which can be dispatched several times (e.g.,. </span><tt><span lang="EN-US">Periodic</span></tt><span lang="EN-US">, </span><tt><span lang="EN-US">Sporadic</span></tt><span lang="EN-US">).</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DispatchOffset"><span lang="EN-US">Dispatch_Offset: <b>inherit </b>Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Dispatch_Offset</span><span lang="EN-US"> property specifies a dispatch time offset for a thread.  The
  offset indicates the amount of clock time by which the dispatch of a thread
  is offset relative to its period.  This property applies only to periodic
  threads.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ExecutionTime"><span lang="EN-US">Execution_Time: Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Execution_Time</span><span lang="EN-US"> property specifies the amount of execution time allocated to a
  virtual processor by the processor it is bound to.  This is the amount of
  execution time the virtual processor can make available to threads or virtual
  processors it schedules. It is the equivalent of the compute_execution_time
  for a thread.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="FinalizeDeadline"><span lang="EN-US">Finalize</span><span lang="EN-US">_Deadline: Time</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="FinalizeDeadlineDesc"><span lang="EN-US" style="color: windowtext;">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Finalize_Deadline</span><span lang="EN-US">
  property specifies the maximum amount of time allowed for the execution of a
  thread’s finalization sequence.  The numeric value of time must be positive.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours).</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="FinalizeComputeTime"><span lang="EN-US">Finalize_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="FinalizeComputeTimeDesc"><span lang="EN-US" style="color: windowtext;">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Finalize</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Execution_Time </span><span lang="EN-US" style="color: windowtext;">property</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US">specifies the amount of time that a thread will execute its
  finalization sequence.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum execution
  time in the absence of runtime errors.  The specified execution time includes
  all time required to execute any service calls that are executed by a thread,
  but excludes any time spent by another thread executing remote procedure
  calls in response to a remote subprogram call made by this thread.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="InitializeDeadline"><span lang="EN-US">I</span><span lang="EN-US">nitialize_Deadline: Time</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="InitializeDeadlineDesc"><span lang="EN-US" style="color: windowtext;">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Initialize_Deadline</span><span lang="EN-US">
  property specifies the maximum amount of time allowed between the time a
  thread executes its initialization sequence and the time that thread begins
  waiting for a dispatch.  The numeric value of time must be positive.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours). </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="InitializeComputeTime"><span lang="EN-US">Initialize_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="InitializeComputeTimeDesc"><span lang="EN-US" style="color: windowtext;">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Initialize_Execution_Time </span><span lang="EN-US" style="color: windowtext;">property</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US">specifies
  the amount of time that a thread will execute its initialization sequence.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum execution
  time in the absence of runtime errors.  The specified execution time includes
  all time required to execute any service calls that are executed by a thread,
  but excludes any time spent by another thread executing remote procedure
  calls in response to a remote subprogram call made by this thread.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="LoadDeadline"><span lang="EN-US">Load_Deadline: Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (process, system);</span></pre>
  <p class="MsoListContinue"><a name="LoadDeadlineDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Load_Deadline</span><span lang="EN-US"> property specifies the maximum amount of elapsed time allowed
  between the time the process begins and completes loading.  Its numeric value
  must be positive.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ns
  (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="LoadTime"><span lang="EN-US">Load_Time</span><span lang="EN-US">: Time_Range</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (process, system);</span></pre>
  <p class="MsoListContinue"><a name="LoadTimeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Load_Time</span><span lang="EN-US"> property specifies the amount of execution time that it will take
  to load the binary image associated with a process.  The numeric value of
  time must be positive.</span></p>
  <p class="MsoListContinue"><span lang="EN-US" style="color: windowtext;">When
  applied to a system, the property specifies the amount of time it takes to
  load the binary image of data components declared within the system
  implementation and shared across processes (and their address spaces).</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum load time in
  the absence of runtime errors.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Period"><span lang="EN-US">Period: <b>inherit</b> Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, thread group, process, system, device, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Period</span><span lang="EN-US"> property specifies the time interval between successive
  dispatches of a thread whose scheduling protocol is <i>periodic</i>, or the
  minimum interval between successive dispatches of a thread whose scheduling
  protocol is <i>sporadic</i>.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The
  property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are
  ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).  The numeric value must be a single positive
  number.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> property association is only allowed if the thread scheduling
  protocol is either </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">periodic</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sporadic</span><span lang="EN-US">.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RecoverDeadline"><span lang="EN-US">Recover_Deadline: Time</span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="RecoverDeadlineDesc"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Recover­_Deadline</span><span lang="EN-US"> specifies the maximum amount of time allowed between the time
  when a detected error occurs and the time a thread begins waiting for another
  dispatch.  Its numeric value must be positive.</span></a></p>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US">
  property may not be specified for threads with </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">background</span><span lang="EN-US"> dispatch
  protocol.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline </span><span lang="EN-US">must
  not be greater than the specified period for the thread, if any. </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline</span><span lang="EN-US"> property
  places a limit on </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US">: </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Compute_Deadline</span><span lang="EN-US"> + </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover_Deadline</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: Symbol;">£</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Deadline.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps (picoseconds), ns (nanoseconds), us (microseconds), ms (milliseconds), sec (seconds), min (minutes) and hr (hours).  </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RecoverComputeTime"><span lang="EN-US">Recover_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="RecoverComputeTimeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Recover_Execution_Time</span><span lang="EN-US"> property specifies the amount
  of time that a thread will execute after an error has occurred, before it
  begins waiting for another dispatch. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum execution
  time in the absence of runtime errors.  The specified execution time includes
  all time required to execute any service calls that are executed by a thread,
  but excludes any time spent by another thread executing remote procedure
  calls in response to a remote subprogram call made by this thread.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="StartupDeadline"><span class="CODE"><span lang="EN-US">Startup_Deadline: Time</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (processor, virtual processor, process, system);</span></span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="CODE"><span lang="EN-US">Startup_Deadline</span></span><span lang="EN-US"> property specifies
  the deadline for processor, virtual processor, process, and system
  initialization.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours).  The numeric value must be a single positive number.  </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span class="CODE"><span lang="EN-US"> </span></span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="StartupExecutionTime"><span class="CODE"><span lang="EN-US">Startup_Execution_Time: Time_Range</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (virtual processor, processor, process, system);</span></span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="CODE"><span lang="EN-US">Startup_Execution_Time</span></span><span lang="EN-US"> property
  specifies the execution time for initialization of a virtual processor or
  process.  Initialization time for threads is accounted for through its
  initialize entrypoint.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ps
  (picoseconds), ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> (minutes) and hr
  (hours).  The numeric value must be a single positive number.  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following properties specify timing information related to the
computing platform executing threads.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="ClockJitter"><span lang="EN-US">Clock_Jitter: Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, system);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Clock_Jitter</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies a time unit value that gives the maximum time between the
  start of clock interrupt handling on any two processors in a multi-processor
  system.</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ns
  (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).  The numeric value must be a positive number.  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ClockPeriod"><span lang="EN-US">Clock_Period: Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, system);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Clock_Period</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies a time unit value that gives the time interval between two
  clock interrupts.</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ns
  (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).  The numeric value must be a positive number.  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ClockPeriodRange"><span lang="EN-US">Clock_Period_Range: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, system);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The
  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Clock_Period_Range</span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies a time range value that represents the minimum and maximum
  value assignable to the </span><span lang="EN-US">Clock_Period </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">property.</span></span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ProcessSwapComputeTime"><span lang="EN-US">Process_Swap_Execution_Time: Time_Range</span></a></pre><pre><span lang="EN-US">      <b>applies to</b> (processor);</span></pre>
  <p class="MsoListContinue"><a name="ProcessSwapComputeTimeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Process_Swap_Execution_Time </span><span lang="EN-US">property specifies</span><span lang="EN-US"> the amount of execution time necessary to perform a context swap
  between two threads contained in different processes.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum swap time in
  the absence of runtime errors.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ReferenceProcessor"><span lang="EN-US">Reference_Processor: <b>inherit classifier </b>( processor )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram, subprogram group, thread, thread group, process, device, system);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Reference_Processor </span><span lang="EN-US">property specifies the processor based on which the execution time
  is specified. When code is bound to a different processor type, the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Scaling_Factor</span><span lang="EN-US"> of that processor is used to determine the execution, unless a
  binding specific execution time value is associated.  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ScalingFactor"><tt><span lang="EN-US">Scaling_Factor</span></tt><span lang="EN-US"> : <b>inherit</b> <b>aadlreal</b> </span></a></pre><pre><b><span lang="EN-US">applies to</span></b><span lang="EN-US"> (processor, system);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">This property specifies the speed
  of a processor with respect to a reference processor.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SchedulerQuantum"><tt><span lang="EN-US">Scheduler_Quantum</span></tt><span lang="EN-US"> : <b>inherit</b> Time </span></a></pre><pre><b><span lang="EN-US">applies to</span></b><span lang="EN-US"> (processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">This property specifies the quantum
  of a given processor. The quantum is a maximum bound on the time a thread can
  hold the processor without being preempted. A quantum is typically used in
  time sharing scheduling and in POSIX 1003.1b scheduling (with the SCHED_RR
  policy). The quantum can be used with any user-defined schedulers. If the
  quantum is not specified for a given processor, the quantum has a positive
  infinitesimal value.</span></p>
  <pre><tt><span lang="EN-US"> </span></tt></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ThreadSwapComputeTime"><span lang="EN-US">Thread_Swap_Execution_Time: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, system);</span></pre>
  <p class="MsoListContinue"><a name="ThreadSwapComputeTimeDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Thread_Swap_Execution_Time </span><span lang="EN-US">property specifies</span><span lang="EN-US"> the amount of execution time necessary for performing a context
  swap between two threads contained in the same process.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The range expression specifies a minimum and maximum swap time in
  the absence of runtime errors.</span></p>
  <pre><tt><span lang="EN-US"> </span></tt></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="FramePeriod"><span lang="EN-US">Frame_Period: Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Frame_Period </span><span lang="EN-US">property specifies</span><span lang="EN-US"> the time period of a
  major frame in a static scheduling protocol, such as a cyclic executive.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SlotTime"><span lang="EN-US">Slot_Time: Time</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor, virtual processor);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Slot_Time </span><span lang="EN-US">property specifies</span><span lang="EN-US"> the time period of a
  slot in major frame in a static scheduling protocol, such as a cyclic
  executive, if the protocol uses fixed slot times.</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  </td>
 </tr>
</tbody></table>

</div>

<pre style="text-align: justify;"><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Timing_Properties;</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="appendix2"><a name="_Toc318320386"><span lang="EN-US">A.4<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Communication Properties</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Communication_Properties </span><span lang="EN-US">defines communication related properties specify connection topology
and queuing characteristics.</span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Communication_Properties <b>is   </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="FanOutPolicy"><span lang="EN-US">Fan_Out_Policy: <b>enumeration </b>(Broadcast, RoundRobin, Selective, OnDemand)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The
  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fan_Out_Policy</span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies how the output is distributed to multiple recipients of a port
  with multiple outgoing connections.  </span><span lang="EN-US">Broadcast</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  sends to all recipients, </span><span lang="EN-US">RoundRobin</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  to one recipient at a time in order, </span><span lang="EN-US">Selective</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  sends to one recipient based on data content, and </span><span lang="EN-US">OnDemand</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  to the next recipient waiting on a port for dispatch.</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Note
  that </span><span lang="EN-US">Broadcast</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">,
  </span><span lang="EN-US">RoundRobin</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">,
  and </span><span lang="EN-US">Selective</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  pass on data and events without queuing it, while </span><span lang="EN-US">OnDemand</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  requires a queue that is serviced by the recipients.</span><span lang="EN-US"> </span></span></p>
  <pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US"> </span></b></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ConnectionPattern"><span lang="EN-US">Connection_Pattern: <b>list of </b>Supported_Connection_Patterns </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (connection);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Connection_Pattern</span><span lang="EN-US"> property specifies how an individual connection between arrays of
  ports looks like.  If the property is not set the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One_to_One</span><span lang="EN-US"> pattern
  applies.    </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Connectionset"><span lang="EN-US">Connection_Set: <b>list of </b>Connection_Pair </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (connection);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Connection_Set</span><span lang="EN-US"> property specifies a list of specific source element and
  destination element of a semantic connection by their array indices.    </span></p>
  <pre style="margin-left: 45.8pt; text-indent: -45.8pt;"><span lang="EN-US">Connection_Pair: <b>type record</b> ( </span></pre><pre style="margin-left: 45.8pt; text-indent: -45.8pt;"><span lang="EN-US">        src: <b>list of aadlinteger</b>; </span></pre><pre style="margin-left: 45.8pt; text-indent: -45.8pt;"><span lang="EN-US">        dst: <b>list of aadlinteger;</b>); </span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="OverflowHandlingProtocol"><span lang="EN-US">Overflow_Handling_Protocol: <b>enumeration </b>(DropOldest, DropNewest, Error)</span></a></pre><pre><span lang="EN-US">       =&gt;<b> </b>DropOldest </span></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (event port, event data port, subprogram access);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="OverflowHandlingProtocolDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Overflow_Handling_Protocol</span><span lang="EN-US"> property specifies the runtime behavior of a thread when an event
  arrives and the queue is full. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DropOldest</span><span lang="EN-US"> removes the oldest event
  from the queue and adds the new arrival. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DropNewest</span><span lang="EN-US"> ignores
  the newly arrived event. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Error</span><span lang="EN-US"> causes the thread’s error recovery to be invoked. The default
  value is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DropOldest</span><span lang="EN-US">.</span></p>
  <p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="QueueProcessingProtocol"><span lang="EN-US">Queue_Processing_Protocol: Supported_Queue_Processing_Protocols =&gt; FIFO </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (event port, event data port, subprogram access);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="QueueProcessingProtocolDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Processing_Protocol</span><span lang="EN-US"> property specifies the protocol for processing elements in the
  queue.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="QueueSize"><span lang="EN-US">Queue_Size: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Queue_Size =&gt; 1 </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (event port, event data port, subprogram access);</span></pre>
  <p class="MsoListContinue"><a name="QueueSizeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Size</span><span lang="EN-US"> property specifies the size of the queue for an event, event data
  port, of a subprogram access feature, and of a data component being shared
  via data access.  In the case of a subprogram access it represents the queue
  for remote subprogram calls.  In the case of a data component it represents
  the queue used in resource locking.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RequiredConnection"><span lang="EN-US">Required_Connection : <b>aadl</b><b>boolean</b> <b>=&gt;</b> <b>true</b>  </span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(feature);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Required_Connection</span><span lang="EN-US">
  property specifies whether the port or subprogram requires a connection.  If
  the value of this property is false, then it is assumed that the component
  can function without this port or subprogram access feature being connected.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default value is that a connection is required.</span></p>
  <pre><span class="CODE"><span lang="EN-US"> </span></span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Timing"><span lang="EN-US">Timing : <b>enumeration </b>(sampled, immediate, delayed) <b>=&gt;</b> sampled  </span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(port connection);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timing</span><span lang="EN-US"> property
  specifies the timing of port connections.  By default the interaction is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">sampled</span><span lang="EN-US">,
  i.e., the receiving component samples at dispatch or during execution.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="TransmissionType"><span class="CODE"><span lang="EN-US">Transmission_Type: </span></span><b><span lang="EN-US">enumeration</span></b><span lang="EN-US"> ( push, pull )</span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (data port, port connection, bus, virtual bus);</span></span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Transmission_Type</span><span lang="EN-US">
  property specifies whether the transmission across a data port connection is initiated
  by the sender (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">push</span><span lang="EN-US">) or by the receiver (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">pull</span><span lang="EN-US">).  By default the transmission is
  initiated by the sender. A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">pull</span><span lang="EN-US"> transmission type results in data being transmitted at the rate
  of the receiver.  In the case of event data port or event ports,  a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">pull</span><span lang="EN-US">
  transmission type results in events or event data queued with the sender to
  be transmitted upon receiver request.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">When associated with a connection
  the property represents the transmission type the connection expects.  When
  associated with a port the property represents the transmission type expected
  by the port.  When associated with a bus or virtual bus the property
  represents the transmission type that is provided by the bus or protocol.</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following communication properties specify input and output
characteristics of port based communication.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="InputRate"><span lang="EN-US">Input_Rate: Rate_Spec </span></a><span lang="EN-US">=&gt; ( Value_Range =&gt; 1.0 .. 1.0; Rate_Unit =&gt; PerDispatch; Rate_Distribution =&gt; Fixed; )</span><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Input_Rate</span><span lang="EN-US">
  property specifies the number of inputs per dispatch or per second of data,
  events, event data, or subprogram calls. If no </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Input_Rate </span><span lang="EN-US">is
  specified the default is one input per thread dispatch.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If no distribution function is specified it is assumed to be </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fixed</span><span lang="EN-US">.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="InputTime"><span lang="EN-US">Input_Time: <b>list of </b></span></a><span lang="EN-US">IO_Time_Spec =&gt; (( Time =&gt; Dispatch; Offset =&gt; 0.0 ns .. 0.0 ns;))</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Input_Time</span><span lang="EN-US">
  property specifies the amount of execution time that can pass after dispatch
  before the input is frozen on a given port.  The property value is a pair of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Time </span><span lang="EN-US">a time range </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Offset.</span><span lang="EN-US"> The default input time is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Dispatch </span><span lang="EN-US">with zero  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Offset. </span><span lang="EN-US">A typical property value is
  a time offset in terms of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Start.</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">IO_Time_Spec :
  <b>type record</b> (</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">       
  Offset : Time_Range;</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">        Time :
  IO_Reference_Time;</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> );</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> IO_Time_Spec</span><span lang="EN-US">
  property specifies the amount of execution time </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Offset</span><span lang="EN-US"> relative to a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Time </span><span lang="EN-US">at which input or output
  occurs. The value consists of a reference point and time range pair.</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">IO_Reference_Time :
  <b>type enumeration</b> (Dispatch, Start, Completion, Deadline, NoIO);</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">IO_Reference_Time </span><span lang="EN-US">property specifies the time reference point to be used for
  specifying when input or output is available.  The reference points are
  dispatch time (typically with zero time offset), start time (zero or more
  time), completion time (amount of execution time until completion), and
  deadline (typically with zero time offset). </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoIO</span><span lang="EN-US"> indicates that
  no I/O occurs.</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="OutputRate"><span lang="EN-US">Output_Rate: Rate_Spec </span></a><span lang="EN-US">=&gt; ( Value_Range =&gt; 1.0 .. 1.0; Rate_Unit =&gt; PerDispatch; Rate_Distribution =&gt; Fixed; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Output_Rate</span><span lang="EN-US">
  property specifies the number of outputs per dispatch or per second of data,
  events, event data, or initiations of subprogram calls.  The default is one
  output per thread dispatch and the default distribution is</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fixed</span><span lang="EN-US">.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="OutputTime"><span lang="EN-US">Output_Time: <b>list of </b></span></a><span lang="EN-US">IO_Time_Spec =&gt; (( Time =&gt; Completion; Offset =&gt; 0.0 ns .. 0.0 ns;))</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Output_Time</span><span lang="EN-US">
  property specifies the amount of execution time until completion at which
  output becomes available. The property value is a pair of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Time </span><span lang="EN-US">and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Offset.</span><span lang="EN-US"> The default </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Output_Time is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Completion </span><span lang="EN-US">with zero  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Offset. </span><span lang="EN-US">For data ports with a
  delayed connection the default output time is  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Deadline.</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Rate_Spec :
  <b>type record</b> (</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">        Value_Range :
  <b>range of aadlreal</b> <b>;</b></span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">        Rate_Unit
  <b>: enumeration</b> (PerSecond, PerDispatch);</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">        Rate_Distribution :
  Supported_Distributions;</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">);</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Rate_Spec</span><span lang="EN-US"> property
  specifies the number of input or output occurrences per </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Rate_Unit</span><span lang="EN-US">, i.e., per dispatch or per second. The default </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Rate_Distribution </span><span lang="EN-US">is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fixed</span><span lang="EN-US">.  </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SubprogramCallRate"><span lang="EN-US">Subprogram_Call_Rate: Rate_Spec </span></a><span lang="EN-US">=&gt; ( Value_Range =&gt; 1.0 .. 1.0; Rate_Unit =&gt; PerDispatch; Rate_Distribution =&gt; Fixed; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subprogram access);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Subprogram_Call_Rate</span><span lang="EN-US"> property specifies the number of subprogram calls per dispatch or
  per second.  The default is one call per thread dispatch and the default
  distribution is</span><span lang="EN-US"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fixed</span><span lang="EN-US">.</span></p>
  <p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following are communication timing related properties.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="TransmissionTime"><span lang="EN-US">Transmission_Time: <b>record</b> (</span></a></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (bus);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Transmission_Time</span><span lang="EN-US">
  property specifies the parameters for a linear model for the time interval
  between the start and end of a transmission of a sequence of </span><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;">N</span><span lang="EN-US"> bytes onto a bus.  The transmission time is the time between the
  transmission of the first bit of the message onto the bus and the
  transmission of the last bit of the message onto the bus.  This time excludes
  arbitration, queuing, or any other times that are a function of how bus
  contention and scheduling are performed for a bus. </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The associated expressions must
  evaluate to a record of two ranges of nonnegative numbers.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The time required to transmit a
  message of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">N</span><span lang="EN-US"> Bytes over the bus is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fixed + N * PerByte</span><span lang="EN-US">, where </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fixed</span><span lang="EN-US"> is
  any number that falls in the range of the Fixed record field  and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">PerByte</span><span lang="EN-US">
  is any number that falls in the range of the PerByte record field.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ActualLatency"><span lang="EN-US">Actual_Latency: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (flow, connection, bus, device, processor, port);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Actual_Latency
  </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">property specifies the actual
  latency </span></span><span lang="EN-US">as determined by the implementation of
  the end-to-end flow through semantic connections.  Its numeric value must be
  positive</span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">.  </span></span></p>
  <p align="left" class="MsoListContinue" style="text-align: left;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time_Range</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are
  ns (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).  </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="Latency"><span lang="EN-US">Latency: Time_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (flow, connection, bus, device, processor, port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Latency</span><span lang="EN-US"> property
  specifies the minimum and maximum amount of elapsed time allowed between the
  time the data or events enter the connection or flow and the time it exits. 
  Its numeric value must be positive.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">.  The standard units are ns
  (nanoseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">us</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (microseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">ms</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (milliseconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">sec</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (seconds), </span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; color: windowtext;">min</span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">
  (minutes) and hr (hours).</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<pre style="text-align: justify;"><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Communication_Properties;</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="appendix2"><a name="_Toc318320387"><span lang="EN-US">A.5<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Memory Properties</span></a><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Memory_Properties</span><span lang="EN-US">
defines properties related to memory as storage, memory and device access.</span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Memory_Properties <b>is </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="size"><span lang="EN-US">Size: <b>type</b> <b>aadl</b><b>integer</b> 0 Bytes .. Max_Memory_Size </span></a><b><span lang="EN-US">u</span></b><b><span lang="EN-US">nits</span></b><span lang="EN-US"> Size_Units;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="sizeDesc"><span lang="EN-US">Memory size as integers with predefined size
  units.</span></a></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="sizeRange"><span lang="EN-US">Size_Range: <b>type</b> <b>range</b> <b>of</b> Size;</span></a></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="sizeRangeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size_Range</span><span lang="EN-US"> property
  specifies a closed range of memory size values, i.e., a memory size range
  including the lower and upper bound.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">These properties record information related to memory and access of
data.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="AccessRight"><span lang="EN-US">Access_Right : Access_Rights =&gt; read_write  </span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(Data, Bus, Data Access, Bus Access);</span></pre>
  <p class="MsoListContinue" style="margin: 0cm 0cm 0.0001pt 40pt; text-indent: -4pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> property specifies the form of access that is permitted for a
  component.  If associated with a requires access clause it specifies the
  intended access to the component being accessed.  If associated with a
  provides access clause it specifies the type of access that is permitted to
  the component for which access is provided.  This access may be direct
  through read and write access or indirect through subprograms provided with
  the data type.  The provided access </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> must not exceed the
  access right specified for the component itself.  The required access </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Right</span><span lang="EN-US"> must not exceed the access right specified by the provides access
  or the component itself.</span></p>
  <pre style="text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Access_Rights : <b>type</b> <b>enumeration</b> (read_only, write_only, read_write, </span></pre><pre><span lang="EN-US">                                      by_method);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Access_Rights</span><span lang="EN-US"> property type specifies the literals used to indicate the form of
  access that is permitted for a component. </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="AccessTime"><span lang="EN-US">Access_Time: <b>record </b>(</span></a></pre><pre><span lang="EN-US">    First: <b> </b></span><span lang="EN-US">IO_Time_Spec ;</span></pre><pre><span lang="EN-US">    Last: IO_Time_Spec ; )</span></pre><pre><span lang="EN-US">    =&gt; ( First =&gt;(Time =&gt; Start; Offset =&gt; 0.0 ns .. 0.0 ns;);</span></pre><pre><span lang="EN-US">      Last =&gt; (Time =&gt; Completion; Offset =&gt; 0.0 ns .. 0.0 ns;); )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (data access);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Access_Time</span><span lang="EN-US">
  property specifies the range of execution time during which the data
  component is being accessed. </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="AllowedMessageSize"><span lang="EN-US">Allowed_Message_Size: Size_Range</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (bus);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Allowed_Message_Size</span><span lang="EN-US"> property specifies the allowed range of sizes for a block of data
  that can be transmitted by the bus hardware in a single transmission (in the
  absence of packetization).</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The expression defines the range of data message sizes, excluding
  any header or packetization overheads added due to bus protocols, that can be
  sent in a single transmission over a bus.  Messages whose sizes fall below
  this range will be padded. Messages whose sizes fall above this range must be
  broken into two or more separately transmitted packets.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="AssignTime"><span lang="EN-US">Assign_Time: <b>record</b> (</span></a></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (processor);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Assign_Time</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies a time unit value used in a linear estimation of the
  execution time required to move a block of bytes on a particular processor.
  The time required is </span><span lang="EN-US">(Number_of_Bytes * PerByte) +
  Fixed</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="BaseAddress"><span lang="EN-US">Base_Address: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Base_Address</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (memory, data, data access, port);</span></pre>
  <p class="MsoListContinue"><a name="BaseAddressDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Base_Address</span><span lang="EN-US"> property specifies the address of the first word in the memory. 
  The addresses used to access successive words of memory are </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Base_Address</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Base_Address</span><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;"> </span><span lang="EN-US">+ </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Word_Space</span><span lang="EN-US">, …</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Base_Address</span><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;"> </span><span lang="EN-US">+ (</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Word_Count</span><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;">-1) </span><span lang="EN-US">* </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Word_Space</span><span lang="EN-US">.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">In the case of a memory
  component it indicates what its starting address is.  In the case of a data
  component, data access, or port it indicates what its starting address is in
  the memory it is bound to.  </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><b><span lang="EN-US"> </span></b></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeviceRegisterAddress"><span lang="EN-US">Device_Register_Address: <b>aadlinteger</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (port, feature group);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Device_</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Register_Address</span><span lang="EN-US"> property specifies the address of a device register that is
  represented by a port associated with a device.  This property is optional. 
  Device ports may be represented by a source text variable as part of the
  device driver software.</span></p>
  <pre><tt><span lang="EN-US"> </span></tt></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ReadTime"><span lang="EN-US">Read_Time: <b>record</b> (</span></a></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (memory);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Read_Time</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies a time unit value used in a linear estimation of the
  execution time required to read a block of bytes from memory. The time
  required is </span><span lang="EN-US">(Number_of_Bytes * PerByte) + Fixed</span></span></p>
  <pre><tt><span lang="EN-US"> </span></tt></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SourceCodeSize"><span class="CODE"><span lang="EN-US">Source_Code_Size: Size</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies</b> <b>to</b> (data, thread, thread group, process, system, subprogram, processor, device);</span></span></pre>
  <p class="MsoListContinue"><a name="SourceCodeSizeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Code_Size</span><span lang="EN-US"> property specifies the size of the static code and read-only data
  that results when the associated source text is compiled, linked, bound and
  loaded in the final system.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US">.  The standard units are bits, Bytes
  (bytes), KByte (kilobytes), MByte (megabytes) and GByte (gigabytes).  </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span class="CODE"><span lang="EN-US"> </span></span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SourceDataSize"><span class="CODE"><span lang="EN-US">Source_Data_Size: Size</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies</b> <b>to</b> (data, subprogram, thread, thread group, process, system, processor, device);</span></span></pre>
  <p class="MsoListContinue"><a name="SourceDataSizeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Data_Size</span><span lang="EN-US"> property specifies the size of the readable and writeable data
  that results when the associated source text is compiled, linked, bound and
  loaded in the final system.  In the case of data types, it specifies the
  maximum size required to hold a value of an instance of the data type.<i> </i></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US">.  The standard units are bits, Bytes
  (bytes), KByte (kilobytes), MByte (megabytes) and GByte (gigabytes). </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span class="CODE"><b><span lang="EN-US"> </span></b></span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SourceHeapSize"><span lang="EN-US">Source_Heap_Size: Size </span></a></pre><pre><span lang="EN-US">   <b>applies to </b>(thread, subprogram);</span></pre>
  <p class="MsoListContinue"><a name="SourceHeapSizeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Heap_Size</span><span lang="EN-US"> property specifies the minimum and maximum heap size requirements
  of a thread or subprogram.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US">.  The standard units are bits, Bytes
  (bytes), KByte (kilobytes), MByte (megabytes) and GByte (gigabytes). </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SourceStackSize"><span class="CODE"><span lang="EN-US">Source_Stack_Size: Size</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, subprogram, processor,</span></span><span lang="EN-US"> device</span><span class="CODE"><span lang="EN-US">);</span></span></pre>
  <p class="MsoListContinue"><a name="SourceStackSizeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Stack_Size</span><span lang="EN-US"> property specifies the maximum size of the stack used by a
  processor executive, a device driver, a thread or a subprogram during
  execution.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US">.  The standard units are bits, Bytes
  (bytes), KByte (kilobytes), MByte (megabytes) and GByte (gigabytes). </span></p>
  <pre style="text-indent: 36pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="WordCount"><span lang="EN-US">Byte_Count: <b>aadl</b><b>integer </b>0 <b>.. </b>Max_Byte_Count</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (memory);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="WordCountDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Byte_Count</span><span lang="EN-US"> property
  specifies the number of bytes in the memory.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="WordSize"><span lang="EN-US">Word_Size: Size <b>=&gt; </b>8<b> </b>bits<b> </b></span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (memory);</span></pre>
  <p class="MsoListContinue"><a name="WordSizeDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Word_Size</span><span lang="EN-US"> property specifies the size of the smallest independently
  readable and writeable unit of storage in the memory. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property type is </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US">.  The standard units are bits, Bytes
  (bytes), KByte (kilobyte), MByte (megabyte) and GByte (gigabyte). </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="WordSpace"><span lang="EN-US">Word_Space: <b>aadl</b><b>integer </b>1 <b>.. </b>Max_Word_Space <b>=&gt; </b>1 </span></a></pre><pre style="text-align: justify;"><b><span lang="EN-US">   applies</span></b><span lang="EN-US"> <b>to</b> (memory);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><a name="WordSpaceDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Word_Space</span><span lang="EN-US">
  specifies the interval between successive addresses used for successive words
  of memory.  A value greater than 1 means the addresses used to access words
  are not contiguous integers.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default value is 1.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="WriteTime"><span lang="EN-US">Write_Time: <b>record</b> (</span></a></pre><pre><span lang="EN-US">    Fixed: Time_Range;</span></pre><pre><span lang="EN-US">    PerByte: Time_Range; )</span></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (memory);</span></pre>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">The </span><span lang="EN-US">Write_Time</span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">
  property specifies a time unit value used in a linear estimation of the
  execution time required to write a block of bytes to memory. The time
  required is </span><span lang="EN-US">(Number_of_Bytes * PerByte) + Fixed</span></span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;"> </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<pre style="text-align: justify;"><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Memory_Properties;</span></pre><pre style="text-align: justify;"><span lang="EN-US"> </span></pre>

<p class="appendix2"><a name="_Toc318320388"><span lang="EN-US">A.6<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Programming Properties</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Programming_Properties </span><span lang="EN-US">contains properties that record information related to the
implementation of application components and hardware components in an
implementation language.  </span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Programming_Properties <b>is     </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre><a name="ActivateHandler"><span lang="FR">Activate_Entrypoint: <b>classifier </b>( subprogram classifier )</span></a></pre><pre style="text-align: justify;"><span lang="FR">   </span><b><span lang="EN-US">applies</span></b><span lang="EN-US"> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Activate_Entrypoint </span><span lang="EN-US">property specifies the name of a subprogram classifier.  This
  classifier represents a subprogram in the source text that will execute when
  a thread or device are activated as part of a mode switch.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The subprogram in the source text
  must be visible in and callable from the outermost program scope, as defined
  by the scope and visibility rules of the applicable implementation language. 
  The source language annex of this standard defines acceptable parameter and
  result signatures for the entry point subprogram.</span></p>
  <p class="MsoListContinue"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ActivateHandlerCallSequence"><span lang="EN-US">Activate_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Activate_Entrypoint_Call_Sequence </span><span lang="EN-US">property specifies
  the name of a subprogram call sequence.  This call sequence will execute
  after a thread has been dispatched.  If the property is specified for a
  provided subprogram, event port, or event data port feature, then this
  entrypoint is chosen when the corresponding call, event, or event data
  arrives instead of the compute entrypoint specified for the containing
  thread.</span></p>
  <p class="MsoListContinue" style="margin: 0cm 0cm 0.0001pt 40pt; text-indent: -4pt;"><span lang="EN-US">The named call sequence must exist in the source text as
  parameterless function, which performs the calls and passes the appropriate
  port and parameter values as actual parameters.  This function may be
  generated from AADL. This function must be visible in and callable from the
  outermost program scope, as defined by the scope and visibility rules of the
  applicable implementation language.  The source language annex of this
  standard defines acceptable parameter and result signatures for the entry
  point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ActivateEntrypointSourceText"><span lang="EN-US">Activate_Entrypoint_Source_Text: <b>aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><a name="ActivateHandlerDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Activate_Entrypoint</span><span lang="EN-US">_Source_Text</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US">property specifies the name of a source text code sequence that
  will execute when a thread is activated.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named code sequence in the source text must be visible in and
  callable from the outermost program scope, as defined by the scope and
  visibility rules of the applicable source language.  The source language
  annex of this standard defines acceptable parameter and result signatures for
  the entrypoint subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ComputeEntrypoint"></a><a name="ComputeHandler"><span lang="FR">Compute_Entrypoint: <b>classifier </b>( subprogram classifier )</span></a></pre><pre style="text-align: justify;"><span lang="FR">   </span><b><span lang="EN-US">applies</span></b><span lang="EN-US"> <b>to</b> (thread, device, provides subprogram access, event port, event data port);</span></pre>
  <p class="MsoListContinue"><a name="ComputeHandlerDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Compute_Entrypoint </span><span lang="EN-US">property specifies the name of a
  subprogram classifier.  This classifier represents a subprogram in the source
  text that will execute after a thread has been dispatched.  If the property
  is specified for a provided subprogram, event port, or event data port
  feature, then this entrypoint is chosen when the corresponding call, event,
  or event data arrives instead of the compute entrypoint specified for the
  containing thread.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The subprogram in the source text must be visible in and callable
  from the outermost program scope, as defined by the scope and visibility
  rules of the applicable implementation language.  The source language annex
  of this standard defines acceptable parameter and result signatures for the
  entry point subprogram.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ComputeEntrypointCallSequence"><span lang="EN-US">Compute_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device, provides subprogram access, event port, event data port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Compute_Entrypoint_Call_Sequence </span><span lang="EN-US">property specifies
  the name of a subprogram call sequence.  This call sequence will execute
  after a thread has been dispatched.  If the property is specified for a
  provided subprogram, event port, or event data port feature, then this
  entrypoint is chosen when the corresponding call, event, or event data
  arrives instead of the compute entrypoint specified for the containing
  thread.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named call sequence must exist in the source text as
  parameterless function, which performs the calls and passes the appropriate
  port and parameter values as actual parameters.  This function may be
  generated from AADL. This function must be visible in and callable from the
  outermost program scope, as defined by the scope and visibility rules of the
  applicable implementation language.  The source language annex of this
  standard defines acceptable parameter and result signatures for the entry
  point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ComputeEntrypointSourceText"><span lang="EN-US">Compute_Entrypoint_Source_Text: <b>aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device, provides subprogram access, event port, event data port);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Compute_Entrypoint</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">_Source_Text</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US">property specifies the name of a source text code sequence that
  will execute after a thread has been dispatched.  If the property is
  specified for a provided subprogram, event port, or event data port feature,
  then this entrypoint is chosen when the corresponding call, event, or event
  data arrives instead of the compute entrypoint specified for the containing
  thread.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named code sequence in the source text must be visible in and
  callable from the outermost program scope, as defined by the scope and
  visibility rules of the applicable implementation language.  The source
  language annex of this standard defines acceptable parameter and result
  signatures for the entry point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeactivateHandler"><span lang="EN-US">Deactivate_Entrypoint: <b>classifier </b>( subprogram classifier )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Deactivate_Entrypoint </span><span lang="EN-US">property specifies the name of a subprogram classifier.  This
  classifier represents a subprogram in the source text that will execute when
  a thread is deactivated as part of a mode switch.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The subprogram in the source text must be visible in and callable
  from the outermost program scope, as defined by the scope and visibility
  rules of the applicable implementation language.  The source language annex
  of this standard defines acceptable parameter and result signatures for the
  entry point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeactivateHandlerCallSequence"><span lang="EN-US">Deactivate_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Deactivate_Entrypoint_Call_Sequence </span><span lang="EN-US">property
  specifies the name of a subprogram call sequence.  This call sequence will
  execute when a thread is deactivated as part of a mode switch.  </span></p>
  <p class="MsoListContinue" style="margin: 0cm 0cm 0.0001pt 40pt; text-indent: -4pt;"><span lang="EN-US">The named call sequence must exist in the source text as
  parameterless function, which performs the calls and passes the appropriate
  port and parameter values as actual parameters.  This function may be
  generated from AADL. This function must be visible in and callable from the
  outermost program scope, as defined by the scope and visibility rules of the
  applicable implementation language.  The source language annex of this
  standard defines acceptable parameter and result signatures for the entry
  point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="DeactivateEntrypointSourceText"><span lang="EN-US">Deactivate_Entrypoint_Source_Text: <b>aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread);</span></pre>
  <p class="MsoListContinue"><a name="DeactivateHandlerDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Deactivate_Entrypoint_Source_Text </span><span lang="EN-US">property specifies
  the name of a source text code sequence that will execute when a thread is
  deactivated.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named code sequence in the source text must be visible in and
  callable from the outermost program scope, as defined by the scope and
  visibility rules of the applicable implementation language.  The source
  language annex of this standard defines acceptable parameter and result
  signatures for the entry point subprogram.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="FinalizeHandler"><span lang="EN-US">Finalize_Entrypoint: <b>classifier </b>( subprogram classifier )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Finalize_Entrypoint </span><span lang="EN-US">property specifies the name of a subprogram classifier.  This
  classifier represents a subprogram in the source text that will execute when
  a thread is finalized.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The subprogram in the source text must be visible in and callable
  from the outermost program scope, as defined by the scope and visibility
  rules of the applicable implementation language.  The source language annex
  of this standard defines acceptable parameter and result signatures for the
  entry point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="FinalizeHandlerCallSequence"><span lang="EN-US">Finalize_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Finalize</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Entrypoint_Call_Sequence </span><span lang="EN-US">property specifies the name of a subprogram call sequence.  This
  call sequence will execute when a thread is finalized.  </span></p>
  <p class="MsoListContinue" style="margin: 0cm 0cm 0.0001pt 40pt; text-indent: -4pt;"><span lang="EN-US">The named call sequence must exist in the source text as
  parameterless function, which performs the calls and passes the appropriate
  port and parameter values as actual parameters.  This function may be
  generated from AADL. This function must be visible in and callable from the
  outermost program scope, as defined by the scope and visibility rules of the
  applicable implementation language.  The source language annex of this
  standard defines acceptable parameter and result signatures for the entry
  point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="FinalizeHandlerSourceText"><span lang="EN-US">Finalize_Entrypoint_Source_Text: <b>aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><a name="FinalizeHandlerDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Finalize_Entrypoint_Source_Text </span><span lang="EN-US">property specifies
  the name of a source text code sequence that will execute when a thread is
  finalized.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named code sequence in the source text must be visible in and
  callable from the outermost program scope, as defined by the scope and
  visibility rules of the applicable implementation language.  The source
  language annex of this standard defines acceptable parameter and result
  signatures for the entrypoint subprogram.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: center;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="InitializeHandler"><span lang="EN-US">Initialize_Entrypoint: <b>classifier </b>( subprogram classifier )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Initialize</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Entrypoint </span><span lang="EN-US">property specifies the name of a subprogram classifier.  This
  classifier represents a subprogram in the source text that will execute when
  a thread is initialized.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The subprogram in the source text must be visible in and callable
  from the outermost program scope, as defined by the scope and visibility
  rules of the applicable implementation language.  The source language annex
  of this standard defines acceptable parameter and result signatures for the
  entry point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="InitializeHandlerCallSequence"><span lang="EN-US">Initialize_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Initialize</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Entrypoint_Call_Sequence </span><span lang="EN-US">property specifies the name of a subprogram call sequence.  This
  call sequence will execute when a thread is initialized.  </span></p>
  <p class="MsoListContinue" style="margin: 0cm 0cm 0.0001pt 40pt; text-indent: -4pt;"><span lang="EN-US">The named call sequence must exist in the source text as
  parameterless function, which performs the calls and passes the appropriate
  port and parameter values as actual parameters.  This function may be
  generated from AADL. This function must be visible in and callable from the
  outermost program scope, as defined by the scope and visibility rules of the
  applicable implementation language.  The source language annex of this
  standard defines acceptable parameter and result signatures for the entry
  point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="InitializeHandlerSourceText"><span lang="EN-US">Initialize_Entrypoint_Source_Text: <b>aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><a name="InitializeHandlerDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Initialize_Entrypoint_Source_Text </span><span lang="EN-US">property specifies
  the name of a source text code sequence that will execute when a thread is to
  be initialized.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named code sequence in the source text must be visible in and
  callable from the outermost program scope, as defined by the scope and
  visibility rules of the applicable implementation language.  The source
  language annex of this standard defines acceptable parameter and result
  signatures for the entrypoint subprogram.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RecoveryHandler"><span lang="EN-US">Recover_Entrypoint: <b>classifier </b>( subprogram classifier )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> Recover_Entrypoint </span><span lang="EN-US">property specifies the name of a subprogram classifier.  This
  classifier represents a subprogram in the source text that will execute when
  a thread is in recovery.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The subprogram in the source text must be visible in and callable
  from the outermost program scope, as defined by the scope and visibility
  rules of the applicable implementation language.  The source language annex
  of this standard defines acceptable parameter and result signatures for the
  entry point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="RecoveryHandlerCallSequence"><span lang="EN-US">Recover_Entrypoint_Call_Sequence: <b>reference </b>( subprogram call sequence )</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;"> </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Recover</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Entrypoint_Call_Sequence </span><span lang="EN-US">property specifies the name of a subprogram call sequence.  This
  call sequence will execute when a thread is in recovery.  </span></p>
  <p class="MsoListContinue" style="margin: 0cm 0cm 0.0001pt 40pt; text-indent: -4pt;"><span lang="EN-US">The named call sequence must exist in the source text as
  parameterless function, which performs the calls and passes the appropriate
  port and parameter values as actual parameters.  This function may be
  generated from AADL. This function must be visible in and callable from the
  outermost program scope, as defined by the scope and visibility rules of the
  applicable implementation language.  The source language annex of this
  standard defines acceptable parameter and result signatures for the entry
  point subprogram.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><span lang="EN-US" style="font-size: 10pt; font-family: &quot;Courier New&quot;;"><br clear="all" style="page-break-before: always;" />
  </span><pre><a name="RecoveryHandlerSourceText"><span lang="EN-US">Recover_Entrypoint_Source_Text: <b>aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (thread, device);</span></pre>
  <p class="MsoListContinue"><a name="RecoveryHandlerDesc"><span lang="EN-US">The</span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">
  Recovery_Entrypoint_Source_Text </span><span lang="EN-US">property specifies
  the name of a source text code sequence that will execute when a thread is
  recovering from a fault.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The named code sequence in the source text must be visible in and
  callable from the outermost program scope, as defined by the scope and
  visibility rules of the applicable implementation language.  The source
  language annex of this standard defines acceptable parameter and result
  signatures for the entrypoint subprogram.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify; text-indent: 36pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SourceLanguage"><span class="CODE"><span lang="EN-US">Source_Language: <b>inherit list of </b>Supported_Source_Languages </span></span></a></pre><pre style="margin-bottom: 0.0001pt;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (subprogram, data, thread, thread group, process, system,</span></span></pre><pre><span class="CODE"><span lang="EN-US">               bus, device, processor, virtual bus, virtual processor</span><span lang="EN-US">);</span></span></pre>
  <p class="MsoListContinue"><a name="SourceLanguageDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Language</span><span lang="EN-US"> property specifies an applicable programming language. </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The property type is enumeration. 
  The standard enumeration literals are </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Ada, C</span><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;">, </span><span lang="EN-US">and
  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Simulink<sup>®</sup></span><span lang="EN-US" style="font-family: &quot;Century Gothic&quot;,&quot;sans-serif&quot;;"> </span><span lang="EN-US">for software categories.  Other enumeration literals are
  permitted.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">There is no default value for the
  source language property.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">Where a source language is specified
  for a component, the source text associated with that component must comply
  with the applicable programming language standard.  Where a source language
  is not specified, a method of processing may infer a source language from the
  syntax of the source text pathname.  A method of processing may establish a
  default value for the source language property.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">Where a source language property is
  specified for a component, any specified source language and any specified
  source text for the complete set of software subcomponents of that component
  must comply with the applicable language standard.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">Multiple source languages, and
  source text written in those languages, are compliant with a specified source
  language if the applicable language standard permits mixing source text units
  of those languages within the same program.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">A method of processing may accept
  data produced by processing a source text file, for example an object file
  produced by compiling source text may be considered compliant with the
  applicable language standard.  A method of processing may accept non-standard
  source languages.  A method of processing may restrict itself to specific
  source languages, either standard or non-standard.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The source language associated with processor or virtual processor
  indicates the source language of any software that implements virtual
  processor or processor functionality.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SourceName"><span class="CODE"><span lang="EN-US">Source_Name: </span></span><b><span lang="EN-US">aadl</span></b><span class="CODE"><b><span lang="EN-US">string</span></b></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (data, port, subprogram, parameter, virtual bus, virtual processor);</span></span></pre>
  <p class="MsoListContinue"><a name="SourceNameDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Name</span><span lang="EN-US"> property specifies a source declaration or source name within the
  associated source text that corresponds to a feature defining identifier.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default value is defined in the source language annex of this
  standard.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="page-break-after: avoid;"><a name="SourceText"><span lang="EN-US">Source_Text: <b>inherit</b><b> list of aadlstring</b></span></a></pre><pre style="margin-bottom: 0.0001pt; text-align: justify; page-break-after: avoid;"><span lang="EN-US">   <b>applies to </b>(data, port, subprogram, thread, thread group, process, system, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify; page-break-after: avoid;"><span lang="EN-US">      virtual bus, virtual processor, memory, bus, device, processor, parameter, feature group, package</span><span lang="EN-US">);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Source_Text</span><span lang="EN-US">
  property specifies a list of files that contain source text.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">Each string is interpreted as a
  POSIX pathname and must satisfy the syntax and semantics for path names as
  defined in the POSIX standard.  Extensions to the standard POSIX pathname
  syntax and semantics are permitted.  For example, environment variables and
  regular expressions are permitted.  Special characters may be used to assist
  in configuration management and version control.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">If the first character of a
  pathname is <b>.</b> (dot) then the path is relative to the directory in
  which the file containing the AADL specification text is stored.  Otherwise,
  the method of processing may define the default directory used to locate the
  file designated by a pathname.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">There is no standard default value
  for the source text property.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">The combined source text contained
  in all files named in the associated expression must form one or more
  separately compileable units as defined in the applicable source language
  standard.</span></p>
  <pre><span class="CODE"><span lang="EN-US"> </span></span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SupportedSourceLanguage"><span class="CODE"><span lang="EN-US">Supported_Source_Language: <b>list</b> <b>of</b> Supported_Source_Languages</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (processor, virtual processor, system);</span></span></pre>
  <p class="MsoListContinue"><a name="SupportedSourceLanguageDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Source_Language</span><span lang="EN-US"> property specifies the source language(s) supported by a
  processor.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">The source language of every
  software component that may be accessed by any thread bound to a processor
  must appear in the list of allowed source languages for that processor.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If an allowed source language list is not specified, then there
  are no restrictions on the source. </span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="TypeSourceName"><span class="CODE"><span lang="EN-US">Type_Source_Name: </span></span><b><span lang="EN-US">aadl</span></b><span class="CODE"><b><span lang="EN-US">string</span></b></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (data, port, subprogram);</span></span></pre>
  <p class="MsoListContinue"><a name="TypeSourceNameDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Type_Source_Name</span><span lang="EN-US"> property specifies a source declaration or source name within the
  associated source text that corresponds to a feature defining identifier.  </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The default value is defined in the source language annex of this
  standard.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="HardwareDescriptionSourceText"><span lang="EN-US">Hardware_Description_Source_Text: <b>inherit</b> <b>list of aadlstring</b></span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies to </b>(memory, bus, device, processor, system);</span></pre>
  <p class="MsoListContinue"><a name="HardwareDescriptionSourceTextDesc"><span lang="EN-US">The </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Hardware_Description_Source_Text</span><span lang="EN-US"> property specifies a list of files that contain source text of a
  hardware description in a hardware description language.  </span></p>
  <p class="MsoListContinue" style="page-break-after: avoid;"><span lang="EN-US">Each
  string is interpreted as a POSIX pathname and must satisfy the syntax and
  semantics for path names as defined in the POSIX standard. Extensions to the
  standard POSIX pathname syntax and semantics are permitted.  For example, environment
  variables and regular expressions are permitted.  Special characters may be
  used to assist in configuration management and version control.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">If the first character of a pathname is <b>.</b> (dot) then the
  path is relative to the directory in which the file containing the AADL
  specification text is stored.  Otherwise, the method of processing may define
  the default directory used to locate the file designated by a pathname.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span class="CODE"><span lang="EN-US"> </span></span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="HardwareSourceLanguage"><span class="CODE"><span lang="EN-US">Hardware_Source_Language: Supported_Hardware_Source_Languages<b> </b></span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (memory, bus, device, processor, system);</span></span></pre>
  <p class="MsoListContinue"><a name="HardwareSourceLanguageDesc"><span lang="EN-US">The
  </span></a><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Hardware_Source_Language</span><span lang="EN-US"> property specifies an applicable hardware description language. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The hardware description source text associated with a hardware
  component is written in a hardware description language.  </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><span class="CODE"><span lang="EN-US">Device_Driver: <b>classifier</b> (abstract implementation)<b> </b></span></span></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (device);</span></span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Device_Driver</span><span lang="EN-US">
  property specifies a reference to an abstract component implementation that
  contains an instance of a driver subprogram or an instance of an (ISR)
  thread.. </span></p>
  <pre><span class="CODE"><span lang="EN-US"> </span></span></pre></td>
 </tr>
</tbody></table>

</div>

<pre style="text-align: justify;"><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Programming_Properties;</span></pre>

<p class="appendix2"><a name="_Toc318320389"><span lang="EN-US">A.7<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Modeling Properties</span></a><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The predeclared property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Modeling_Properties</span><span lang="EN-US">
defines properties related to the AADL model itself.</span></p>

<pre style="margin-bottom: 12pt; text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> Modeling_Properties <b>is   </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr style="height: 96.25pt;">
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt; height: 96.25pt;"><pre><a name="AcceptableArraySize"><span lang="EN-US">Acceptable_Array_Size: <b>list of </b>Size_Range </span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (subcomponent, feature);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Acceptable_Array_Size</span><span lang="EN-US"> property specifies acceptable values for the array size in each
  dimension.  This property can be used to impose a constraint on the array
  dimension size if it has not been specified to be refined separately.</span></p>
  <pre><span lang="EN-US">Size_Range: <b>type range of aadlinteger </b>;</span></pre><pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 96.25pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 96.25pt;"><pre><a name="ClassifierMatchingRule"><span lang="EN-US">Classifier_Matching_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Equivalence, Subset, Conversion, Complement)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (connection, component implementation);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Matching_Rule</span><span lang="EN-US"> property specifies acceptable matches of classifiers between the
  source and the destination of a connection. The semantics of each of the
  rules are defined in sections </span><span lang="EN-US">9.1</span><span lang="EN-US"> and </span><span lang="EN-US">9.5</span><span lang="EN-US">.</span></p>
  <p class="MsoNormal"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ClassifierSubstitutionRule"><span lang="EN-US">Classifier_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match,  Type_Extension, Signature_Match)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (classifier, subcomponent);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Classifier_Substitution_Rule</span><span lang="EN-US"> property specifies acceptable substitutions of classifiers in a <b>refined
  to</b> declaration.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="ImplementedAs"><span class="CODE"><span lang="EN-US">Implemented_As: <b>classifier </b>( system implementation )</span></span></a></pre><pre style="text-align: justify;"><span class="CODE"><span lang="EN-US">   <b>applies to</b> (memory, bus, virtual bus, device, virtual processor, processor, system);</span></span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span class="CODE"><span lang="EN-US">Implemented_As</span></span><span lang="EN-US"> property specifies a system implementation that describes how the
  internals of a execution platform component are realized.  This allows
  systems to be modeled as a layered architecture using the execution platform
  as a layering abstraction (see Section </span><span lang="EN-US">14</span><span lang="EN-US">).</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="PropagationDelay"></a><a name="PrototypeMatchingRule"><span lang="EN-US">Prototype_Substitution_Rule: <b>inherit</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match)</span></a></pre><pre style="text-align: justify;"><span lang="EN-US">   <b>applies</b> <b>to</b> (prototype, classifier);</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Prototype_Substitution_Rule</span><span lang="EN-US"> property specifies acceptable classifiers supplied as actual in a
  prototype binding.</span></p>
  <pre><span lang="EN-US"> </span></pre></td>
 </tr>
</tbody></table>

</div>

<pre style="text-align: justify;"><span lang="EN-US"> </span></pre><pre style="text-align: justify;"><b><span lang="EN-US">end</span></b><span lang="EN-US"> Modeling_Properties;</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="appendix2"><a name="_Ref178061999"></a><a name="_Toc318320390"><span lang="EN-US">A.8<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">Project-Specific Property Set</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">There is a set of enumeration property types and property constants
for which enumeration literals and property constant values can be defined for
different systems modeled in AADL. This set of property types is declared in a
property set named </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US">. All of the property enumeration types listed in this section must
be declared in this property set. The set of enumeration literals may vary. 
This property set  is a part of every AADL specification.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The set of values for the property types in this property set are to
be provided by tool suppliers for the AADL and can be tailored by AADL users on
a project by project basis to reflect those capabilities provided by tool
suppliers that are actually being made use of in a particular project.</span></p>

<p class="MsoNoteHeading"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">The label </span><span lang="EN-US">&lt;project-specified&gt;
</span><span lang="EN-US">indicates that actual values are to be supplied by the
person providing a project-specific property set.  The actual values do not
include the &lt; and &gt; symbols.</span></p>

<pre style="text-align: justify;"><b><span lang="EN-US">Property</span></b><span lang="EN-US"> <b>set</b> AADL_Project <b>is   </b></span></pre>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Supported_Active_Thread_Handling_Protocols:<b> type enumeration</b> </span></pre><pre><span lang="EN-US">                                               (abort, <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">-- The following are other example protocols.</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">-- (suspend, complete_one, complete_all);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span class="HTMLPreformattedChar4"><span lang="EN-US">Supported_Active_Thread_Handling_</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Protocols</span><span lang="EN-US"> property enumeration type specifies the set of possible actions
  that can be taken to handle threads that are in the state of performing
  computation at the time instant of actual mode switch. </span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Supported_Connection_Patterns:<b> type enumeration</b> ( One_To_One, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  All_To_All,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  One_To_All,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  All_To_One,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  Next,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  Previous,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  Cyclic_Next,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                                  Cyclic_Previous );</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="HTMLPreformattedChar4"><span lang="EN-US">Supported_Connection_</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">Patterns</span><span lang="EN-US"> property enumeration type specifies the set of patterns that are
  supported to connect together a source component array and a destination component
  array. </span></p>
  <p class="MsoListContinue"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One_To_One</span><span lang="EN-US"> represents the case when each item of the source component array
  is connected to the corresponding item of the destination component array.
  This property can only be used if the source and the destination component arrays
  of the connection have the same dimension and same dimension size.</span></p>
  <p class="MsoListContinue"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">All_To_All</span><span lang="EN-US"> represents the case when each item of the source component array
  is connected to each item of the destination component array. </span></p>
  <p class="MsoListContinue"><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Previous</span><span lang="EN-US">
  value indicates that elements of the ultimate source array dimension are
  connected to the next (previous) element in the ultimate destination array
  dimension without wrapping between the first and last.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Cyclic_Next</span><span lang="EN-US"> or </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Cyclic_Previous</span><span lang="EN-US"> value indicates that elements of the ultimate source array
  dimension are connected to the next (previous) element in the ultimate
  destination array dimension.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">One_to_All </span><span lang="EN-US">value
  indicates that a single element of the ultimate source has a semantic
  connection to each element in the ultimate destination.  </span></p>
  <p class="MsoListContinue"><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">All_to_One</span><span lang="EN-US"> value
  indicates that each array element of the ultimate source has a semantic
  connection to a single element in the ultimate destination.  </span></p>
  <pre style="text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Supported_Concurrency_Control_Protocols: <b>type</b> <b>enumeration</b> (None_Specified, Interrupt_Masking, Maximum_Priority, Priority_Inheritance,</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">--  Priority_Ceiling, Spin_Lock, Semaphore,  <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- The following are example concurrency control protocols:</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">-- (Interrupt_Masking, Maximum_Priority, Priority_Inheritance,</span></pre><pre><span lang="EN-US">--  Priority_Ceiling, Spin_Lock, Semaphore)</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span class="HTMLPreformattedChar4"><span lang="EN-US">Supported_Concurrency_Control_Protocols</span></span><span lang="EN-US"> property enumeration type specifies the set of concurrency
  control protocols that are supported. </span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Supported_Dispatch_Protocols:<b> type enumeration</b> (Periodic, Sporadic, Aperiodic, Timed, Hybrid, Background, <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- The following are protocols for which the semantics are defined:</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- (Periodic, Sporadic, Aperiodic, Timed, Hybrid, Background);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="HTMLPreformattedChar4"><span lang="EN-US">Supported_Dispatch</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Protocols</span><span lang="EN-US"> property enumeration type specifies the set of thread dispatch
  protocols that are supported. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Periodic</span><span lang="EN-US">
  represents periodic dispatch of threads with deadlines. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Sporadic</span><span lang="EN-US">
  represents event-triggered dispatching of threads with soft deadlines. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Aperiodic</span><span lang="EN-US"> represents event-triggered dispatch of threads with hard
  deadlines. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timed</span><span lang="EN-US"> represents threads that are dispatched after a given time unless
  they are dispatched by arrival of an event or event data. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Hybrid</span><span lang="EN-US">
  represents threads that are dispatched by both an event or event data arrival
  and periodically. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Background</span><span lang="EN-US"> represents threads that are dispatched once and execute until
  completion.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Period</span><span lang="EN-US"> is required for </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Periodic</span><span lang="EN-US">, </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Timed</span><span lang="EN-US">, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Hybrid</span><span lang="EN-US"> threads.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="SupportedQueueProcessingProtocols"><span lang="EN-US">Supported_Queue_Processing_Protocols:<b> type enumeration</b> (Fifo, </span></a></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">                                                <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span class="HTMLPreformattedChar4"><span lang="EN-US">Supported_Queue_Processing</span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;; color: windowtext;">_Protocols</span><span lang="EN-US"> property enumeration type specifies the set of queue processing
  protocols that are supported. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Fifo</span><span lang="EN-US">
  represents first-in first-out processing of queues. Other prototcols are
  project specific.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Supported_Hardware_Source_Languages: <b>type enumeration</b> (VHDL, <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- The following is an example hardware description language:</span></pre><pre><span lang="EN-US">-- (VHDL)</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Hardware_Source_Languages</span><span lang="EN-US"> property enumeration type specifies the set of hardware
  description languages that are supported.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre><a name="SupportedConnectionQos"><span lang="EN-US">Supported_Connection_QoS : <b>type</b> <b>enumeration </b>(GuaranteedDelivery, OrderedDelivery, SecureDelivery, &lt;project specific&gt;);</span></a></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Connection_QoS</span><span lang="EN-US"> property specifies the quality of services.</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Supported_Scheduling_Protocols: <b>type</b> <b>enumeration</b> (FixedTimeline, Cooperative, RMS, EDF, SporadicServer, SlackServer, ARINC653, <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- The following are examples of scheduling protocols:</span></pre><pre><span lang="EN-US">-- (FixedTimeline, Cooperative, RMS, EDF, SporadicServer, SlackServer, ARINC653)</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Scheduling_Protocols</span><span lang="EN-US"> property enumeration type specifies the set of scheduling
  protocols that are supported.</span></p>
  <p class="MsoListContinue"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Scheduling protocols that can be
  provided by implementers include: </span></span></p>
  <p class="MsoListContinue" style="margin-left: 89.3pt; text-indent: -18pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: Symbol; color: windowtext;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">None (single thread).</span></span></p>
  <p class="MsoListContinue" style="margin-left: 89.3pt; text-indent: -18pt;"><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: Symbol; color: windowtext;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Interrupt-driven (handling of
  interrupt service routines (ISR)).</span></span></p>
  <p class="MsoListContinue" style="margin-left: 89.3pt; text-indent: -18pt;"><span lang="EN-US" style="font-family: Symbol; color: windowtext;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">For</span></span><span lang="EN-US"> periodic task sets: fixed timeline, cooperative (cyclic
  executive), deadline monotonic, least laxity.</span></p>
  <p class="MsoListContinue" style="margin-left: 89.3pt; text-indent: -18pt;"><span lang="EN-US" style="font-family: Symbol; color: windowtext;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">For hybrid task set: </span></p>
  <p class="MsoListContinue" style="margin-left: 108pt; text-indent: -18pt;"><span lang="EN-US" style="color: windowtext;">▪<span style="font: 7pt &quot;Times New Roman&quot;;">     
  </span></span><span lang="EN-US">Fixed priority server based on </span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">Rate
  Monotonic Scheduling (</span></span><span lang="EN-US">RMS) (polling server,
  deferrable server, sporadic server, slack stealer). </span></p>
  <p class="MsoListContinue" style="margin-left: 108pt; text-indent: -18pt;"><span lang="EN-US" style="color: windowtext;">▪<span style="font: 7pt &quot;Times New Roman&quot;;">     
  </span></span><span lang="EN-US">Dynamic priority server based on Earliest
  Deadline First (EDF) (dynamic polling server, dynamic deferrable server,
  dynamic sporadic server, total bandwidth server, constant bandwidth server).</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">Scheduling protocols have a policy for scheduling periodic
  threads, </span><span class="HTMLPreformattedChar"><span lang="EN-US" style="font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;;">for aperiodic/sporadic threads,
  and for background threads.  In the case of RMS, the periodic thread policy
  is priority assignment according to decreasing rate, aperiodic and sporadic
  threads according to their minimum inter-arrival time, and background as
  FIFO.  Others have similar characteristics.  </span></span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Supported_Source_Languages: <b>type</b> <b>enumeration</b> (Ada95, Ada2005, C, Simulink_6_5, <i>&lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- The following are example software source languages:</span></pre><pre><span lang="EN-US">-- ( Ada95, Ada2005, C, Simulink_6_5 )     </span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Source_Languages</span><span lang="EN-US"> property enumeration type specifies the set of software source
  languages that are supported.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Supported_Distributions: <b>type</b> <b>enumeration</b> (Fixed, Poisson,<i> &lt;project-specified&gt;</i>);</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">-- The following are example distributions:</span></pre><pre><span lang="EN-US">-- ( Fixed, Poisson )  </span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Distribution</span><span lang="EN-US"> property enumeration type specifies the set of distribution
  functions that are supported.</span></p>
  <pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Supported_Classifier_Substitutions: <b>type</b> <b>enumeration</b> (Classifier_Match, Type_Extension, Signature_Match,<i> &lt;project-specified&gt;</i>);</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Supported_Classifier_Substitutions</span><span lang="EN-US"> property enumeration type specifies the set of classifier
  substitutions that are supported for prototypes and refinement declarations. 
  Three kinds of substitutions are defined as part of the standard.  A
  candidate for additional substitution rules signature matching with name
  mapping.</span></p>
  <pre style="text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><a name="DataVolume"><span lang="EN-US">Data_Volume: <b>type aadlinteger </b>0 bitsps .. Max_Aadlinteger</span></a><b><span lang="EN-US"> </span></b></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><b><span lang="EN-US">                              units </span></b><span lang="EN-US">( bitsps, Bytesps =&gt; bitsps * 8, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                      KBytesps =&gt; Bytesps * 1000, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                                      MBytesps =&gt; KBytesps * 1000, </span></pre><pre style="text-align: justify;"><span lang="EN-US">                                      GBytesps =&gt; MBytesps * 1000 );</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">
  Data_Volume</span><span lang="EN-US"> property type specifies a property type
  for the volume of data per time unit.  The predeclared unit literals are
  expressed in terms of seconds as time unit.  The numeric value of the
  property must be positive.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">Note: Conversion factor of 1000 consistent with ISO.</span></p>
  <pre style="text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Aadlinteger: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Aadlinteger</span><span lang="EN-US"> specifies the largest
  machine representable integer value that may be used as the maximum value in
  property associations. This property does not specify the maximum integer
  representation on a target processor.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Target_Integer: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Target_Integer</span><span lang="EN-US"> specifies the
  largest machine representable integer value on a target processor. </span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Base_Address: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Base_Address</span><span lang="EN-US"> specifies the
  maximum value that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Base_Address</span><span lang="EN-US">
  property.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Memory_Size: <b>constant</b> Size =&gt; <i>&lt;project-specified-aadl-integer&gt; &lt;Size_Units_Literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Memory_Size</span><span lang="EN-US"> specifies the maximum
  memory size that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US"> property,
  expressed in the specified unit of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size</span><span lang="EN-US">.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Queue_Size: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Queue_Size</span><span lang="EN-US"> specifies the maximum
  value that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Queue_Size</span><span lang="EN-US">
  property.</span></p>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Thread_Limit: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Thread_Limit</span><span lang="EN-US"> specifies the
  maximum value that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Thread_Limit</span><span lang="EN-US">
  property.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Time: <b>constant</b> Time =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Time</span><span lang="EN-US"> specifies the maximum value
  that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US"> property, expressed in the
  specified  unit of </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time</span><span lang="EN-US">.</span></p>
  <pre style="text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Urgency: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The property constant Max_Urgency
  specifies the maximum value that can be declared in for the Urgency property.</span></p>
  <pre style="text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Byte_Count: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Byte_Count</span><span lang="EN-US"> specifies the maximum
  value that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Byte_Count</span><span lang="EN-US">
  property.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr style="height: 44.05pt;">
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 44.05pt;"><pre style="text-align: justify;"><span lang="EN-US">Max_Word_Space: <b>constant</b> <b>aadlinteger</b> =&gt; <i>&lt;project-specified-integer-literal&gt;</i>;</span></pre>
  <p class="MsoListContinue" style="margin-bottom: 0.0001pt;"><span lang="EN-US">The property constant</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> Max_Word_Space</span><span lang="EN-US"> specifies the maximum
  value that can be declared in for the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Word_Space</span><span lang="EN-US">
  property.</span></p>
  <pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre></td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">Size_Units: <b>type units </b>(bits, Bytes =&gt; bits * 8, KByte =&gt; Bytes* 1000, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                        MByte =&gt; KByte* 1000, GByte =&gt; MByte * 1000, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">                        TByte =&gt; GByte * 1000 );</span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US"> </span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The type </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Size_Units</span><span lang="EN-US"> defines
  a measurement of size that is available for use in other property
  definitions.  Users may append to this type.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">Note: conversion factor of 1000
  consistent with ISO/SI.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">Note: B, KB, etc. in AADL 2004 have
  been replaced by Byte, Kbyte etc. in AADL V2. Since AADL is case insensitive,
  Kb could have been interpreted a K bits rather than K bytes.</span></p>
  <p class="MsoListContinue"><span lang="EN-US">Note: There is a proposal to add
  the binary units as defined by IEC, i.e., KiByte =&gt; Bytes * 1024, MiByte
  =&gt; KiByte * 1024, etc.</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;"><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">Time_Units: <b>type </b><b>units</b> (ps, ns =&gt; ps * 1000, us =&gt; ns * 1000, ms =&gt; us * 1000, </span></pre><pre style="margin-bottom: 0.0001pt; text-align: justify;"><span lang="EN-US">          </span><span lang="FR">sec =&gt; ms * 1000,  min =&gt; sec * 60, hr =&gt; min * 60);</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="FR"> </span></pre>
  <p class="MsoListContinue"><span lang="EN-US">The type </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Time_Units</span><span lang="EN-US"> defines
  a measurement of time that is available for use in other property
  definitions. Users may append to this type.</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<pre><span lang="EN-US"> </span></pre><pre><b><span lang="EN-US">end</span></b><span lang="EN-US"> AADL_Project;</span></pre>

<p class="appendix2"><a name="_Toc318320391"><span lang="EN-US">A.9<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Predeclared Runtime Services</span></a><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Two sets of runtime services are predeclared.  The first set
declares service subprograms that can be called by the application source text
directly.  The second set declares service subprograms that are intended to be
called by an AADL runtime executive that can be generated from an AADL model,
thus is not expected to be used directly by application component developers.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><b><span lang="EN-US">Application Runtime Services</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime service allows the source text of a thread to explicitly
cause events, event data, or data to be transmitted through outgoing ports to
receiver ports.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service takes a port list parameter that specifies for which ports
the transmission is initiated. The send on all ports is considered to occur
logically simultaneously.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> is a non-blocking service.  An exception is raised if the send
fails with exception codes indicating the failing port and type of failure. </span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Send_Output</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">OutputPorts:<b> in parameter</b> &lt;implementation-dependent port list&gt;;</span></pre><pre><span lang="EN-US">      -- List of ports whose output is transferred</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">SendException: <b>out event data</b>; -- exception if send fails to complete</span></pre><pre><span lang="EN-US">    <b>end </b>Send_Output;</span></pre>

<p class="Note"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NOTES: </span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> runtime service replaces the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Event</span><span lang="EN-US"> service 
in the original AADL standard<i>.  </i></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Put_Value</span><span lang="EN-US"> runtime service allows the source text of a thread to supply a data
value to a port variable.  This data value will be transmitted at the next </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> call in the source text or by the runtime system at completion time
or deadline.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Put_Value</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DataValue: <b>in parameter</b>; -- value to be stored</span></pre><pre><span lang="EN-US">      DataSize: <b>in parameter</b>;  - size in bytes (optional)</span></pre><pre><span lang="EN-US">    <b>end </b>Put_Value;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> runtime service allows the source text of a thread to explicitly
request port input on its incoming ports to be frozen and made accessible
through the port variables.  Any previous content of the port variable is
overwritten, i.e., any previous queue content not processed by </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
calls is discarded.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service takes a parameter that specifies for which ports the input
is frozen.  Newly arriving data may be queued, but does not affect the input
that thread has access to (see Section 9.1).  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> is a
non-blocking service. </span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Receive_Input</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">InputPorts: <b>in parameter</b> &lt;implementation-dependent port list&gt;;</span></pre><pre><span lang="EN-US">      -- List of ports whose input is frozen</span></pre><pre><span lang="EN-US">    <b>end </b>Receive_Input;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the case of data ports the value is made available without
requiring a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US"> will return the value 1 if the value has been updated, i.e., is <i>fresh</i>. 
If the data is not fresh, the value zero is returned.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the case of event data ports each data value is retrieved from
the queue through the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call and made available as port variable value.  Subsequent calls
to </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> or direct access of the port variable will return this value until
the next </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In case of event ports and event data ports the queue is available
to the thread, i.e., </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US"> will return the size of the queue.  If the queue size is greater
than one the </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeued_Items</span><span lang="EN-US"> property and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Dequeue_Protocol</span><span lang="EN-US"> property may specify that more than one element is made accessible
to the source text of a thread. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> runtime service shall be provided that allows the source text of a
thread to access the current value of a port variable.  The service call
returns the data value.  Repeated calls to </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Value</span><span lang="EN-US"> result in
the same value to be returned, unless the current value is updated through a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> call or a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US"> call. </span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Get_Value</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DataValue: <b>out parameter</b>; -- value being retrieved</span></pre><pre><span lang="EN-US">      DataSize: <b>in parameter</b>;  - size in bytes (optional)</span></pre><pre><span lang="EN-US">    <b>end </b>Get_Value;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Count</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
determine whether a new data value is available on a port variable, and in case
of queued event and event data ports, who many elements are available to the
thread in the queue. A count of zero indicates that no new data value is
available. </span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Get_Count</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">CountValue: <b>out parameter </b>BaseTypes::Integer; -- content count of port variable</span></pre><pre><span lang="EN-US">    <b>end </b>Get_Count;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Next_Value</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
get access to the next queued element of a port variable as the current value.
A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">NoValue</span><span lang="EN-US"> exception is raised if no more values are available.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Next_Value</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>requires data access</b>; -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DataValue: <b>out parameter</b>; -- value being retrieved</span></pre><pre><span lang="EN-US">      DataSize: <b>in parameter</b>;  -- size in bytes (optional)</span></pre><pre><span lang="EN-US">      NoValue: <b>out event port</b>; -- exception if no value is available</span></pre><pre><span lang="EN-US">    <b>end </b>Next_Value;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Updated</span><span lang="EN-US">
runtime service shall be provided that allows the source text of a thread to
determine whether input has been transmitted to a port since the last </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service call.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Updated</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">Portvariable: <b>in parameter</b> &lt;implementation-dependent port reference&gt;;</span></pre><pre><span lang="EN-US">      -- reference to port variable</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">FreshFlag: <b>out parameter </b>BaseTypes::Boolean; -- true if new arrivals </span></pre><pre><span lang="EN-US">    <b>end </b>Updated;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US"><b> Runtime
Executive Services</b></span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
following are subprograms may be explicitly called by application source code,
or they may be called by an AADL runtime system that is generated from an AADL
model.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Resource
</span><span lang="EN-US">and</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">
Release_Resource</span><span lang="EN-US">  runtime services represent an
abstract interface for functions that perform locking and unlocking of
resources according to the specified concurrency control protocol.  The method
may lock multiple resources simultaneously. </span></p>

<pre><span lang="EN-US">    <b>subprogram</b>  Get_Resource</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><span lang="EN-US">      resource: <b>in parameter</b> &lt;implementation-specific representation of one or more resources&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Get_Resource;</span></pre><pre><span lang="EN-US">    <b>subprogram</b>  Release_Resource </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><span lang="EN-US">      resource: <b>in parameter</b> &lt;implementation-specific representation of one or more resources&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Release_Resource;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Dispatch</span><span lang="EN-US">  runtime service is called to suspend the thread execution at
completion of its dispatch execution.  It is the point at which the next
dispatch resumes. The service call takes several parameters.  It takes a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DispatchPort</span><span lang="EN-US"> list and an optional trigger condition function to identify the
ports and the condition under which the dispatch is triggered.  If the
condition function is not present any of the ports in the list can trigger the
dispatch.  It takes a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DispatchedPort</span><span lang="EN-US"> as out parameter to return the port(s) that triggered the
dispatch.  It takes </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OutputPorts</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">InputPorts</span><span lang="EN-US"> as port lists.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">OutputPorts</span><span lang="EN-US">, if present, identifies the set of ports whose sending is initiated
at completion of execution, equivalent to an implicit </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Send_Output</span><span lang="EN-US"> service
call. </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">InputPorts</span><span lang="EN-US">, if present, identifies the set of ports whose content is received
at the next dispatch, equivalent to an implicit </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Receive_Input</span><span lang="EN-US"> service
call.  </span></p>

<pre><span lang="EN-US">    <b>subprogram </b> Await_Dispatch </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre style="margin-left: 35.25pt;"><span lang="EN-US">-- List of ports whose output is sent at completion/deadline</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">OutputPorts: <b>in parameter </b>&lt;implementation-defined port list&gt;;</span></pre><pre><span lang="EN-US">      -- List of ports that can trigger a dispatch</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DispatchPorts: <b>in parameter</b> &lt;implementation-defined port list&gt;; </span></pre><pre><span lang="EN-US">      -- list of ports that did trigger a dispatch</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">DispatchedPort: <b>out parameter </b>&lt; implementation-defined port list&gt;;</span></pre><pre><span lang="EN-US">      -- optional function as dispatch guard, takes port list as parameter </span></pre><pre><span lang="EN-US">      DispatchConditionFunction: <b>requires</b> <b>subprogram access</b>;</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">-- List of ports whose input is received at dispatch</span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">InputPorts: <b>in parameter</b> &lt;implementation-defined port list&gt;; </span></pre><pre><span lang="EN-US">    <b>end</b> Await_Dispatch;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> runtime service shall be provided that allows a thread to
explicitly raise a thread recoverable or thread unrecoverable error.  </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> takes an error type identifier as parameter.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b>  Raise_Error </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">errorID: <b>in parameter </b>&lt;implementation-defined error type&gt;;</span></pre><pre><span lang="EN-US">    <b>end</b> Raise_Error;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Get_Error_Code</span><span lang="EN-US"> runtime service shall be provided that allows a recover entrypoint
to determine the type of error that caused the entrypoint to be invoked.</span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Get_Error_Code </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">errorID: <b>out parameter</b> &lt;implementation-defined error type&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Get_Error_Code;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subprograms
have event ports but do not have an error port. If a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> is
called, it is passed to the error port of the enclosing thread.  If a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> is called by a remotely called subprogram, the error is passed to
the error port of the thread executing the remotely called subprogram.  The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Raise_Error</span><span lang="EN-US"> method is permitted to have an error identification as parameter
value. This error identification can be passed through the error port as the
data value, since the error port is defined as event data port.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Await_Result</span><span lang="EN-US"> runtime service shall be provided that allows an application to wait
for the result of a semi-synchronous subprogram call.  </span></p>

<pre><span lang="EN-US">    <b>subprogram</b> Await_Result </span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">CallID: <b>in parameter</b> &lt;implementation-defined call ID&gt;; </span></pre><pre><span lang="EN-US">    <b>end </b>Await_Result;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Current_System_Mode</span><b><span lang="EN-US"> </span></b><span lang="EN-US">returns a value corresponding to the
active system operation mode (SOM). </span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Current_System_Mode</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">ModeID: <b>out parameter </b>&lt;implementor-specific&gt;; -- ID of the mode</span></pre><pre><span lang="EN-US">    <b>end </b>Current_System_Mode;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Set_System_Mode</span><b><span lang="EN-US"> </span></b><span lang="EN-US">indicates the next SOM the runtime system must switch to.  System
modes are assumed to have identifying numbers.</span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Set_System_Mode</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">ModeID: <b>in parameter </b>&lt;implementor-specific&gt;; -- ID of the SOM</span></pre><pre><span lang="EN-US">    <b>end </b>Set_System_Mode;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Current_System_Mode</span><b><span lang="EN-US"> </span></b><span lang="EN-US">returns a value corresponding to the
active system operation mode (SOM). </span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Current_System_Mode</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">ModeID: <b>out parameter </b>&lt;implementor-specific&gt;; -- ID of the mode</span></pre><pre><span lang="EN-US">    <b>end </b>Current_System_Mode;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Set_System_Mode</span><b><span lang="EN-US"> </span></b><span lang="EN-US">indicates the next SOM the runtime system must switch to.  System
modes are assumed to have identifying numbers.</span></p>

<pre><span lang="EN-US">    <b>subprogram </b>Set_System_Mode</span></pre><pre><span lang="EN-US">    <b>features</b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">ModeID: <b>in parameter </b>&lt;implementor-specific&gt;; -- ID of the SOM</span></pre><pre><span lang="EN-US">    <b>end </b>Set_System_Mode;</span></pre>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The following
subprograms take a process, virtual processor, or processor ID as parameter. 
The ID representation is determined by the runtime system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Process</span><span lang="EN-US"> is
called for a controlled shut-down of a process, i.e., all of its contained
threads, whether executing, awaiting a dispatch, or not part of the current
mode, are given a chance to execute their finalize entrypoint before being
halted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_Process</span><span lang="EN-US"> is
called for a shut-down of a process due to an anomaly.  All of its contained
threads are terminated immediately.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Virtual_Processor</span><span lang="EN-US"> is called to initiate a transition to the virtual processor
stopping state at the next hyperperiod. This has the effect of initiating </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Virtual_Processor</span><span lang="EN-US"> for all virtual processors bound to the virtual processor, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Process</span><span lang="EN-US"> for all processes bound to the virtual processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_Virtual_Processor</span><span lang="EN-US">  is called for a shut-down of a virtual processor due to an
anomaly.  All virtual processors and processes bound to the virtual processor
are aborted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Processor</span><span lang="EN-US"> is
called to initiate a transition to the processor stopping state at the next
hyperperiod. This has the effect of initiating </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Virtual_Processor</span><span lang="EN-US"> for all virtual processors bound to the processor, and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_Process</span><span lang="EN-US"> for all processes bound to the processor.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_Processor</span><span lang="EN-US">  is
called for a shut-down of a processor due to an anomaly.  All virtual
processors and processes bound to the processor are aborted.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(32)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Stop_System</span><span lang="EN-US"> is called
to initiate a transition to the system stopping state, which will initiate a Stop_Processor
for all processors in the system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(33)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Abort_System</span><span lang="EN-US"> is
called for a shut-down of the system due to an anomaly.  All processors in the
system are aborted.</span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US"> </span></p>

<p class="Appendix" style="margin-left: 0cm; text-indent: 0cm;"><a name="_Toc318320392"></a><a name="_Toc169684140"></a><a name="_Toc167033790"></a><a name="_Toc168661907"></a><a name="_Toc86725713"></a><a name="_Toc86220750"></a><a name="_Toc86220278"></a><a name="_Toc86220156"></a><a name="_Toc86219905"></a><a name="_Toc86219800"></a><a name="_Toc79295037"></a><a name="_Toc8550430"></a><a name="_Toc535729934"></a><a name="_Toc532013651"></a><a name="_Ref523211216"></a><a name="GLOSSARY"></a><span lang="EN-US" style="">Appendix B <span style="font: 7pt &quot;Times New Roman&quot;;"> </span></span><span lang="EN-US">Glossary</span></p>

<p class="InformNorm"><span lang="EN-US">Informative</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Definitions of terms used from other standards, such as the IEEE <i>Standard
Glossary of Software Engineering Terminology</i> [IEEE Std. 610.12-1990],
ISO/IEC 9945-1:1996 [IEEE/ANSI Std 1003.1, 1996 Edition],<b> </b><i>Information
Technology – Portable Operating System Interface (POSIX)</i></span><span lang="EN-US" style="font-family: &quot;Arial&quot;,&quot;sans-serif&quot;;">, </span><span lang="EN-US">Unified
Modeling Language Specification [UML 2004, version 1.4.2], or the IFIP WG10.4 <i>Dependability:
Basic Concepts and Terminology </i>[IFIP WG10.4-1992] are so marked.  Terms not
defined in this standard are to be interpreted according to the Webster's Third
New International Dictionary of the English Language. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Actual System</span></i><span lang="EN-US">:
[UML] 1) Subject of a model; 2) A collection of connected physical units, which
can include software, hardware, and people, that are organized to accomplish a
specific purpose. [AADL] The system being modeled by an AADL specification. 
This includes software components, execution platform components, including
interfaces to the external environment, and system components. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Aggregate Data Port:</span></i><span lang="EN-US"> [AADL]</span><span lang="EN-US"> An aggregate data port makes a
collection of data from multiple thread <b>out</b> data available in a
time-consistent manner.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Ancestor</span></i><span lang="EN-US">: [AADL]
An ancestor in the component extension hierarchy is a component type or
component implementation that (directly or indirectly) has been extended to the
given component type or implementation. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Annex Document</span></i><span lang="EN-US">:
[AADL] An approved addition to the core AADL standard in the form of additional
standardized properties and/or a sublanguage notation to be used in annex
subclauses and libraries. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Annex Subclause</span></i><span lang="EN-US">:
[AADL] An annex-specific subclause expressed in a sublanguage notation. Annex
subclauses can be declared in component types and component implementations. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Annex Library</span></i><span lang="EN-US">:
[AADL] A library of reusable declaration expressed in a sublanguage notation.
Annex libraries can be declared in packages.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Anomaly: </span></i><span lang="EN-US">[IFIP,
AADL] </span><span lang="EN-US">An <i>anomaly</i> occurs when a component is in
an erroneous or failed state that does not result in a standard exception. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Application</span></i><span lang="EN-US">:
[IEEE] Software designed to fulfill specific needs of a user. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Architecture</span></i><span lang="EN-US">:
[IEEE] An <i>architecture</i> represents the organizational structure of a
system or component. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Binding-dependent Implementation</span></i><span lang="EN-US">: [AADL] A <i>binding-dependent implementation</i> of a subcomponent
is determined after the binding to an execution platform component is fixed.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Behavior</span></i><span lang="EN-US">: [AADL]
A <i>behavior</i> is a description of sequencing of various kinds that may
occur in a component.  Examples are execution sequences of subprograms, end-to-end
sequencing of data and event flow, the interaction between components, or a
specification of mode transitions. Behaviors describe how various fault events
cause a component to transition between various error states. Behaviors are
nameable objects in specifications and have properties.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Binding:</span></i><span lang="EN-US"> [AADL]</span><span lang="EN-US"> A <i>binding</i> establishes a many-to-one hosted/allocated
relationship between components using resources and those representing
resources.  In particular, it maps application components to execution platform
components.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Bus</span></i><span lang="EN-US">: [AADL] A <i>bus</i>
is a <i>category</i> of component used to model a communication channel,
typically hardware together with communication protocols that can exchange
control and data between memories, processors, and devices.  Depending on the
properties of the bus, a bus may be used to access a memory or device. A bus
may be used to send data messages between processors.  Connections may be bound
to buses.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component</span></i><span lang="EN-US">: [AADL]
A <span class="Term">component</span> is a hardware, software, or system unit
used as a part of some system. A component belongs to a <span class="Term">component
category</span>.  Each component has a name (also called its <i>defining</i> <i>identifier</i>)
and has category–specific properties that can be assigned values.  A fully
defined component is an instance of a component type and has an implementation.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Category</span></i><span lang="EN-US">: [AADL] A component category is either the name of a kind of
execution platform component (e.g., processor), a software component (e.g., process),
or a composite component (e.g., system).  The AADL defines several categories
for software components: <span class="Term">process</span><i>, thread group,</i> <span class="Term">thread</span>, <i>subprogram,</i> <i>data.</i> Several categories
are also defined for execution platform components: <span class="Term">processor</span>,
<span class="Term">memory</span>, <span class="Term">bus</span>, and <span class="Term">device</span>.  The composite category only defines the <i>system </i>component
category.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Classifier</span></i><span lang="EN-US">: [AADL] A <span class="Term">component classifier</span> is a
language element that defines one or more <span class="Term">components</span>
regarded as forming a group by reason of the same structure and behavior.  The <span class="Term">classifier</span> is a reusable description of the structure and
behavior used to define one or more <span class="Term">components</span>.  There
are two kinds of classifiers: <span class="Term">component type</span> and <span class="Term">component implementation</span>.  A component classifier belongs to
a particular <span class="Term">component category</span>.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Classifier Reference:</span></i><span lang="EN-US"> [AADL] A component classifier reference is a uniquely named
reference to a component type or to a component type and implementation pair.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Extension</span></i><span lang="EN-US">: [AADL] A <i>component extension</i> allows a component classifier
to be defined in terms of an existing component classifier through addition of
features, subcomponents, property associations, connections, and behaviors,
while inheriting the elements of the component being extended.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Implementation</span></i><span lang="EN-US">: [AADL] A <i>component implementation</i> is a <span class="Term">component
classifier</span> that describes an internal structure (subcomponents,
features, connections), properties, and behaviors of a component.  A <span class="Term">component type</span> can have several implementations.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Instance</span></i><span lang="EN-US">: [AADL] Another name for <span class="Term">component</span>.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Component Type</span></i><span lang="EN-US">:
[AADL] A <span class="Term">component type</span> is a kind of <span class="Term">component
classifier</span> that describes a component’s visible functional and
behavioral interface.  The <span class="Term">component type</span> describes the
provided features and accessible components of an instance of the type that
other components may use.  The <i>component type</i> also specifies the
features and components required to create each instance of itself. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Configuration</span></i><span lang="EN-US">:
[AADL] The set of components and connections that are active in the current
mode.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol; color: windowtext;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Connection</span></i><span lang="EN-US">:
[AADL] A <i>connection</i> is a link between the <span class="Term">features</span>
of two components over which data, events, or subprogram calls can be exchanged</span><span lang="EN-US" style="color: windowtext;">.  Connections are directional.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Data</span></i><span lang="EN-US">: [IEEE] A
representation of facts, concepts, or instructions in a manner suitable for
communication, interpretation, or processing by humans or automatic means. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Data Component</span></i><span lang="EN-US">:
[AADL] A <i>data component</i> represents static data in the source text.  This
data may have shared access by multiple threads.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Data Port</span></i><span lang="EN-US">: [AADL]
A <i>data port</i> is a port through which data is transferred in unqueued
form. It represents a variable declared in source text.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Data Subprogram: </span></i><span lang="EN-US">[AADL]
A subprogram that provides an interface to a data component.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Data Type:</span></i><span lang="EN-US"> [IEEE]
A class of data, characterized by the members of the class and the operations
that can be applied to them.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Declaration:</span></i><span lang="EN-US">
[AADL] A language statement that introduces a component classifier, component
instance, feature, connection, or property.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Delayed Connection</span></i><span lang="EN-US">: [AADL] A connection between two data ports, where the data is
transferred at the deadline of the originating thread.  This results in
deterministic communication of state data and receipt of data in a
phase-delayed manner.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Descendent</span></i><span lang="EN-US">:
[AADL] A <i>descendent</i> in the component extension hierarchy is a component
type or component implementation that (directly or indirectly) extends the
given component type or implementation. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Deterministic</span></i><span lang="EN-US">:
[IEEE] Pertaining to a process, model, or variable whose outcome, result, or
value does not depend on chance. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Deterministic Communication</span></i><span lang="EN-US">: [AADL] Communication of state data between periodic threads in
predictable order.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Device</span></i><span lang="EN-US">: [AADL] A <i>device
</i>models components that interface with an external environment, i.e.,
exhibit complex behaviors that require a nontrivial interface to application
software systems.  A device cannot directly store and execute binary images
associated with software process specifications.  Software components can
communicate with devices via ports.  Examples of devices are sensors and
actuators that interface with the external physical world, or standalone
systems such as a GPS.  Devices interact with the embedded application system
through port connections and with the computing hardware through bus access.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Dispatch Time</span></i><span lang="EN-US">:
[AADL] For periodic threads: any non-negative integral multiple of the period
following the transition out of the </span><span lang="EN-US" style="color: windowtext;">loaded
process</span><span lang="EN-US"> state.  For sporadic and aperiodic threads: the
arrival of an event or event data at an event or event data port of the thread,
or the arrival of a remote subprogram call at a subprogram (access) feature of
the thread following the transition out of the </span><span lang="EN-US" style="color: windowtext;">loaded process</span><span lang="EN-US"> state.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Error</span></i><span lang="EN-US">: [AADL] An <i>error
</i>in a component occurs when an existing fault causes the internal state of
the component to deviate from its nominal or desired operation.  For example, a
component error may occur when an add instruction produces an incorrect result
because a transistor in the adding circuitry is faulty.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">: <i>Event</i>: [Webster] An outcome or
occurrence. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Event Port</span></i><span lang="EN-US">:
[AADL] Port through which events are passed between components. Events may be
queued at the receiving end.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Event Data Port: </span></i><span lang="EN-US">[AADL]
Port through which data is passed between components, whose transfer implies
the passing of an event. Event data may be queued at the receiving end.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Exception:</span></i><span lang="EN-US"> [IFIP]
An <i>exception</i> represents an error condition that changes the behavior of
a component. An exception may occur for an erroneous or failed component when
that error or failure is detected, either by the component itself or by another
component with which it interfaces.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Execution Platform</span></i><span lang="EN-US">: [AADL] A combination of hardware and software that supports the
execution of application software through its ability to schedule threads,
store source text code and data, and perform communication modeled by
connections.  This combination would typically include runtime support (O/S or
language runtime environment) and the specific hardware.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Execution Platform Component</span></i><span lang="EN-US">: [AADL] A component of the execution platform.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Failure</span></i><span lang="EN-US">: [IFIP] A
<i>failure</i> in a physical component occurs when an error manifests itself at
the component interface.  A component fails when it does not perform its
nominal function for the other parts of the system that depend on that
component for their nominal operation.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Fault</span></i><span lang="EN-US">:<i> </i>[IFIP]
A fault is defined to be an anomalous undesired change in thread execution
behavior, possibly resulting from an anomalous undesired change in data being
accessed by that thread or from violation of a compute time or deadline
constraint.  A <i>fault</i> in a physical component is a root cause that may
eventually lead to a component error or failure.  A fault is often a specific
event such as a transistor burning out or a programmer making a coding mistake.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Feature: </span></i><span lang="EN-US">[AADL] A
<i>feature</i> models a characteristic or a component that is externally
visible as part of the component type. A feature is used to establish
interaction with other components.  Features include: ports and feature groups
to support flow of data and control, access to data components to support coordination
of access to shared data components, subprogram access to bind subprogram calls,
and parameters to represent the data values that can be passed into and out of
subprograms.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Immediate Connection</span></i><span lang="EN-US">: [AADL]  A connection between two data ports, where the execution
of the receiving thread is delayed until the sending thread completes execution
and data is transferred at that time.  This results in deterministic
communication of state data and receipt of data in mid-frame, i.e., within the
same dispatch of both the sending and receiving thread.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Implementation</span></i><span lang="EN-US">:
[IEEE] The result of translating a design, i.e., architecture, components,
interfaces, and other characteristics of a system or component, into hardware
components, software components, or both. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Instance</span></i><span lang="EN-US">: [AADL]
An individual object of a class that is indicated by a component classifier.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Instantiation</span></i><span lang="EN-US">:
[IEEE] The process of substituting specific data, instructions, or both into a
generic program unit to make it usable in a computer program. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Interface</span></i><span lang="EN-US">: [IEEE]
1) A shared boundary across which information is passed; 2) A hardware or
software component that connects two or more other components for the purpose
of passing information from one to the other; 3) To connect two or more
components for the purpose of passing information from one to the other; 4) To
serve as a connecting or connected component as in (2). [UML] A named set of
operations that characterize the behavior of an element. </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Memory</span></i><span lang="EN-US">: [AADL] A <i>memory</i>
is a category of component used to model randomly addressable physical storage
or logical storage.  A memory component may be contained in a platform, or may
be accessible from a platform via a bus.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Mode</span></i><span lang="EN-US">: [AADL] A <i>mode
</i>models an operational mode in the form of an alternative set of active
threads and connections and alternative execution behavior within threads.  A
mode behavior models dynamic mode changes by declaring runtime transitions
between operational modes as the result of events. Mode specifications can be
hierarchical; sub-modes and concurrent reconfiguration of different subsystems
can be specified.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Model</span></i><span lang="EN-US">: [UML] An
abstraction of a actual system, with a certain purpose.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Noncompliance</span></i><span lang="EN-US">:
[AADL] <i>Noncompliance</i> of a component with its specification is a kind of
design fault. This may be handled by run-time fault-tolerance in an implemented
actual system.  A developer is permitted to classify such components as
anomalous rather than noncompliant.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Package:</span></i><span lang="EN-US"> [AADL] A
<i>package</i> defines a namespace for component type and component implementation
declarations and allows them to be logically organized into a hierarchy. 
Packages can control visibility of declarations by declaring them public or
private.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Port</span></i><span lang="EN-US">: [AADL] <i>Ports</i>
are connection points between components that are used for directional transfer
of data, events, or both.  Data transferred through ports is typed.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Port Connection: </span></i><span lang="EN-US">[AADL]
<i>Port connections</i> represent directional transfer of data and control
between data, event, and event data ports of components. The endpoints of such
a connection are threads, devices, or processors.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Feature Group: </span></i><span lang="EN-US">[AADL]<i>
</i>A grouping of features or feature groups. Outside a component a feature group
is treated as a single unit. Inside a component the features of a feature group
can be accessed individually.  Feature groups allow collections of features to
be connected with a single connection.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Predictable</span></i><span lang="EN-US">:
[Webster] Determinable in advance.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Private: </span></i><span lang="EN-US">[AADL]<i>
</i>Declarations contained in a package that can only be referenced from within
the package.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Process</span></i><span lang="EN-US">: [IEEE]
An executable unit managed by an operating system scheduler; [POSIX] a
conceptual object with an address space, one or more threads of control
executing within that address space, a collection of system resources required
for execution, and possibly other attributes.  [AADL]: A process represents a
space partition in terms of virtual address spaces containing source text that
forms complete programs. A process contains threads as concurrent units of
execution scheduled to execute on processors.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Processor</span></i><span lang="EN-US">: [AADL]
A <i>processor</i> is an abstraction of hardware and software that is
responsible for scheduling and executing threads. Processors may contain memory
and may access memory and devices via buses.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Program: </span></i><span lang="EN-US">[AADL]</span><span lang="EN-US"> A <i>program</i> is a body of <i>source</i> text written in a standard
programming language that can be compiled, linked and loaded as an executable
image.  A program has a self-contained namespace (no source names appear that
are not declared within that program<i> </i>or are part of the language
standard).  The complete set of source files associated with a process must
form a legal program as defined by the applicable programming language
standard.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Property</span></i><span lang="EN-US">: [AADL]
A <i>property</i> is a named value associated with an AADL component,
connection, flow, or feature.  Every property has a name and can be assigned a
value of a specific type in a specification.  There is a standard set of
properties for each category of component, connection, flow or feature, e.g., thread
components have a Period property that can be assigned a time value. 
Implementations, components, features, connections, and behaviors have
properties.  Non-standard property definitions may be defined and used in a
specification, this is the primary means available to create non-standard
extensions to the language.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Property Set: </span></i><span lang="EN-US">[AADL]
A new set of properties and property types as extension to existing categories
of components, features, behaviors, and connections.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Property Type</span></i><span lang="EN-US">:
[AADL] The type of values that can be associated with a property.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Property Value Association</span></i><span lang="EN-US">: [AADL] A <i>property value association</i> is a statement in the
language that associates a value with a named <i>property</i>.  In some cases a
property value may be overridden.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Public: </span></i><span lang="EN-US">[AADL]<i>
</i>Declarations contained in a package that can be referenced from within
another package or component.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Qualified Name:</span></i><span lang="EN-US">
[AADL] </span><span lang="EN-US">A qualified name uniquely identifies the
component classifier identifier with a package name separated by a double colon
(“::”).  Only the public package namespace is used to resolve these references.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Reconfiguration:</span></i><span lang="EN-US">
[AADL] Transition from one mode to another resulting in a change from one
component and connection configuration to another.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Remote Subprogram: </span></i><span lang="EN-US">[AADL]  A subprogram that executes in its own thread and can be
called remotely.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Sampling Connection</span></i><span lang="EN-US">: [AADL] A connection between two data ports, where the periodic
recipient thread samples the output of another thread.  This may result in
non-deterministic communication of state data.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Shared Component</span></i><span lang="EN-US">:
[AADL] A component that is directly accessible to two or more components.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Software Component</span></i><span lang="EN-US">: [AADL] A <i>software component</i> is a component that represents
software, i.e., source text describing a program or procedure in an
implementation language, and represents the units of concurrency of an
application in terms of its threads and processes.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Source Text</span></i><span lang="EN-US">:
[AADL] Refers to a body of text written in a conventional programming language
such as Ada or C, written in a domain-specific modeling language such as MatLab<sup>®</sup>/Simulink<sup>®</sup>,
or written in a hardware description language such as VHDL.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Specification: </span></i><span lang="EN-US">[AADL]<i>
</i>An AADL source file that specifies, in a complete or legally partial
manner, a set of requirements, design, behavior, or other characteristics of a
system or component.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Subcomponent: </span></i><span lang="EN-US">[AADL]</span><span lang="EN-US"> A component declared inside a component implementation that
represents the application system or the execution platform.   A subcomponent
that belongs to the system category is also known as a <span class="Term">subsystem</span>.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Subprogram:</span></i><span lang="EN-US">
[AADL] A <i>subprogram</i> is a category of component used to model source text
and images that have a single entry point that can be called by a thread. 
Subprograms have no statically allocated variables.  A data subprogram can be
declared as a feature of a data component.  A subprogram may be declared as a feature
of a thread, thread group, process, processor or system.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">System</span></i><span lang="EN-US">: [AADL] A <i>system
</i>is an integrated composite that consists of one or more hardware, software,
or system components.  System<i> </i>is the name of a <span class="Term">component
category</span>.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Task</span></i><span lang="EN-US">: [IEEE] 1) A
sequence of instructions treated as a basic unit of work by the supervisory
program of an operating system; 2) A software component that can operate in
parallel with other software components.</span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Thread:</span></i><b><span lang="EN-US"> </span></b><span lang="EN-US">[AADL]</span><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Times New Roman&quot;,&quot;serif&quot;; color: windowtext;"> </span><span lang="EN-US">A <i>thread</i>
is used to model a physical thread of execution.  A thread communicates with
other threads through ports.  Threads can have different dispatch protocols
such as periodic, aperiodic, sporadic, and background.  </span></p>

<p class="MsoListBullet"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><i><span lang="EN-US">Type:</span></i><span lang="EN-US"> [AADL]
Qualities common to a number of individuals that distinguish them as an identifiable
class.  In this standard the term type is used to characterize three classes:
component type, property type, data type.</span></p>

<p class="Appendix" style="margin: 6pt 0cm 12pt; text-indent: 0cm;"><a name="_Toc318320393"></a><a name="_Toc169684141"></a><a name="_Toc167033791"></a><a name="_Toc168661908"></a><a name="_Toc86725714"></a><a name="_Toc86220751"></a><a name="_Toc86220279"></a><a name="_Toc86220157"></a><a name="_Toc86219906"></a><a name="_Toc86219801"></a><a name="_Toc79295038"></a><a name="_Ref75328653"></a><a name="_Ref75328649"></a><a name="_Ref75328554"></a><a name="_Ref75328445"></a><a name="_Toc8550431"></a><a name="_Toc535729935"></a><a name="_Toc532013652"></a><a name="SYNTAX"></a><span lang="EN-US" style="">Appendix C <span style="font: 7pt &quot;Times New Roman&quot;;"> </span></span><span lang="EN-US">Syntax Summary</span></p>

<p class="InformNorm" style="margin-bottom: 18pt;"><span lang="EN-US">Informative</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This appendix provides a summary of the containment restrictions
imposed by different component categories, a summary of the syntax rules, and a
summary of the property owners for the AADL core language.</span></p>

<p class="appendix2"><a name="_Toc318320394"><span lang="EN-US">C.1<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Constraints on Component Containment</span></a><span lang="EN-US"> </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The AADL has the following restrictions on the constructs that are
permitted in the component type and component implementation of each component
category.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="103" style="width: 77.4pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">Category</span></b></p>
  </td>
  <td width="271" valign="top" style="width: 203.35pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><b><span lang="EN-US">Type</span></b></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><b><span lang="EN-US">Implementation</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">abstract</span></b></p>
  </td>
  <td width="271" valign="top" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">thread</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">thread group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">process</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">processor</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual processor</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">memory</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">device</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">system</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">data</span></b></p>
  </td>
  <td width="271" valign="top" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes (access)</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">subprogram</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">out event port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">out event data port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">parameter</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" valign="top" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table" style="margin-left: 36pt; text-indent: -18pt;"><span lang="EN-US" style="font-size: 10pt; font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US" style="font-size: 10pt;">data</span></p>
  <p class="table" style="margin-left: 36pt; text-indent: -18pt;"><span lang="EN-US" style="font-size: 10pt; font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US" style="font-size: 10pt;">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">subprogram group</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" valign="top" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">thread</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Mode: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr>
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">thread group</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">thread</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">thread group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">process</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">thread</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">thread group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">processor</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">memory</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual processor</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">virtual processor</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual processor</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes </span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">memory</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides bus access </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">memory</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">bus</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">virtual bus</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">none</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">device</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
 <tr style="height: 61.6pt;">
  <td width="103" style="width: 77.4pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt; height: 61.6pt;">
  <p align="center" class="table" style="text-align: center;"><b><span lang="EN-US" style="font-size: 10pt;">system</span></b></p>
  </td>
  <td width="271" style="width: 203.35pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Features: </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">port</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires subprogram group access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires bus access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">provides data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">requires data access</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">feature</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flow specifications: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
  <td width="182" style="width: 136.7pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; padding: 0cm 5.4pt; height: 61.6pt;">
  <p class="table"><span lang="EN-US" style="font-size: 10pt;">Subcomponents:</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">data</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">subprogram group</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">process</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">processor</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual
  processor                                                                                                                                                                                                                                         
  </span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">memory</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">virtual bus</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">device</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">system</span></p>
  <p class="table-indent"><span lang="EN-US" style="font-family: Symbol;">·<span style="font: 7pt &quot;Times New Roman&quot;;">        
  </span></span><span lang="EN-US">abstract</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Subprogram calls: no</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Connections: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Flows: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Modes: yes</span></p>
  <p class="table-indent" style="margin-left: 0cm; text-indent: 0cm;"><span lang="EN-US">Properties: yes</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"> </span></p>

<pre><span lang="EN-US"> </span></pre>

<p class="appendix2"><a name="_Toc318320395"><span lang="EN-US">C.2<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">AADL Core Language Syntax Rules</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following is a summary of the AADL syntax as specified in the
different sections of the document.</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US"><span class="HTMLPreformattedChar1">AADL_specification ::= </span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    ( package_spec | property_set )<sup>+</sup></span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">package_spec ::= </span></pre><pre><span lang="EN-US">    <b>package</b> <i>defining</i>_package_name </span></pre><pre><span lang="EN-US">     ( <b>public</b> package_declarations [ <b>private</b> package_declarations ]</span></pre><pre><span lang="EN-US">       | <b>private</b> package_declarations )</span></pre><pre><span lang="EN-US">    [ <b>properties</b> ( { basic_property_association }<sup>+ </sup> |                </span></pre><pre><span lang="EN-US">      none_statement ) ]</span></pre><pre><b><span lang="EN-US">end</span></b><span lang="EN-US"> <i>defining</i>_package_name ;</span></pre>

<p class="MsoHeader"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> </span></p>

<p class="MsoHeader"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">package_declarations
::= </span></p>

<p class="MsoHeader"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">    {
name_visibility_declaration }* { AADL_declaration }*</span></p>

<pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">package_name ::= </span></pre><pre><span lang="EN-US">    { <i>package</i>_identifier <b>::</b> }<sup>*</sup> <i>package</i>_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">none_statement ::= <b>none ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">AADL_declaration ::= </span></pre><pre><span lang="EN-US">    classifier_declaration </span></pre><pre><span lang="EN-US">    | annex_library </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">classifier_declaration ::= </span></pre><pre><span lang="EN-US">    component_classifier_declaration | feature_group_classifier_declaration</span></pre><pre><span lang="EN-US">   </span></pre><pre><span lang="FR">component_classifier_declaration ::= </span></pre><pre><span lang="FR">    component_type | component_type_extension | </span></pre><pre><span lang="FR">    component_implementation | component_implementation_extension</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="EN-US">feature_group_classifier_declaration ::= </span></pre><pre><span lang="EN-US">        feature_group_type | feature_group_type_extension</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">name_visibility_declaration ::= </span></pre><pre><span lang="EN-US">        import_declaration |</span></pre><pre><span lang="EN-US">        alias_declaration </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">import_declaration ::= </span></pre><pre><span lang="EN-US">       <b>with </b>( package_name | <i>property_set</i>_identifier )</span></pre><pre><span lang="EN-US">            { <b>,</b> ( package_name | <i>property_set</i>_identifier ) }<sup>* </sup><b>; </b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">alias_declaration ::= </span></pre><pre><span lang="EN-US">    ( <i>defining_</i>identifier <b>renames package </b>package<i>_</i>name <b>; </b>) |</span></pre><pre><span lang="EN-US">    ( [ <i>defining</i>_identifier ] <b>renames </b></span></pre><pre><span lang="EN-US">      ( component_category unique_component_type_reference | </span></pre><pre><span lang="EN-US">      <b>feature group </b>unique_feature_group_type_reference ) <b>; </b>) |</span></pre><pre><span lang="EN-US">    ( <b>renames</b> package_name::<b>all ; </b>)</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">The <b>properties</b> subclause of the package
is optional, or requires an explicit empty subclause declaration.  The latter
is provided to accommodate AADL modeling guidelines that require explicit
documentation of empty subclauses. An empty subclause declaration consists of
the reserved word of the subclause and a none statement     ( <b>none ;</b> ).</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">component_type ::= </span></pre><pre><span lang="EN-US">  component_category <i>defining_component_type_</i>identifier</span></pre><pre><span lang="EN-US">  [ <b>prototypes </b>( {<b> </b>prototype }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">  [ <b>features</b> ( { feature }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">  [ <b>flows</b> ( { flow_spec }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">  </span><span lang="FR">[ modes_subclause | requires_modes_subclause ]</span></pre><pre><span lang="FR">  </span><span lang="EN-US">[ <b>properties</b> ( </span></pre><pre><span lang="EN-US">    { <i>component_type</i>_property_association | contained_property_association  }<sup>+</sup> </span></pre><pre><span lang="EN-US">    | none_statement ) ]</span></pre><pre><span lang="EN-US">  { annex_subclause }<sup>*</sup></span></pre><pre><span lang="EN-US">  <b>end</b> <i>defining_component_type</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_type_extension ::= </span></pre><pre><span lang="EN-US">  component_category <i>defining_component_type_</i>identifier </span></pre><pre><span lang="EN-US">    <b>extends</b> unique_component_type_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">  [ <b>prototypes </b>( {<b> </b>prototype | prototype_refinement }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">  [ <b>features</b> ( { feature | feature_refinement }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">  [ <b>flows</b> ( { flow_spec | flow_spec_refinement }<sup>+</sup> | none_statement ) ]</span></pre><pre style="margin-right: -4.5pt;"><span lang="EN-US">  </span><span lang="FR">[ modes_subclause | requires_modes_subclause ]</span></pre><pre><span lang="FR">  </span><span lang="EN-US">[ <b>properties</b> ( </span></pre><pre><span lang="EN-US">    { <i>component_type</i>_property_association | contained_property_association  }<sup>+</sup> </span></pre><pre><span lang="EN-US">    | none_statement ) ]</span></pre><pre><span lang="EN-US">  { annex_subclause }<sup>*</sup></span></pre><pre><span lang="EN-US">  <b>end</b> <i>defining_component_type</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_category ::=</span></pre><pre><span lang="EN-US">             abstract_component_category                 </span></pre><pre><span lang="EN-US">           | software_category</span></pre><pre><span lang="EN-US">           | execution_platform_category</span></pre><pre><span lang="EN-US">           | composite_category</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">abstract_component_category ::= <b>abstract</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">software_category ::= <b>data </b>| <b>subprogram </b>| <b>subprogram group </b>| </span></pre><pre><span lang="EN-US">                      </span><b><span lang="EN-US">thread</span></b><span lang="EN-US"> | <b>thread group</b> | <b>process </b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">execution_platform_category ::= </span></pre><pre><span lang="EN-US">        <b>memory </b>| <b>processor</b> | <b>bus</b> | <b>device</b> | <b>virtual processor</b> | <b>virtual bus</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">composite_category ::= <b>system</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_component_type_reference ::= </span></pre><pre><span lang="EN-US">    [ package_name <b>::</b> ] <i>component_type</i>_identifier</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading"><span lang="EN-US">NOTES: The above grammar rules
characterize the common syntax for all component categories. The sections
defining each of the component categories will specify further restrictions on
the syntax. </span></p>

<p class="MsoNoteHeading"><span lang="EN-US">The <b>prototypes</b>,<b> features</b>,
<b>flows</b>, <b>modes</b>, <b>annex</b>, and <b>properties</b> subclauses of
the component type are optional, or require an explicit empty subclause
declaration.  The latter is provided to accommodate AADL modeling guidelines
that require explicit documentation of empty subclauses. An empty subclause
declaration consists of the reserved word of the subclause and a none
statement  ( <b>none ;</b> ). </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">component_implementation ::= </span></pre><pre><span lang="EN-US">   component_category <b>implementation</b></span></pre><pre><b><span lang="EN-US">   </span></b><i><span lang="EN-US">defining_</span></i><span lang="EN-US">component_implementation_name [ prototype_bindings ]</span></pre><pre><span lang="EN-US">  [ <b>prototypes </b>( {<b> </b>prototype }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">   [ <b>subcomponents </b>( { subcomponent }<sup>+ </sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>calls </b>( { subprogram_call_sequence }<sup>+ </sup> | none_statement ) ]   </span></pre><pre><span lang="EN-US">   [ <b>connections</b> ( { connection }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>flows </b>(<b> </b>{ flow_implementation | </span></pre><pre><span lang="EN-US">               end_to_end_flow_spec }<sup>+</sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [modes_subclause<b> </b>]</span></pre><pre><span lang="EN-US">   [ <b>properties</b> ( { property_association | contained_property_association  }<sup>+</sup> </span></pre><pre><span lang="EN-US">                  | none_statement ) ]</span></pre><pre><span lang="EN-US">   { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">   end</span></b><span lang="EN-US"> <i>defining</i><i>_</i>component_implementation_name <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="FR">component_implementation_name ::= </span></pre><pre><span lang="FR">        <i>component_type</i>_identifier . <i>component_implementation</i>_identifier</span></pre><pre><span lang="FR"><br />
component_implementation_extension ::= </span></pre><pre><span lang="FR">   </span><span lang="EN-US">component_category <b>implementation</b></span></pre><pre><b><span lang="EN-US">   </span></b><i><span lang="EN-US">defining_</span></i><span lang="EN-US">component_implementation_name</span></pre><pre><b><span lang="EN-US">   </span></b><b><span lang="EN-US">extends</span></b><span lang="EN-US"> unique_component_implementation_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">   [ <b>prototypes </b>( {<b> </b>prototype | prototype_refinement }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">   [ <b>subcomponents </b></span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">( { subcomponent | subcomponent_refinement }<sup>+  </sup>| none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>calls </b>( { subprogram_call_sequence }<sup>+ </sup> | none_statement ) ]   </span></pre><pre><span lang="EN-US">   [ <b>connections</b> </span></pre><pre><span lang="EN-US">        ( { connection | connection_refinement }<sup>+ </sup> | none_statement ) ]</span></pre><pre><span lang="EN-US">   [ <b>flows </b>(<b> </b>{ flow_implementation <sup> </sup>| flow_implementation_refinement |</span></pre><pre><span lang="EN-US">               end_to_end_flow_spec | end_to_end_flow_spec_refinement }<sup>+</sup> </span></pre><pre><span lang="EN-US">               | none_statement ) ]</span></pre><pre style="margin-right: -4.5pt;"><span lang="EN-US">   [modes_subclause ]</span></pre><pre><span lang="EN-US">   [ <b>properties</b> ( { property_association | contained_property_association }<sup>+</sup> </span></pre><pre><span lang="EN-US">     | none_statement ) ]</span></pre><pre><span lang="EN-US">   { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">   end   </span></b><i><span lang="EN-US">defining_</span></i><span lang="EN-US">component_implementation_name ;</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_component_implementation_reference ::= </span></pre><pre><span lang="EN-US">    [ package_name <b>::</b> ] component_implementation_name</span></pre>

<p class="Note"><span lang="EN-US">NOTES: The above grammar rules characterize the
common syntax for all component categories. The sections defining each of the
component categories will specify further restrictions on the syntax.</span></p>

<p class="Note"><span lang="EN-US">The <b>prototypes</b>,<b> subcomponents</b>, <b>connections</b>,
<b>calls</b>, <b>flows</b>, <b>modes</b>, and <b>properties</b> subclauses of
the component implementation are optional or if used and empty, require an
explicit empty declaration.  The latter is provided to accommodate AADL
modeling guidelines that require explicit documentation of empty subclauses. An
empty subclause declaration consists of the reserved word of the subclause and
a none statement ( <b>none ;</b> ).</span></p>

<p class="Note"><span lang="EN-US">The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">annex_subclause</span><span lang="EN-US"> of the component
implementation is optional.</span></p>

<p class="Note"><span lang="EN-US">The <b>refines type</b> subclause of AADL V1 has
been removed.  Its role was to allow association of implementation-specific
property values to features and flow specifications declared in the component
type. The same can be achieved by contained property associations whose <b>applies
to </b>subclause names the feature or flow specification.</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">subcomponent ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subcomponent</i>_identifier : </span></pre><pre><span lang="EN-US">       component_category </span></pre><pre><span lang="EN-US">     [ unique_component_classifier_reference [prototype_bindings] </span></pre><pre><span lang="EN-US">       | <i>prototype</i>_identifier ]</span></pre><pre><span lang="EN-US">      [ array_dimensions [ array_element_implementation_list ] ] </span></pre><pre><span lang="EN-US">       [ <b>{</b> { <i>subcomponent</i>_property_association </span></pre><pre><span lang="EN-US">            | contained_property_association }<sup>+</sup> <b>} </b>] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ component_in_modes ]<b> ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">subcomponent_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subcomponent</i>_identifier : <b>refined to</b></span></pre><pre><span lang="EN-US">       component_category </span></pre><pre><span lang="EN-US">         [ unique_component_classifier_reference [ prototype_bindings ] </span></pre><pre><span lang="EN-US">         | <i>prototype</i>_identifier ]</span></pre><pre><span lang="EN-US">         [ array_dimensions [ array_element_implementation_list ] ]</span></pre><pre><span lang="EN-US">       [ <b>{</b> { <i>subcomponent</i>_property_association </span></pre><pre><span lang="EN-US">             | contained_property_association }<sup>+</sup> <b>} </b>]</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ component_in_modes ]<b> ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_component_classifier_reference ::=</span></pre><pre><span lang="EN-US">        ( unique_component_type_reference </span></pre><pre><span lang="EN-US">        | unique_component_implementation_reference )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_dimensions ::=</span></pre><pre><span lang="EN-US">    { array_dimension  }<sup>+</sup> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_dimension ::=</span></pre><pre><span lang="EN-US">    <b>[</b> [ array_dimension_size ] <b>]</b> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_dimension_size ::= </span></pre><pre><span lang="EN-US">   numeral | unique_property_constant_identifier | unique_property_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_element_implementation_list ::=</span></pre><pre><span lang="EN-US">    <b>(</b> unique_component_implementation_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">      { <b>, </b>unique_component_implementation_reference [ prototype_bindings ] }<sup>*</sup> <b>)</b> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">-- array selection used in contained property association and references</span></pre><pre><span lang="EN-US">array_selection_identifier ::=</span></pre><pre><span lang="EN-US">    identifier array_selection</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">array_selection ::=</span></pre><pre><span lang="EN-US">    {<b> [ </b>selection_range <b>] </b>}<sup>+</sup>    </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">selection_range ::=</span></pre><pre><span lang="EN-US">    numeral [ <b>..</b> numeral ]</span></pre>

<p class="Note"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">The above grammar rules characterize the common
syntax for subcomponent of all component categories. The sections defining each
of the component categories will specify further restrictions on the syntax.</span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">prototype ::= </span></pre><pre><span lang="EN-US">    <i>defining_prototype</i>_identifier <b>:</b> </span></pre><pre><span lang="EN-US">      ( component_prototype </span></pre><pre><span lang="EN-US">      | feature_group_type_prototype</span><span lang="EN-US"> </span></pre><pre><span lang="EN-US">      | feature_prototype ) </span></pre><pre><span lang="EN-US">      [ <b>{</b> { <i>prototype</i>_property_association }<sup>+</sup> <b>} </b>] <b>; </b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_prototype ::= </span></pre><pre><span lang="EN-US">    component_category [ </span><span lang="EN-US">unique_component_classifier_reference ] [ <b>[] </b>]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_type_prototype ::=</span></pre><pre><span lang="EN-US">    </span><b><span lang="EN-US">feature group</span></b><span lang="EN-US"> [ unique_feature_group_type_reference ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_prototype ::=</span></pre><pre><span lang="EN-US">    </span><span lang="EN-US">[ <b> in </b>| <b>out </b>] <b>feature</b> [unique_component_classifier_reference ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">prototype_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_prototype</i>_identifier <b>:</b> <b>refined to </b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">(<b> </b>component_prototype </span><span lang="EN-US"> </span></pre><pre><span lang="EN-US">      | feature_group_type_prototype </span></pre><pre><span lang="EN-US">      | feature_prototype ) </span></pre><pre><span lang="EN-US">      [ <b>{</b> { <i>prototype</i>_property_association }<sup>+</sup> <b>} </b>]<b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="DE">prototype_bindings ::=</span></pre><pre><span lang="DE">    </span><b><span lang="DE" style="font-size: 9pt;">(</span></b><span lang="DE"> prototype_binding { <b>, </b>prototype_ binding }<sup>*</sup> <b>)</b></span></pre><pre><span lang="DE"> </span></pre><pre><span lang="EN-US">prototype_binding ::=</span></pre><pre><span lang="EN-US">    <i>prototype</i>_identifier <b>=&gt; </b></span></pre><pre><span lang="EN-US">      ( component_prototype_actual | component_prototype_actual_list</span></pre><pre><span lang="EN-US">      | feature_group_type_prototype_actual | feature_prototype_actual )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_prototype_actual ::=</span></pre><pre><span lang="EN-US">    component_category </span></pre><pre><span lang="EN-US">         ( unique_component_classifier_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">           | <i>prototype</i>_identifier ) </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">component_prototype_actual_list ::=</span></pre><pre><span lang="EN-US">    <b>( </b>component_prototype_actual { <b>, </b>component_prototype_actual }<sup>*</sup> <b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_type_prototype_actual ::=</span></pre><pre><span lang="EN-US">      ( <b>feature group</b> unique_feature_group_type_reference [ prototype_bindings ]<i> </i>)</span></pre><pre><span lang="EN-US">      | (<b>feature group</b> <i>feature_group_type_prototype</i>_identifier ) </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_prototype_actual ::=</span></pre><pre><span lang="EN-US">      ( (( <b>in </b>| <b>out </b>| <b>in out</b>) ( <b>event</b> | <b>data</b> | <b>event data</b> ) <b>port </b>) |<b> </b></span></pre><pre><span lang="EN-US">      ( ( <b>requires </b>| <b>provides </b>) </span></pre><pre><span lang="EN-US">          ( <b>bus</b> | <b>data</b> | <b>subprogram group</b> | <b>subprogram</b> ) <b>access </b>)</span></pre><pre><b><span lang="EN-US">          [ </span></b><span lang="EN-US">unique_component_classifier_reference ] )</span></pre><pre><span lang="EN-US">      | ( [ <b> in </b>| <b>out </b>] <b>feature</b> <i>feature_prototype</i>_identifier )</span></pre><pre><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="FR">annex_subclause ::=</span></pre><pre><span lang="FR">    <b>annex</b> <i>annex</i>_identifier ( </span></pre><pre><span lang="FR">      </span><span lang="EN-US">( <b>{** </b>annex_specific_language_constructs <b>**} </b>) |  <b>none </b>)<b> </b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">[ in_modes ] ;</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">annex_library ::=</span></pre><pre><span lang="EN-US">    <b>annex</b> <i>annex</i>_identifier </span></pre><pre><span lang="EN-US">      (( <b>{** </b>annex_specific_reusable_constructs <b>**} </b>) | <b>none</b> ) ;</span></pre><pre><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">subprogram_call_sequence ::=</span></pre><pre><span lang="EN-US">    <i>defining_call_sequence</i>_identifier <b>:</b> </span></pre><pre><span lang="EN-US">    <b>{</b> { subprogram_call }<sup>+</sup> <b>}</b></span></pre><pre><span lang="EN-US">         [ <b>{</b> { <i>call_sequence</i>_property_association }<sup>+</sup> <b>} </b>] [ in_modes ] <b>;</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">subprogram_call ::= </span></pre><pre><span lang="EN-US">    <i>defining_call</i>_identifier <b>:</b> <b>subprogram</b> called_subprogram</span></pre><pre><span lang="EN-US">       [ <b>{</b> { <i>subcomponent_call</i>_property_association }<sup>+</sup> <b>} </b>] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">called_subprogram ::=</span></pre><pre><span lang="EN-US">    -- identification by classifier</span></pre><pre><span lang="EN-US">    <i>subprogram</i>_unique_component_classifier_reference  </span></pre><pre><span lang="EN-US">    | ( <i>data</i>_unique_component_type_reference</span></pre><pre><span lang="EN-US">        <b>.</b> <i>data_provides_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    | ( <i>subprogram_group</i>_unique_component_type_reference </span></pre><pre><span lang="EN-US">        <b>. </b><i>provides_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    | ( <i>abstract</i>_unique_component_type_reference </span></pre><pre><span lang="EN-US">        <b>. </b><i>provides_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    | ( <i>feature_group_</i>identifier </span></pre><pre><span lang="EN-US">        <b>. </b><i>requires_subprogram_access</i>_identifier )</span></pre><pre><span lang="EN-US">    -- identification by prototype</span></pre><pre><span lang="EN-US">    | <i>component_prototype</i>_identifier</span></pre><pre><span lang="EN-US">    -- identification by processor subprogram access feature</span></pre><pre><span lang="EN-US">    | ( <b>processor </b>. <i>provides_subprogram_access_</i>identifier )</span></pre><pre><span lang="EN-US">    -- identification by subprogram instance</span></pre><pre><span lang="EN-US">    | <i>subprogram_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    | ( <i>subprogram_group_subcomponent</i>_identifier <b>. </b></span></pre><pre><b><span lang="EN-US">        </span></b><i><span lang="EN-US">provides_subprogram_access</span></i><span lang="EN-US">_identifier )</span></pre><pre><span lang="EN-US">    | <i>requires_subprogram_access_</i>identifier</span></pre><pre><span lang="EN-US">    | ( <i>requires</i>_<i>subprogram_group_access</i>_identifier <b>. </b></span></pre><pre><b><span lang="EN-US">        </span></b><i><span lang="EN-US">provides_subprogram_access</span></i><span lang="EN-US">_identifier )   </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="Note"><span lang="EN-US">NOTES: </span></p>

<p class="Note"><span lang="EN-US">Subprogram type and implementation declarations
follow the syntax rules for component types and implementations.  Subprogram
instances may be implied by subprogram calls referring to subprogram
classifiers, or subprogram instances may be declared explicitly as subprogram
subcomponents and made accessible to calls through provides and requires
subprogram access declarations.</span></p>

<pre><span lang="EN-US"> </span></pre>

<p class="MsoNormal"><span class="HTMLPreformattedChar1"><span lang="EN-US">feature
::= </span></span></p>

<pre><span lang="EN-US">    ( abstract_feature_spec |</span></pre><pre><span lang="EN-US">      port_spec | </span></pre><pre><span lang="EN-US">      feature_group_spec |</span></pre><pre><span lang="EN-US">      subcomponent_access_spec |</span></pre><pre><span lang="EN-US">     parameter_spec )</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">    [ array_dimension ]</span></pre><pre><span lang="EN-US">    [ <b>{</b> { <i>feature</i>_contained_property_association }<sup>+ </sup><b>} </b>] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">subcomponent_access_spec ::= </span></pre><pre><span lang="EN-US">    subprogram_access_spec | subprogram_group_access_spec </span></pre><pre><span lang="EN-US">    | data_access_spec | bus_access_spec</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_refinement ::= </span></pre><pre><span lang="EN-US">    </span><span lang="FR">abstract_feature_refinement</span></pre><pre><span lang="FR">    port_refinement | </span></pre><pre><span lang="FR">    feature_group_refinement |</span></pre><pre><span lang="FR">    subcomponent_access_refinement |</span></pre><pre><span lang="FR">    parameter_refinement</span></pre><pre style="page-break-after: avoid;"><span lang="FR">    [ array_dimension ]</span></pre><pre><span lang="FR">    [ <b>{</b> { <i>feature</i>_contained_property_association }<sup>+ </sup><b>} </b>] <b>;</b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">subcomponent_access_refinement ::= </span></pre><pre><span lang="FR">    subprogram_access_refinement | subprogram_group_access_refinement </span></pre><pre><span lang="FR">    </span><span lang="EN-US">| data_access_refinement | bus_access_refinement</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">abstract_feature_spec ::=</span></pre><pre><b><span lang="EN-US">     </span></b><i><span lang="EN-US">defining_abstract_feature_</span></i><span lang="EN-US">identifier :</span></pre><pre><b><span lang="EN-US">     </span></b><span lang="EN-US"> [ <b> in </b>| <b>out </b>] <b>feature</b> [ <i>feature_prototype</i>_identifier ]</span></pre><pre><span lang="EN-US">abstract_feature_spec ::=</span></pre><pre><b><span lang="EN-US">     </span></b><i><span lang="EN-US">defining_abstract_feature_</span></i><span lang="EN-US">identifier :</span></pre><pre><b><span lang="EN-US">     </span></b><span lang="EN-US"> [ <b> in </b>| <b>out </b>] <b>feature</b> [ <i>feature_prototype</i>_identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">abstract_feature_refinement ::= </span></pre><pre><span lang="EN-US">    ( <i>defining<b>_</b>abstract_feature_</i>identifier<b> </b>:<b> refined to</b></span></pre><pre><span lang="EN-US">      [ <b> in </b>| <b>out </b>] <b>feature</b> [ <i>feature_prototype</i>_identifier ] )</span></pre><pre><span lang="EN-US">    | port_refinement | feature_group_refinement </span></pre><pre><span lang="EN-US">    | subcomponent_access_refinement | parameter_refinement</span></pre><pre><span lang="EN-US">        </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">-- Defining the content structure of a feature group</span></pre><pre><span lang="EN-US">feature_group_type ::=</span></pre><pre><span lang="EN-US">    <b>feature</b> <b>group</b> <i>defining</i>_identifier</span></pre><pre><span lang="EN-US">    [ <b>prototypes </b>( {<b> </b>prototype }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">    [ <b>features </b>{<b> </b>feature }<sup>+</sup> ]</span></pre><pre><span lang="EN-US">    [ <b>inverse of</b> unique_feature_group_type_reference ]</span></pre><pre><span lang="EN-US">    [ <b>properties</b> ( { <i>feature_group</i>_contained_property_association }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">    { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">end</span></b><span lang="EN-US"> <i>defining</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_type_extension ::=</span></pre><pre><span lang="EN-US">    <b>feature</b> <b>group</b> <i>defining</i>_identifier </span></pre><pre><span lang="EN-US">    <b>extends</b> unique_feature_group_type_reference [ prototype_bindings ]</span></pre><pre><span lang="EN-US">    [ <b>prototypes </b>( {<b> </b>prototype | prototype_refinement }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US">    [ <b>features </b>{<b> </b>feature | feature_refinement }<sup>+</sup> ]</span></pre><pre><span lang="EN-US">    [ <b>inverse of</b> unique_feature_group_type_reference ]</span></pre><pre><span lang="EN-US">[ <b>properties</b> ( { <i>feature_group</i>_contained_property_association }<sup>+</sup> | none_statement ) ] </span></pre><pre><span lang="EN-US"> { annex_subclause }<sup>*</sup></span></pre><pre><b><span lang="EN-US">end</span></b><span lang="EN-US"> <i>defining</i>_identifier <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">-- declaring a feature group as component feature</span></pre><pre><span lang="EN-US">feature_group_spec ::=</span></pre><pre><span lang="EN-US">  <i>defining_feature_group</i>_identifier : [ <b>in </b>| <b>out </b>] <b>feature</b> <b>group </b></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">[ [ <b>inverse of</b> ] </span></pre><pre><span lang="EN-US">        ( unique_feature_group_type_reference | <i>prototype­_</i>identifier ) ] </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_refinement ::=</span></pre><pre><span lang="EN-US">  <i>defining_feature_group</i>_identifier : <b>refined to </b>[ <b>in </b>| <b>out </b>] <b>feature</b> <b>group </b></span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ [ <b>inverse of </b>] </span></pre><pre><span lang="EN-US">          ( unique_feature_group_type_reference | <i>prototype_</i>identifier ) ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_feature_group_type_reference ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    [ package_name <b>::</b> ] <i>feature_group_type</i>_identifier </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">port_spec ::=  </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">    <i>defining_port</i>_identifier : ( <b>in</b> | <b>out</b> | <b>in out</b> ) port_type </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">port_refinement ::=  </span></pre><pre><span lang="EN-US">    <i>defining_port</i>_identifier : <b>refined to</b> </span></pre><pre><span lang="EN-US">        ( <b>in</b> | <b>out</b> | <b>in out</b> ) port_type </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="FR">port_type ::= </span></pre><pre><b><span lang="FR">     data port</span></b><span lang="FR"> [ <i>data</i>_unique_component_classifier_reference </span></pre><pre><span lang="FR">               </span><span lang="EN-US">| <i>data_component_prototype</i>_identifier ] </span></pre><pre><span lang="EN-US">    |  <b>event data port</b> [ <i>data</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">                       | <i>data_component_prototype_</i>identifier ]</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    |  <b>event port </b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre>

<p class="MsoNormal"><span lang="FR"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- The requires and provides subprogram access subclause</span></pre><pre><span lang="EN-US">subprogram_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_subprogram_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>subprogram</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><i><span lang="EN-US">subprogram</span></i><span lang="EN-US">_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subprogram_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>subprogram</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">-- The requires and provides subprogram group access subclause</span></pre><pre><span lang="EN-US">subprogram_group_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_subprogram_group_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>subprogram group</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram_group</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><i><span lang="EN-US">subprogram_group</span></i><span lang="EN-US">_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>subprogram_group_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>subprogram group</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>subprogram_group</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">parameter_spec ::=  </span></pre><pre><span lang="EN-US">    <i>defining_parameter</i>_identifier : </span></pre><pre><span lang="EN-US">        ( <b>in</b> | <b>out</b> | <b>in out</b> ) <b>parameter</b> </span></pre><pre><span lang="EN-US">        [ <i>data</i>_unique_component_classifier_reference |</span></pre><pre><span lang="EN-US">          <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">parameter_refinement ::=  </span></pre><pre><span lang="EN-US">    <i>defining_parameter</i>_identifier : <b>refined to</b> </span></pre><pre><span lang="EN-US">        ( <b>in</b> | <b>out</b> | <b>in out</b> ) <b>parameter</b> </span></pre><pre><span lang="EN-US">        [ <i>data</i>_unique_component_classifier_reference |</span></pre><pre><span lang="EN-US">          <i>prototype_</i>identifier </span><span lang="EN-US">]</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- The requires and provides subcomponent access subclause</span></pre><pre><span lang="EN-US">data_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_data_component_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>data</b> <b>access</b> </span></pre><pre><span lang="EN-US">       [ <i>data</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>prototype_</i>identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">data_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>data_component_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>data</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>data</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>prototype</i>_identifier ]</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">-- The requires and provides bus access subclause</span></pre><pre><span lang="EN-US">bus_access_spec ::=</span></pre><pre><span lang="EN-US">    <i>defining</i><i>_bus_access</i>_identifier :  </span></pre><pre><span lang="EN-US">       ( <b>provides </b>| <b> requires</b> ) <b>bus</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>bus</i>_unique_component_classifier_reference </span></pre><pre><span lang="EN-US">        | <i>prototype</i>_identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">bus_access_refinement ::=</span></pre><pre><span lang="EN-US">    <i>defining_</i><i>bus_access</i>_identifier : <b>refined to </b></span></pre><pre><span lang="EN-US">        ( <b>provides </b>| <b> requires</b> ) <b>bus</b> <b>access</b> </span></pre><pre><span lang="EN-US">        [ <i>bus</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>prototype</i>_identifier ]</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">connection ::= </span></pre>

<p class="MsoNormal"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>defining_connection_</i>identifier
<b>:</b></span></span></p>

<pre><span lang="EN-US">    ( feature_connection</span></pre><pre><span lang="EN-US">    | port_connection </span></pre><pre><span lang="EN-US">    | parameter_connection</span></pre><pre><span lang="EN-US">    | access_connection</span></pre><pre><span lang="EN-US">    | feature_group_connection )</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    </span></span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ]</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    [ in_modes_and_transitions ] ;</span></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">connection_refinement ::= </span></pre>

<p class="MsoNormal"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>defining_connection_</i>identifier
<b>: refined to</b></span></span></p>

<pre><span lang="EN-US">    </span><span lang="FR">[ feature_connection_refinement</span></pre><pre><span lang="FR">    | port_connection_refinement </span></pre><pre><span lang="FR">    </span><span lang="EN-US">| parameter_connection_refinement</span></pre><pre><span lang="EN-US">    | access_connection_refinement</span></pre><pre><span lang="EN-US">    | feature_group_connection_refinement ]</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    </span></span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ]</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    [ in_modes_and_transitions ] ;</span></span></pre>

<p align="left" class="MsoNormal" style="text-align: left;"><span lang="EN-US"> </span></p>

<p align="left" class="MsoNormal" style="text-align: left;"><span class="HTMLPreformattedChar1"><span lang="EN-US">feature_connection ::= </span></span></p>

<pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>feature </b><i>source</i>_feature_reference </span></span><span lang="EN-US">connection_symbol</span></pre><pre><span lang="EN-US">   </span><span class="HTMLPreformattedChar1"><b><span lang="EN-US"> </span></b><i><span lang="EN-US">destination</span></i><span lang="EN-US">_feature_reference</span></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">connection_symbol ::= </span></pre><pre><span lang="EN-US">    directional_connection_symbol | bidirectional_connection_symbol</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">directional_connection_symbol ::= <b>-&gt;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">bidirectional_connection_symbol ::= </span><b><span lang="EN-US">&lt;-&gt;</span></b></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">feature_reference ::=</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    -- feature in the component type</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>component_type_feature</i>_identifier |</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    -- feature in a feature group of the component type</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <i>component_type_feature_group</i>_identifier <b>.</b> <i>feature</i>_identifier |</span></span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span><span lang="EN-US">   -- feature in a subcomponent</span></pre><pre><span lang="EN-US">    <i>subcomponent</i>_identifier <b>.</b> <i>feature</i>_identifier</span></pre><pre><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span><span lang="EN-US">   -- feature in a call</span></pre><pre><span lang="EN-US">    <i>subprogram_call</i>_identifier <b>.</b> <i>feature</i>_identifier</span></pre>

<p align="left" class="MsoNormal" style="text-align: left;"><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span></p>

<p align="left" class="MsoNormal" style="text-align: left;"><span class="HTMLPreformattedChar1"><span lang="EN-US">feature_connection_refinement ::= </span></span></p>

<pre><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>feature </b></span></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="FR">port_connection ::= </span></pre><pre><span lang="FR">    <b>port</b></span></pre><pre><span lang="FR">      <i>source_</i>port_connection_reference </span></pre><pre><span lang="FR">          connection_symbol </span></pre><pre><span lang="FR">        <i>destination_</i>port_connection_reference</span></pre><pre><b><span lang="FR"> </span></b></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">port_connection_refinement ::=</span></pre><pre><span lang="FR">    <b>port </b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">port_connection_reference ::= </span></pre><pre><span lang="FR">        -- port in the component type </span></pre><pre><span lang="FR">      <i>component_type_port</i>_identifier</span></pre><pre><span lang="FR">    |   </span></pre><pre><span lang="FR">        -- port in a subcomponent </span></pre><pre><span lang="FR">      <i>subcomponent</i>_identifier <b>.</b> <i>port</i>_identifier</span></pre><pre><span lang="FR">    </span><span lang="EN-US">|   </span></pre><pre><span lang="EN-US">        -- port element in a feature group of the component type</span></pre><pre><span lang="EN-US">      <i>component_type_feature_group</i>_identifier . <i>element_port</i>_identifier</span></pre><pre><span lang="EN-US">    |</span></pre><pre><span lang="EN-US">        -- data element in aggregate data port </span></pre><pre><span lang="EN-US">      <i>component_type_port</i>_identifier . <i>data_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- requires data access in the component type </span></pre><pre><span lang="EN-US">      <i>component_type_requires_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data subcomponent </span></pre><pre><span lang="EN-US">      <i>data_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data component provided by a subcomponent </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>provides_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data access element in a feature group of the component type</span></pre><pre><span lang="EN-US">     <i>component_type_feature_group</i>_identifier . <i>element_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |</span></pre><pre><span lang="EN-US">        -- access to element in a data subcomponent </span></pre><pre><span lang="EN-US">      <i>data_subcomponent</i>_identifier <b>.</b><i>data_subcomponent</i>_identifier </span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- processor port</span></pre><pre><span lang="EN-US">      <b>processor .</b> <i>processor_port</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- component itself as event or event data source</span></pre><pre><b><span lang="EN-US">      self </span></b><span lang="EN-US">. <i>event_or_event_data_source</i>_identifier </span></pre><pre><span lang="EN-US">-- Note: <b>data port</b>, <b>event data port</b>, and <b>event port</b> connections</span></pre><pre><span lang="EN-US">-- are replaced by <b>port</b> connections in AADL V2</span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">parameter_connection ::=</span></pre><pre><span lang="EN-US">    <b>parameter</b> <i>source_</i>parameter_reference</span></pre><pre><span lang="EN-US">        directional_connection_symbol <i>destination_</i>parameter_reference</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">parameter_connection_refinement ::=</span></pre><pre><span lang="EN-US">    <b>parameter</b>         </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">parameter_reference ::= </span></pre><pre><span lang="EN-US">        -- parameter in the thread or subprogram type </span></pre><pre><span lang="EN-US">      <i>component_type_parameter</i>_identifier [ . <i>data_subcomponent</i>_identifier ]</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- parameter in another subprogram call </span></pre><pre><span lang="EN-US">      <i>subprogram_call</i>_identifier <b>.</b> <i>parameter</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- data or event data port in the thread type </span></pre><pre><span lang="EN-US">        -- or an element of that port’s data</span></pre><pre><span lang="EN-US">      </span><i><span lang="FR">component_type_port</span></i><span lang="FR">_identifier [ . <i>data_subcomponent</i>_identifier ]</span></pre><pre><span lang="FR">    </span><span lang="EN-US">|   </span></pre><pre><span lang="EN-US">        -- data subcomponent in the thread or subprogram</span></pre><pre><span lang="EN-US">      <i>data_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- requires data access in the thread or subprogram type</span></pre><pre><span lang="EN-US">      <i>requires_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |</span></pre><pre><span lang="EN-US">        -- data access element in a feature group of the component type</span></pre><pre><span lang="EN-US">     <i>component_type_feature_group</i>_identifier . <i>element_data_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- port or parameter element in a feature group of the component type</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">      <i>component_type_feature_group</i>_identifier  . <i>element_port_or_parameter</i>_identifier </span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">access_connection ::=</span></pre><pre><span lang="EN-US">    [ <b>bus</b> | <b>subprogram</b> | <b>subprogram group </b>| <b>data</b> ] <b>access</b> </span></pre><pre><span lang="EN-US">     <i>source</i>_access_reference  connection_symbol <i>destination_</i>access_reference<i> </i></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">access_connection_refinement ::=</span></pre><pre><span lang="EN-US">      [ <b>bus</b> | <b>subprogram</b> | <b>subprogram group </b>| <b>data</b> ] <b>access</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">access_reference ::= </span></pre><pre><span lang="EN-US">        -- requires or provides access feature in the component type </span></pre><pre><span lang="EN-US"> </span></pre><pre><i><span lang="EN-US">      requires_access</span></i><span lang="EN-US">_identifier | <i> provides_access_</i>identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- requires or provides access feature in a feature group of the component type </span></pre><pre><i><span lang="EN-US">      feature_</span></i><span lang="EN-US">group_identifier <b>. </b><i>requires_access</i>_identifier </span></pre><pre><span lang="EN-US">    |   </span></pre><pre><i><span lang="EN-US">      feature_</span></i><span lang="EN-US">group_identifier <b>. </b><i>provides_access</i>_identifier </span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">       -- provides or requires access in a subcomponent </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>provides_access</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>requires_access</i>_identifier</span></pre><pre><span lang="EN-US">    | </span></pre><pre><span lang="EN-US">      <i>subprogram_call</i>_identifier <b>.</b> <i>requires_or_provides_access</i>_identifier</span></pre><pre><span lang="EN-US">        -- data, subprogram, subprogram group or bus being accessed</span></pre><pre><span lang="EN-US">      <i>data_subprogram_subprogram_group_or_bus_subcomponent</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- subprogram a processor being accessed</span></pre><pre><span lang="EN-US">      <b>processor .</b> <i>provides_subprogram_access</i>_identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre><span lang="EN-US">-- connection between feature groups of two subcomponents or between</span></pre><pre><span lang="EN-US">-- a feature group of a subcomponent and a feature group in the component type</span></pre><pre><span lang="EN-US">feature_group_connection ::=</span></pre><pre><span lang="EN-US">     <b>feature group</b> <i>source</i>_feature_group_reference </span></pre><pre><span lang="EN-US">        connection_symbol <i>destination</i>_feature_group_reference<i> </i></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">-- A feature group refinement can only add properties</span></pre><pre><span lang="EN-US">-- The source and destination of the connection does not have to be repeated</span></pre><pre><span lang="EN-US">feature_group_connection_refinement ::=</span></pre><pre><span lang="EN-US">        <b>feature group</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">feature_group_reference ::= </span></pre><pre><span lang="EN-US">        -- feature group in the component type </span></pre><pre><span lang="EN-US">      <i>component_type_feature_group</i>_identifier </span></pre><pre><span lang="EN-US">    | </span></pre><pre><span lang="EN-US">        -- feature group in a subcomponent </span></pre><pre><span lang="EN-US">      <i>subcomponent</i>_identifier <b>.</b> <i>feature_group</i>_identifier</span></pre><pre><span lang="EN-US">    |   </span></pre><pre><span lang="EN-US">        -- feature group element in a feature group of the component type</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">      <i>component_type_feature_group</i>_identifier . </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">          <i>element_feature_group_</i>identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">flow_spec ::= </span></pre><pre><span lang="EN-US">   flow_source_spec </span></pre><pre><span lang="EN-US">   | flow_sink_spec </span></pre><pre><span lang="EN-US">   | flow_path_spec</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_spec_refinement ::= </span></pre><pre><span lang="EN-US">   flow_source_spec_refinement </span></pre><pre><span lang="EN-US">   | flow_sink_spec_refinement </span></pre><pre><span lang="EN-US">   | flow_path_spec_refinement</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_source_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> <b>flow source</b> <i>out_</i>flow_feature<i>_</i>identifier </span></pre><pre><span lang="EN-US">        </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ in_modes ] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_sink_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> <b>flow sink</b> <i>in_</i>flow_feature_identifier </span></pre><pre><span lang="EN-US">        </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ in_modes ] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_path_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> <b>flow path</b> <i>in</i>_flow_feature_identifier <b>-&gt;</b> </span></pre><pre><span lang="EN-US">                             <i>out</i>_flow_feature_identifier </span></pre><pre><span lang="EN-US">        </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+ </sup><b>}</b> ] </span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">[ in_modes ] <b>;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">flow_source_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to flow source</b> </span></pre><pre><span lang="EN-US">        ( ( <b>{</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_transitions ] ) |</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">  in_modes_and_transitions ) <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_sink_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to flow sink</b> </span></pre><pre><span lang="EN-US">         ( ( <b>{</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_Transitions ] ) |</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">  in_modes_and_transitions ) <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_path_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_flow_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to flow path </b></span></pre><pre><b><span lang="EN-US">         </span></b><span lang="EN-US">( (<b> {</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_transitions ] ) |</span></pre><pre><b><span lang="EN-US">        </span></b><span lang="EN-US">  in_modes_and_transitions ) <b>;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">flow_feature_identifier ::=</span></pre><pre><span lang="EN-US">    <i>feature</i>_identifier </span></pre><pre><span lang="EN-US">    | <i>feature_group</i>_identifier</span></pre><pre><span lang="EN-US">    | <i>feature_group</i>_identifier <b>.</b> <i>feature</i>_identifier</span></pre><pre><span lang="EN-US">    | <i>feature_group</i>_identifier <b>.</b> <i>feature_group</i>_identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">flow_implementation ::=</span></pre><pre><span lang="EN-US">    ( flow_source_implementation</span></pre><pre><span lang="EN-US">    | flow_sink_implementation</span></pre><pre><span lang="EN-US">    | flow_path_implementation )</span></pre><pre><span lang="EN-US">    </span><span lang="EN-US">[ <b>{</b> { property_association }<sup>+</sup> <b>}</b> ]</span></pre><pre><span lang="EN-US">    [ in_modes_and_transitions ] <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_source_implementation ::=</span></pre><pre><span lang="EN-US">    <i>flow</i>_identifier : <b>flow source</b></span></pre><pre><span lang="EN-US">      {</span><span lang="EN-US"> subcomponent_flow_identifier <b>-&gt;</b> <i>connection</i>_identifier <b>-&gt;</b> }<sup>*</sup></span></pre><pre><span lang="EN-US">      <i>out_</i>flow_feature_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_sink_implementation ::=</span></pre><pre><span lang="EN-US">    <i>flow</i>_identifier : <b>flow sink</b></span></pre><pre><span lang="EN-US">      <i>in_</i></span><span lang="EN-US">flow_feature_identifier        </span></pre><pre><span lang="EN-US">      { <b>-&gt;</b></span><span lang="EN-US"> <i>connection</i>_identifier <b>-&gt;</b> subcomponent_flow_identifier }<sup>*</sup></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">flow_path_implementation ::= </span></pre><pre><span lang="EN-US">    <i>flow</i>_identifier : <b>flow path</b></span></pre><pre><span lang="EN-US">      <i>in</i>_</span><span lang="EN-US">flow_feature_identifier        </span></pre><pre><span lang="EN-US">      [ { <b>-&gt;</b></span><span lang="EN-US"> <i>connection</i>_identifier <b>-&gt;</b> subcomponent_flow_identifier }<sup>+</sup></span></pre><pre><span lang="EN-US">         <b>-&gt;</b> <i>connection</i>_identifier ]</span></pre><pre><span lang="EN-US">      <b>-&gt;</b> <i>out</i>_flow_feature_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">subcomponent_flow_identifier ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    ( <i>subcomponent</i>_identifier [ <b>.</b> <i>flow_spec</i>_identifier ] ) </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    | data_component_reference</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">data_component_reference ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <i>data_subcomponent_</i>identifier | <i>requires_data_access</i>_identifier</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    | <i>provides_data_access</i>_identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">end_to_end_flow_spec ::= </span></pre><pre><span lang="EN-US">    <i>defining_end_to_end_flow</i>_identifier : <b>end to end</b> <b>flow</b></span></pre><pre><span lang="EN-US">      <i>start</i></span><span lang="EN-US">_subcomponent_flow_or_etef_identifier  </span></pre><pre><span lang="EN-US">      { <b>-&gt;</b></span><span lang="EN-US"> <i>connection</i>_identifier </span></pre><pre><span lang="EN-US">        <b>-&gt;</b> <i>flow_path</i>_subcomponent_flow_or_etef_identifier }<sup>+</sup> </span></pre><pre><span lang="EN-US">    </span><span lang="EN-US">[ <b>{</b> ( property_association }<sup>+</sup> <b>}</b> ]</span></pre><pre><span lang="EN-US">    [ in_modes_and_transitions ] ;</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">end_to_end_flow_spec_refinement ::= </span></pre><pre><span lang="EN-US">    <i>defining_end_to_end_</i>identifier <b>:</b> </span></pre><pre><span lang="EN-US">        <b>refined to end to end flow</b> </span></pre><pre><span lang="EN-US">        ( <b>{</b> { property_association }<sup>+ </sup><b>}</b> [ in_modes_and_transitions ] </span></pre><pre><span lang="EN-US">        | in_modes_and_transitions </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">        ) <b>;</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">subcomponent_flow_or_etef_identifier ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">     subcomponent_flow_identifier | <i>end_to_end_flow_</i>identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">property_set ::= </span></pre><pre><span lang="EN-US">    <b>property set</b> <i>defining_­property_set</i>_identifier <b>is</b> </span></pre><pre><span lang="EN-US">       { import_declaration }<sup>*</sup></span></pre><pre><span lang="EN-US">       { property_type_declaration </span></pre><pre><span lang="EN-US">         | property_definition_declaration </span></pre><pre><span lang="EN-US">         | property_constant }<sup>*</sup></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <b>end</b> <i>defining_property_set</i>_identifier ;</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">property_type_declaration ::= </span></pre><pre><span lang="EN-US">     <i>defining_property_type</i>_identifier : <b>type</b> property_type <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_type ::=</span></pre><pre><span lang="EN-US">       <b>aadlboolean</b> | <b>aadlstring</b></span></pre><pre><b><span lang="EN-US"> </span></b><span lang="EN-US">    | enumeration_type | units_type</span></pre><pre><span lang="EN-US">     | number_type | range_type</span></pre><pre><span lang="EN-US">     | classifier_type</span></pre><pre><span lang="EN-US">     | reference_type</span></pre><pre><span lang="EN-US">     | record_type</span></pre><pre><span lang="EN-US">     </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">enumeration_type ::= </span></pre><pre><span lang="EN-US">     <b>enumeration ( </b><i>defining_enumeration_literal</i>_identifier </span></pre><pre><span lang="EN-US">                  { <b>,</b> <i>defining_enumeration_literal</i>_identifier }<sup>*</sup><b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">units_type ::= </span></pre><pre><span lang="EN-US">     <b>units </b>units_list</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">units_list ::= </span></pre><pre><b><span lang="EN-US">    (</span></b><span lang="EN-US"> <i>defining_unit</i>_identifier </span></pre><pre><span lang="EN-US">        { <b>,</b> <i>defining_unit</i>_identifier <b>=&gt;</b> <i>unit</i>_identifier <b>*</b> numeric_literal }<sup>*</sup> <b>)</b></span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre><span lang="EN-US">number_type ::=</span></pre><pre><span lang="EN-US">       <b>aadlreal </b>[ real_range ] [ <b>units</b> units_designator ]</span></pre><pre><span lang="EN-US">     | <b>aadlinteger</b> [ integer_range ] [ <b>units </b>units_designator ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">units_designator ::= </span></pre><pre><span lang="EN-US">     <i>units_</i>unique_property_type_identifier</span></pre><pre><span lang="EN-US">     |<b> </b>units_list</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">real_range ::= real_lower_bound <b>..</b> real_upper_bound</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">real_lower_bound ::= signed_aadlreal_or_constant </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">real_upper_bound ::= signed_aadlreal_or_constant </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_range ::= integer_lower_bound <b>..</b> integer_upper_bound</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_lower_bound ::= signed_aadlinteger_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_upper_bound ::= signed_aadlinteger_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlreal_or_constant ::=  </span></pre><pre><span lang="EN-US">    ( signed_aadlreal | [ sign ] <i>real_</i>property_constant_term )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlinteger_or_constant ::=  </span></pre><pre><span lang="EN-US">    ( signed_aadlinteger | [ sign ] <i>integer</i>_property_constant_term )</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">sign ::= <b>+</b> | <b>-</b> </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlinteger ::=</span></pre><pre><span lang="EN-US">    [ sign ] integer_literal  [ <i>unit</i>_identifier ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">signed_aadlreal ::= </span></pre><pre><span lang="EN-US">    [ sign ] real_literal [ <i>unit</i>_identifier ]</span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 0.0001pt;"><span lang="EN-US">range_type ::=</span></pre><pre><span lang="EN-US">      <b>range of </b>number_type</span></pre><pre><span lang="EN-US">    | <b>range of</b> <i>number_</i>unique_property_type_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">classifier_type ::=</span></pre><pre><b><span lang="EN-US">    classifier</span></b><span lang="EN-US"> </span></pre><pre><span lang="EN-US">    [ <b>( </b>classifier_category_reference { <b>,</b> classifier_category_reference }<sup>*</sup> <b>)</b> ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">classifier_category_reference ::= </span></pre><pre><span lang="EN-US">    -- AADL or Annex meta model classifier</span></pre><pre><span lang="EN-US">    <i>classifier</i>_qualified_meta_model_identifier  </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">qualified_meta_model_identifier ::= </span></pre><pre><span lang="EN-US">    [ <b>{</b> <i>annex</i>_identifier <b>}**</b> ] meta_model_class_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">meta_model_class_identifier ::= { identifier }<sup>+</sup></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">reference_type ::=</span></pre><pre><b><span lang="EN-US">     reference</span></b><span lang="EN-US">  [ <b>( </b>reference_category </span></pre><pre><span lang="EN-US">                   { <b>,</b> reference_category }<sup>* </sup><b>)</b> ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">reference_category ::= </span></pre><pre><span lang="EN-US">    -- AADL or Annex meta model named element</span></pre><pre><span lang="EN-US">    <i>named_element_</i>qualified_meta_model_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_property_type_identifier ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    [ <i>property_set</i>_identifier <b>::</b> ] <i>property_type</i>_identifier</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">record_type ::= </span></pre><pre><span lang="EN-US">    <b>record (</b> record_field</span></pre><pre><span lang="EN-US">             { <i>record_field</i> }<sup>* </sup><b>)</b></span></pre><pre><span lang="EN-US">record_field ::= </span></pre><pre><span lang="EN-US">    <i>defining_field</i>_identifier <b>:</b> [ <b>list of </b>] property_type_designator <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_type_designator ::= </span></pre><pre><span lang="EN-US">    unique_property_type_identifier |</span></pre><pre><span lang="EN-US">    property_type</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">property_definition_declaration ::= </span></pre><pre><span lang="EN-US">    <i>defining_property_name</i>_identifier<b>:</b></span></pre><pre><span lang="EN-US">        [ <b>inherit </b>]</span></pre><pre><span lang="EN-US">        ( single_valued_property | multi_valued_property )</span></pre><pre><span lang="EN-US">        <b>applies to</b> <b>( </b> property_owner { <b>,</b> property_owner }<sup>*</sup> <b>) ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">single_valued_property ::=</span></pre><pre><span lang="EN-US">    property_type_designator [ <b>=&gt;</b> <i>default</i>_property_expression ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">multi_valued_property ::=</span></pre><pre><b><span lang="EN-US">    </span></b><span lang="EN-US">{<b> list of </b>}<sup>+</sup> property_type_designator </span></pre><pre><span lang="EN-US">    [ <b>=&gt;</b> <i>default</i>_property_list_value</span></pre><pre><span lang="EN-US">    ]</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_owner ::= </span></pre><pre><span lang="EN-US">  -- AADL or Annex meta model named element</span></pre><pre><span lang="EN-US">    <i>named_element_</i>qualified_meta_model_identifier  |</span></pre><pre><span lang="EN-US">    unique_classifier_reference</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_classifier_reference ::=</span></pre><pre><span lang="EN-US">    package_name <b>::</b> classifier_identifier</span></pre>

<p class="Note"><span lang="EN-US">Note: Different from AADL V1 the <b>access</b>
keyword is no longer used in property definitions. The fact that a property
applies to an access feature is already specified in the applies to clause.</span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">property_constant ::= </span></pre><pre><span lang="EN-US">        single_valued_property_constant | multi_valued_property_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">single_valued_property_constant ::=</span></pre><pre><span lang="EN-US">    <i>defining_property_constant</i>_identifier <b>:</b> <b>constant</b> </span></pre><pre><span lang="EN-US">            property_type_designator</span></pre><pre><span lang="EN-US">        <b>=&gt;</b> <i>constant</i>_property_expression<b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">multi_valued_property_constant ::=</span></pre><pre><span lang="EN-US">    <i>defining_property_constant</i>_identifier <b>:</b> <b>constant</b> ( <b>list of</b> )<sup>+</sup></span></pre><pre><span lang="EN-US">            property_type_designator</span></pre><pre><span lang="EN-US">        <b>=&gt;</b> <i>constant</i>_property_list_value <b>;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_property_constant_identifier ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">   [ <i>property_set</i>_identifier <b>::</b> ] <i>property_constant</i>_identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="EN-US">basic_property_association ::= </span></pre><pre><span lang="EN-US">  unique_property_identifier </span></pre><pre><span lang="EN-US">( <b>=&gt;</b> | <b>+=&gt; </b>)</span></pre><pre><span lang="EN-US">      [ <b>constant</b> ] property_value<sup> </sup><b>;</b></span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">property_association ::= </span></pre><pre><span lang="EN-US">  unique_property_identifier </span></pre><pre><span lang="EN-US">( <b>=&gt;</b> | <b>+=&gt; </b>)</span></pre><pre><span lang="EN-US">      [ <b>constant</b> ] assignment<sup> </sup></span></pre><pre><b><span lang="EN-US">      </span></b><span lang="EN-US">[ in_binding ]<b> ;</b></span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">contained_property_association ::= </span></pre><pre><span lang="EN-US">  unique_property_identifier </span></pre><pre><span lang="EN-US">    <b>=&gt;</b> [ <b>constant</b> ] assignment</span></pre><pre><b><span lang="EN-US">     applies to</span></b><span lang="EN-US"> contained_model_element_path </span></pre><pre><span lang="EN-US">            { <b>,</b> contained_model_element_path }<sup>*</sup> </span></pre><pre><b><span lang="EN-US">     </span></b><span lang="EN-US">[ in_binding ]<b> ;</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unique_property_identifier ::=</span></pre><pre><span lang="EN-US">  [ <i>property_set</i>_identifier :: ] <i>property_name</i>_identifier </span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">contained_model_element_path ::= </span></pre><pre><span lang="EN-US">      ( contained_model_element { <b>.</b> contained_model_element }<sup>*</sup></span></pre><pre><span lang="EN-US">        [ annex_path ] )</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">      | annex_path</span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">contained_model_element ::= </span></pre><pre><span lang="EN-US">    <i>named_element</i>_identifier |</span></pre><pre><span lang="EN-US">    <i>named_element_</i>array_selection_identifier</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">annex_path ::=</span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <b>annex </b><i>annex</i>_identifier <b>{** </b>annex_specific_path <b>**}</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">annex_specific_path ::= &lt;defined by annex&gt; </span></pre><pre><span lang="EN-US">-- It is recommended this path follows the dot-separation syntax of the component path.</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">assignment ::=  property_value | modal_property_value</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">modal_property_value ::= </span></pre><pre><span lang="EN-US">    { property_value in_modes <b>, </b>}<sup>* </sup>property_value [ in_modes ] </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_value ::= single_property_value | property_list_value</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">single_property_value ::= property_expression</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_list_value ::=</span></pre><pre><span lang="EN-US">        <b>(</b>  [ ( property_list_value | property_expression ) </span></pre><pre><span lang="EN-US">         { <b>,</b> ( property_list_value | property_expression ) }<sup>*</sup> ] <b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">in_binding ::= </span></pre><pre><span lang="EN-US">      <b>in binding( </b>platform<i>_</i>classifier_reference </span></pre><pre><span lang="EN-US">                { <b>,</b> platform<i>_</i>classifier_reference }<sup>*</sup> <b>)</b></span></pre><pre style="margin-top: 12pt;"><i><span lang="EN-US">platform</span></i><span lang="EN-US">_classifier_reference ::= </span></pre><pre><span lang="EN-US">        <i>processor</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>virtual_processor</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>bus</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>virtual_bus</i>_unique_component_classifier_reference</span></pre><pre><span lang="EN-US">        | <i>memory</i>_unique_component_classifier_reference</span></pre><pre style="page-break-after: avoid;"><span lang="EN-US"> </span></pre><pre style="page-break-after: avoid;"><span lang="EN-US">property_expression ::=</span></pre><pre><span lang="EN-US">      boolean_term</span></pre><pre><span lang="EN-US">    | real_term</span></pre><pre><span lang="EN-US">    | integer_term</span></pre><pre><span lang="EN-US">    | string_term</span></pre><pre><span lang="EN-US">    | enumeration_term</span></pre><pre><span lang="EN-US">    | unit_term</span></pre><pre><span lang="EN-US">    | real_range_term</span></pre><pre><span lang="EN-US">    | integer_range_term</span></pre><pre><span lang="EN-US">    | property_term</span></pre><pre><span lang="EN-US">    | component_classifier_term</span></pre><pre><span lang="EN-US">    | reference_term</span></pre><pre><span lang="EN-US">    | record_term</span></pre><pre><span lang="EN-US">    | computed_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">boolean_term ::= </span></pre><pre><span lang="EN-US">      boolean_value</span></pre><pre><span lang="EN-US">    | <i>boolean_</i>property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">boolean_value ::= </span><b><span lang="EN-US">true </span></b><span lang="EN-US">| <b>false</b></span></pre><pre><span lang="EN-US">    </span></pre><pre><span lang="EN-US">real_term ::= </span></pre><pre><span lang="EN-US">   signed_aadlreal_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_term ::= </span></pre><pre><span lang="EN-US">   signed_aadlinteger_or_constant</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">string_term ::= string_literal | <i>string</i>_property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">enumeration_term ::= </span></pre><pre><span lang="EN-US">    <i>enumeration</i>_identifier | <i>enumeration</i>_property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">unit_term ::= </span></pre><pre><span lang="EN-US">    <i>unit</i>_identifier | <i>unit</i>_property_constant_term</span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">integer_range_term ::=</span></pre><pre><span lang="EN-US">    integer_term <b>.. </b>integer_term [ <b>delta</b> integer_term ]</span></pre><pre><span lang="EN-US">    | <i>integer_range</i>_property_constant_term</span></pre><pre style="margin-bottom: 0.0001pt;"><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">real_range_term ::=</span></pre><pre><span lang="EN-US">    real_term <b>.. </b>real_term [ <b>delta</b> real_term ]</span></pre><pre><span lang="EN-US">    | <i>real_range</i>_property_constant_term</span></pre><pre><b><span lang="EN-US"> </span></b></pre><pre><span lang="EN-US">property_term ::= </span></pre><pre><span lang="EN-US">   [ <i>property_set</i>_identifier <b>::</b> ] <i>property_name</i>_identifier </span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="EN-US">property_constant_term ::= </span></pre><pre><span lang="EN-US">   [ <i>property_set</i>_identifier <b>::</b> ] <i>property_constant</i>_identifier </span></pre><pre><span lang="EN-US"> </span></pre>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">component_classifier_term ::= </span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">    <b>classifier (</b></span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">     ( unique_component_type_reference |</span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">      
unique_component_implementation_reference )</span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;"> <b>)</b></span></p>

<p class="MsoCommentText" style="margin-bottom: 6pt;"><span lang="EN-US"> </span></p>

<pre><span lang="EN-US">reference_term ::= </span></pre><pre><span lang="EN-US">    <b>reference (</b> contained_model_element_path <b>)</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">record_term ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">    <b>[ </b><i>record_field</i>_identifier =&gt; property_value <b>;</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">     { <i>record_field</i>_identifier =&gt; property_value<b>;</b> }<sup>*</sup>  <b>]</b></span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US">computed_term ::=</span></pre><pre><span lang="EN-US">    <b>compute ( </b><i>function_</i>identifier <b>)</b>    </span></pre><pre style="margin-bottom: 12pt;"><span lang="EN-US"> </span></pre>

<p class="MsoNoteHeading" style="page-break-after: avoid;"><span lang="EN-US">NOTES:</span></p>

<p class="Note"><span lang="EN-US">Boolean operators have the following decreasing
precedence order: (), <b>not</b>, <b>and</b>, <b>or</b>.</span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<pre style="page-break-after: avoid;"><span lang="FR">modes_subclause ::=</span></pre><pre style="page-break-after: avoid;"><b><span lang="FR">    modes</span></b><span lang="FR"> ( { mode | mode_transition }<sup>+ </sup>| none_statement )</span></pre><pre style="page-break-after: avoid;"><span lang="FR"> </span></pre><pre style="page-break-after: avoid;"><span lang="FR">requires_modes_subclause ::=</span></pre><pre style="page-break-after: avoid;"><b><span lang="FR">    requires modes</span></b><span lang="FR"> ( { mode }<sup>+ </sup>| none_statement )</span></pre><pre style="page-break-after: avoid;"><span lang="FR"> </span></pre><pre style="page-break-after: avoid;"><span lang="FR">mode ::= </span></pre><pre><span lang="FR">    <i>defining_mode</i>_identifier : [ <b>initial</b> ] <b>mode</b></span></pre><pre><b><span lang="FR">        </span></b><span lang="FR">[ <b>{</b> { <i>mode</i>_property_association }<sup>+</sup> <b>}</b> ]<b>;</b></span></pre><pre><b><span lang="FR"> </span></b></pre><pre><span lang="FR">mode_transition ::=</span></pre><pre><span lang="FR">    [ <i>defining__mode_transition</i>_identifier <b>:</b> ]</span></pre><pre><span lang="FR">    <i>source_mode</i>_identifier </span></pre><pre><span lang="FR">        <b>-[</b> mode_transition_trigger { <b>,</b> mode_transition_trigger }<sup>*</sup> <b>]-&gt; </b></span></pre><pre><b><span lang="FR">        </span></b><i><span lang="FR">destination_mode</span></i><span lang="FR">_identifier </span></pre><pre><b><span lang="FR">      </span></b><span lang="FR">[<b> {</b> { <i>mode_transition</i>_property_association }<sup>+</sup> <b>}</b> ] <b>;</b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">mode_transition_trigger ::= </span></pre><pre><span lang="FR">    unique_port_identifier | <b>self </b>. <i>event_</i>or_event_data_<i>source_</i>identifier </span></pre><pre><span lang="FR">    | <b>processor . </b><i>port_</i>identifier</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">unique_port_identifier ::= </span></pre><pre><span lang="FR">   [ <i>subcomponent_or_feature_group_or_subprogram_call</i>_identifier <b>. </b>] <i>port</i>_identifier</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">in_modes ::= </span></pre><pre><span lang="FR">    <b>in modes (</b> <i>mode</i>_identifier { <b>,</b> <i>mode</i>_identifier }<sup>*</sup> <b>)</b></span></pre><pre><span lang="FR"> </span></pre><pre><span lang="EN-US">component_in_modes ::= </span></pre><pre><span lang="EN-US">    <b>in modes (</b> ( mode_name { <b>,</b> mode_name }<sup>*</sup> ) <b>)</b></span></pre><pre><span lang="EN-US"> </span></pre><pre><span lang="FR">mode_name ::= <i>local_mode</i>_identifier [ <b>=&gt; </b><i>subcomponent_mode_</i>identifier ]</span></pre><pre><span lang="FR"> </span></pre><pre><span lang="FR">in_modes_and_transitions ::= </span></pre><pre><span lang="FR">    <b>in modes (</b> ( mode_or_transition { <b>,</b> mode_or_transition }<sup>*</sup> <b>)</b></span></pre><pre><b><span lang="FR"> </span></b></pre><pre><span lang="FR">mode_or_transition ::= </span></pre><pre style="margin-bottom: 12pt;"><span lang="FR">        <i>mode</i>_identifier | <i>mode_transition</i>_identifier</span></pre>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="appendix2"><a name="_Toc318320396"></a><a name="_Ref205164320"></a><a name="_Ref187155757"><span lang="EN-US">C.3<span style="font: 7pt &quot;Times New Roman&quot;;">    
</span></span><span lang="EN-US">AADL Core Language </span></a><span lang="EN-US">Meta
Model Element Identifiers</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The following are AADL core language model elements that can be identified
in <b>applies to</b> subclauses of property definitions as property owners, as
acceptable classifiers in classifier property values, and as referable elements
in reference property values.  They correspond to classes in the AADL meta
model.  The indentation partially indicates the subclass hierarchy. For
example, <i>classifier</i> and the list <i>subcomponent</i>, <i>feature</i>,
etc. are subclasses of <i>named element</i>, and <i>component classifier</i>
and <i>feature group type </i>are subclasses of <i>classifier</i>. Subclasses
may inherit from more than one class. For example, the class <i>abstract
classifier</i> is a subclass of both <i>abstract </i>and of <i>classifier</i>. 
The second inheritance is not explicitly shown, but inferred from the name. The
AADL Meta Model Annex document defines the full class hierarchy.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The meta model class name is determined by concatenating the
identifier names, each converted to starting in upper case and followed by
lower case letters.</span></p>

<div align="center">

<table cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border-collapse: collapse; border: medium none;">
 <tbody><tr>
  <td width="638" valign="top" style="width: 478.8pt; border: 1pt solid windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">named element</span></p>
  <p class="MsoNormal"><span lang="EN-US">  classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    component classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">      component type, component
  implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">    feature group type</span></p>
  <p class="MsoNormal"><span lang="EN-US">  classifier feature</span></p>
  <p class="MsoNormal"><span lang="EN-US">    subcomponent, feature, connection,
  mode, mode transition, flow, instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">abstract</span></p>
  <p class="MsoNormal"><span lang="EN-US">  abstract classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    abstract type, abstract
  implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  abstract subcomponent, abstract
  instance</span></p>
  <p class="MsoNormal"><span lang="EN-US">  prototype</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">thread</span></p>
  <p class="MsoNormal"><span lang="EN-US">  thread classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    thread type, thread implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  thread subcomponent, thread instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">thread group</span></p>
  <p class="MsoNormal"><span lang="EN-US">  thread group classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    thread group type, thread group
  implementation, thread group subcomponent, thread group instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">process</span></p>
  <p class="MsoNormal"><span lang="EN-US">  process classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    process type, process implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  process subcomponent, process instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">system</span></p>
  <p class="MsoNormal"><span lang="EN-US">  system classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    system type, system implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  system subcomponent, system instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">data</span></p>
  <p class="MsoNormal"><span lang="EN-US">  data classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    data type, data implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  data subcomponent, data access, data
  instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">subprogram</span></p>
  <p class="MsoNormal"><span lang="EN-US">  subprogram classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    subprogram type, subprogram
  implementation, </span></p>
  <p class="MsoNormal"><span lang="EN-US">  subprogram subcomponent, subprogram
  access, subprogram instance</span></p>
  <p class="MsoNormal"><span lang="EN-US">  subprogram call sequence, subprogram
  call</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">subprogram group</span></p>
  <p class="MsoNormal"><span lang="EN-US">  subprogram group classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    subprogram group type, subprogram
  group implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  subprogram group subcomponent, subprogram
  group access, subprogram group instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">processor</span></p>
  <p class="MsoNormal"><span lang="EN-US">  processor classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    processor type, processor
  implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  processor subcomponent, processor
  instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">virtual processor</span></p>
  <p class="MsoNormal"><span lang="EN-US">  virtual processor classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    virtual processor type, virtual
  processor implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  virtual processor subcomponent, virtual
  processor instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">memory</span></p>
  <p class="MsoNormal"><span lang="EN-US">  memory classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    memory type, memory implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  memory subcomponent, memory access, memory
  instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">bus</span></p>
  <p class="MsoNormal"><span lang="EN-US">  bus classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    bus type, bus implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  bus subcomponent, bus access, bus
  instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">virtual bus</span></p>
  <p class="MsoNormal"><span lang="EN-US">  virtual bus classifier</span></p>
  <p class="MsoNormal"><span lang="EN-US">    virtual bus type, virtual bus
  implementation</span></p>
  <p class="MsoNormal"><span lang="EN-US">  virtual bus subcomponent, virtual bus
  instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="FR">device</span></p>
  <p class="MsoNormal"><span lang="FR">  device classifier</span></p>
  <p class="MsoNormal"><span lang="FR">    device type, device implementation</span></p>
  <p class="MsoNormal"><span lang="FR">  </span><span lang="EN-US">device
  subcomponent, device instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="FR">feature</span></p>
  <p class="MsoNormal"><span lang="FR">  port</span></p>
  <p class="MsoNormal"><span lang="FR">    event port, data port, event data port</span></p>
  <p class="MsoNormal"><span lang="FR">  </span><span lang="EN-US">access</span></p>
  <p class="MsoNormal"><span lang="EN-US">    subprogram access, subprogram group
  access, data access, bus access</span></p>
  <p class="MsoNormal"><span lang="EN-US">    parameter</span></p>
  <p class="MsoNormal"><span lang="EN-US">  feature instance, port instance, access
  instance</span></p>
  <p class="MsoNormal"><span lang="EN-US">feature group</span></p>
  <p class="MsoNormal"><span lang="EN-US">  feature group instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">connection</span></p>
  <p class="MsoNormal"><span lang="EN-US">  port connection, feature group
  connection</span></p>
  <p class="MsoNormal"><span lang="EN-US">  access connection</span></p>
  <p class="MsoNormal"><span lang="EN-US">    bus access connection, data access
  connection, subprogram access connection, subprogram group access connection</span></p>
  <p class="MsoNormal"><span lang="EN-US">  connection instance</span></p>
  <p class="MsoNormal"><span lang="EN-US">    port connection instance, access
  connection instance, mode transition connection instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="FR">mode, mode transition, mode instance, mode
  transition instance, mode transition connection instance </span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">flow</span></p>
  <p class="MsoNormal"><span lang="EN-US">  flow specification</span></p>
  <p class="MsoNormal"><span lang="EN-US">    flow source specification, flow sink
  specification, flow path specification</span></p>
  <p class="MsoNormal"><span lang="EN-US">  end to end flow, flow specification
  instance, end to end flow instance</span></p>
  </td>
 </tr>
 <tr>
  <td width="638" valign="top" style="width: 478.8pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; padding: 0cm 5.4pt;">
  <p class="MsoNormal"><span lang="EN-US">package</span></p>
  </td>
 </tr>
</tbody></table>

</div>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="Appendix" style="margin-left: 0cm; text-indent: 0cm;"><a name="_Toc318320397"></a><a name="_Toc169684142"></a><a name="_Toc167033792"></a><a name="_Toc168661909"></a><a name="_Toc86725715"></a><a name="_Ref86224569"></a><a name="_Ref86224084"></a><a name="_Ref86224077"></a><a name="_Ref86223960"></a><a name="_Ref86223942"></a><a name="_Ref86222237"></a><a name="_Ref86221725"><span lang="EN-US" style="">Appendix D <span style="font: 7pt &quot;Times New Roman&quot;;"> </span></span><span lang="EN-US">Graphical AADL Notation</span></a></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="appendix2"><a name="_Toc318320398"><span lang="EN-US">D.1<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Scope</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This appendix defines a set of graphical symbols for the graphical
AADL notation. To be compliant with the graphical AADL notation you these
iconic symbols must be used.  These graphical symbols represent components and
relationships between components in an AADL model. Graphical AADL diagrams are
legal in accordance with the AADL core standard if the AADL model being
presented graphically is legal and if the correct graphical symbols are used. 
For example, a graphical editor is not permitted to create a connection whose
source and destination are not connected.  Graphical presentations of AADL
models are permitted to show subsets of legal AADL models.  For example,
property values may be entered through a property sheet or dialog box. The
figures in this appendix present different views of an AADL model.  These views
are not prescriptive, but intended to illustrate possible views and layouts.</span></p>

<p class="appendix2"><a name="_Toc318320399"><span lang="EN-US">D.2<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">AADL Graphical Symbols</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">AADL graphical symbols are shown with the AADL logo placed as
decorator in the upper left corner of the symbol.  This logo may be omitted if
its absence does not cause confusion with other graphical notations.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In this section we define the graphical symbols for component categories,
ports and port connections, shared access to data and buses, subprograms and
subprogram calls, execution platforms and binding of application components to
execution platforms.  We also define the representation for component types,
component implementations, and component instances.  These symbols are provided
as a standard set to be used in toolsets implementing the graphical AADL.  If
the standardized set is not fully supported a graphical toolset then, the
toolset must define its mapping with respect to the standardized set.</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Component Categories</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Figure 24 shows the graphical symbols of the component categories in
AADL.    </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="504" height="237" src="imgs/image036.jpg" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320433"></a><a name="_Toc76279866"></a><a name="_Ref72204877"><span lang="EN-US">Figure </span></a><span lang="EN-US">24</span><span lang="EN-US"> AADL
Components Graphical Symbols</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">These graphical symbols are used to describe a system instance and
its components. The same basic symbol is used to represent component types,
component implementations, subcomponents, and component instances of a
particular category. </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="551" height="204" id="Picture 31" src="imgs/image037.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320434"></a><a name="_Toc76279867"></a><a name="_Ref72342469"><span lang="EN-US">Figure </span></a><span lang="EN-US">25</span><span lang="EN-US">
Decorators on Threads</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Decorators may be attached to graphical symbols.  Figure 25 illustrates
the decoration of threads with threads properties that are relevant in a
timing-related view, i.e., it shows whether threads are periodic, aperiodic,
sporadic, timed, hybrid, or background. In the case of periodic, sporadic,
timed, and hybrid threads the decorator indicates the period or timeout value. 
</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Introduction of such decorators is permitted for any AADL property
or other characteristic of model objects represented by the graphical symbol. 
For example, a decorator may be used to indicate completeness of timing
specification in a component, or to mark a Wi-Fi device.  The use of decorators
is optional.</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Component Classifiers</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Figure 26 illustrates the use of the graphical component category
symbols to describe the components in terms of their type, implementation, and
the content of the implementation.  Component types are shown using the basic
graphical symbol for the categories.  The extension relation of a component
type in terms of another component type is shown with a solid line and an
hollow triangle arrow head.  These symbols are typically used in library views
that show the content of AADL specifications or AADL packages, i.e., component
classifiers and their extends relationships (see Annex A.2).</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(8)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In the example of Figure 26, the system type <i>SecureGPSSender</i>
extends the system type <i>GPSSender</i>. If a component type that is an
extension of another component type is shown graphically, then both the
features that are locally declared and the features inherited from the component
type being extended may be shown graphically.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(9)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The example shows labels for component classifiers and ports.  The
display of those labels is optional and may be achieved through hovering popup
mechanisms. Labels may be placed outside a symbol, inside a symbol, or as
labels with a line attachment appropriate with the available display real
estate.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="483" height="205" id="Picture 21" src="imgs/image038.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320435"></a><a name="_Toc76279868"></a><a name="_Ref72340950"><span lang="EN-US">Figure </span></a><span lang="EN-US">26</span><span lang="EN-US">
Component Types and Implementations</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(10)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
26 also shows the representation of component implementations; its graphical
symbol is shown using the bold-lined graphical symbol of the category.  This
bold-lining technique is optional, but recommended if component implementations
must be visually distinguished from component types or subcomponents.  The
relation to the component type is expressed by a dashed line with an hollow
triangle arrow head.  Component implementation names are shown with a dot (“.”)
separated the component type identifier and component implementation
identifier. </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="246" height="129" id="Picture 22" src="imgs/image039.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320436"></a><a name="_Toc76279869"></a><a name="_Ref90891354"><span lang="EN-US">Figure </span></a><span lang="EN-US">27</span><span lang="EN-US">
Subcomponents</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(11)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Subcomponents
are shown using the graphical symbol of the component category as illustrated
in Figure 27.  The subcomponent label shows the subcomponent name, optionally
followed by the component classifier after a colon (:).  An underline may be
used for the name as necessary to visually distinguish the name from the
component classifier label.  Multiplicities of components and features can be
shown as a decorator in the upper right corner of the graphical symbol.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(12)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">It
is permitted to include a text box with additional information regarding the
context of the graphical view, such as the name, category, and property values
of the AADL model object that is the root of the graphical view. Figure 28
shows the content of a system implementation without the enclosing component
symbol and with a text box that contains information relevant to the enclosing
component.  The dashed rectangle is used to indicate the boundary of the view
panel. AADL model elements may have a label.  This label consists of the name
and optionally the component classifier – separated by a colon (:).  </span><span lang="EN-US">Figure 28</span><span lang="EN-US"> illustrates the use of labels for a
subcomponent and a port.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="464" height="159" alt="implementationcontext" id="Picture 23" src="imgs/image040.jpg" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320437"></a><a name="_Ref95273349"><span lang="EN-US">Figure </span></a><span lang="EN-US">28</span><span lang="EN-US"> Component Implementation Content with Text
Box</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(13)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Components
may be parameterized with prototypes. </span><span lang="EN-US">Figure 29</span><span lang="EN-US"> shows how such prototypes can be
illustrated graphically. A paper symbol represents the collection of prototypes
and is attached to the right corner. The content of graphical symbol can be the
prototype specification or the prototype bindings.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="336" height="153" id="Picture 24" src="imgs/image041.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320438"></a><a name="_Ref208333109"><span lang="EN-US">Figure </span></a><span lang="EN-US">29</span><span lang="EN-US"> Components and Prototypes</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Abstract Features, Ports, and
Connections</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(14)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
30 shows the graphical symbols for abstract features and ports.  In this
figure, the text represents the graphical symbol legend rather than text label
examples in a graphical AADL model.  The features are placed anywhere on the
perimeter of the component graphical symbol.  The orientation of the graphical
symbol indicates the direction of the feature.  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="576" height="245" id="Picture 29" src="imgs/image042.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320439"></a><a name="_Toc76279870"></a><a name="_Ref75968938"><span lang="EN-US">Figure </span></a><span lang="EN-US">30</span><span lang="EN-US">
Abstract Features, Ports and </span><span lang="EN-US">Connections</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(15)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Abstract
features are represented by a solid circle, data ports by a solid triangle,
event ports by an open angle arrow, and event data ports by a combination of
both.  The port direction is indicated by the direction of the symbol tip.  In
the case of an abstract feature an angle arrow is added to indicate the
direction. The orientation of the symbol must be adjusted according to the
placement on the perimeter.  For example, the triangle of an incoming data port
must always be oriented such that the tip points into the component graphical
symbol.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(16)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
abstract feature and port connections are shown as a single solid line. A legal
AADL model requires connections to always be connected to ports.  In other
words, a diagram showing a connection attached to only one port is not
acceptable except during the operation of creating or modifying a connection
graphically.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(17)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
ports may also have immediate and delayed connections. A single solid line with
a double arrow indicates an immediate connection.  A delayed connection is
marked with a double line crossing the connection line.  If the direction of
the connection cannot easily be inferred from the feature symbols, then a
single arrow may be added to the connection line.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="528" height="130" src="imgs/image043.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320440"></a><a name="_Ref105940334"><span lang="EN-US">Figure </span></a><span lang="EN-US">31</span><span lang="EN-US"> Connections &amp; Branch Points</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(18)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">A
connection connects two features.  Connections can be made between components
that are the same level of the system hierarchy, i.e., subcomponents within the
same implementation, or between a component and its enclosing component.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(19)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">If a
port has multiple outgoing or incoming connections, they may either be shown as
separate lines or as a single line with lines branching out from it (see Figure
31).  The branch points may be marked by a dot to distinguish them from
crossing lines.  </span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="MsoNormal"><b><span lang="EN-US">Feature Groups</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(20)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Feature
groups are represented by a half circle and a solid ball with the ball always
facing to the outside of a component symbol.  Inside a component, individual
ports or feature groups of subcomponents may be connected to the half circle of
the feature group as shown in </span><span lang="EN-US">Figure 32</span><span lang="EN-US">.  The half circle and solid ball represents a collapsed view of a
feature group. Feature group connections are shown as solid line.  The
direction of a feature group connection may be indicated by an arrow.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="398" height="121" id="Picture 33" src="imgs/image044.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320441"></a><a name="_Ref208331094"><span lang="EN-US">Figure </span></a><span lang="EN-US">32</span><span lang="EN-US"> Feature Groups &amp; Connections</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(21)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Feature
group types may be shown by using an expanded symbol for the feature group and
by attaching the feature group elements to the enlarged half circle of the
feature group symbol (see </span><span lang="EN-US">Figure 33</span><span lang="EN-US">).  Alternatively the half circle may be replaced by a vertical bar,
which can be expanded to accommodate a larger number of feature group elements.
The expanded symbol is useful for graphically representing feature group type
declarations and for detailing connections to feature groups (see </span><span lang="EN-US">Figure 34</span><span lang="EN-US">).</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="367" height="75" src="imgs/image045.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320442"></a><a name="_Ref90969254"><span lang="EN-US">Figure </span></a><span lang="EN-US">33</span><span lang="EN-US"> Expanded Port Group Type Symbol</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(22)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
34 shows a set of feature groups in a system hierarchy.  Starting from the
left, one thread supplies a data port and the other thread furnishes a feature
group.  This composite feature group is routed from a process via its enclosing
system to another system.  Within that system the feature group is decomposed
into one data port and a feature group (shown using an expanded feature group
symbol).  That feature group is routed to a process, which decomposes it into
its constituents, a data port and an event data port.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="504" height="163" src="imgs/image046.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320443"></a><a name="_Toc76279871"></a><a name="_Ref72679220"><span lang="EN-US">Figure </span></a><span lang="EN-US">34</span><span lang="EN-US">
Feature Group Composition and Connections</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(23)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
expanded feature group symbol can be used to visually distinguish between a
connection that passes the whole feature group to a subcomponent and a
connection that passes a port group element that itself is a feature group to a
subcomponent by connecting the former to the feature group half moon and the
latter to the feature group element (see Figure 34).</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Shared Access to Data and Buses</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(24)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">In
AADL components may require access to other components and provide access to
components contained in them.  The standard limits such shared access to data
components and buses.  The same symbol is used to represent access to bus and
to data.  Figure 35 illustrates the graphical notation to represent sharing of
data.  Thread1 requires access to a data component and contains a data
component Data1, to which it provides access to other components.  The <i>provides
data access</i> and <i>requires data access</i> features are shown pointing in
the direction of the component requiring data access.  Data access connections
are shown as a single solid line.  Both ends of a data access connection must
be connected.  In our example the required data access of Thread2 is resolved
to the data component Data1.  Similarly, the required data access of Thread1 is
resolved to the data component Data2, which exists at the same system level as Thread1. 
</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="463" height="153" src="imgs/image047.jpg" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320444"></a><a name="_Toc76279872"></a><a name="_Ref72338165"><span lang="EN-US">Figure </span></a><span lang="EN-US">35</span><span lang="EN-US"> Shared
Data Access</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(25)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
36 illustrates access between processors, memory, and devices through shared
access to buses.   Memory, devices, processors, and systems can have required
bus access.  Processors and systems can have provided bus access.  Bus access
connections are shown as a solid line.  Both ends of a data access connection
must be connected.  Required bus access is resolved to a bus component the same
way required data access is resolved to a data component. Also shown in the
figure is a provided bus access symbol to indicate that the bus is made
accessible outside the system.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="488" height="152" src="As5506-draft2.1-03052012_-_Final_files/image025.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320445"></a><a name="_Toc76279873"></a><a name="_Ref73459459"><span lang="EN-US">Figure </span></a><span lang="EN-US">36</span><span lang="EN-US"> Shared
Bus Access</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Subprogram Calls and Subprogram Access</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(26)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
37  illustrates the graphical symbols for subprogram call sequences and
parameter passing.    The sequence of calls is shown by a set of subprogram
graphical symbols with the call order indicated by a single solid line with an
open arrow head.  The graphical display of the call sequence order by use of
the solid line with the open arrow head is optional.  If not shown, the call
sequence can be inferred from the left to right ordering of the subprogram
symbol placements.  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="433" height="138" src="imgs/image048.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320446"></a><a name="_Toc76279874"></a><a name="_Ref72679742"><span lang="EN-US">Figure </span></a><span lang="EN-US">37</span><span lang="EN-US">
Subprogram Calls and Parameter Passing</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(27)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
37 shows a subprogram call sequence with two calls f1 and f2 to the same
subprogram filter.  Subprogram call labels follow the convention of
subcomponent and feature labels discussed earlier.  The call sequence ordering
is determined by the placement of the subprogram graphical symbols from left to
right.  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(28)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Optionally,
the call sequence ordering can be explicitly shown. Subprogram parameters are
shown using a solid triangle - the same symbol as used for data ports.  A
parameter connection is shown as a solid line between two parameters or between
a parameter and a data port of a thread containing the subprogram call.  The
direction of parameter connections must follow the direction of the call
sequence.  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="290" height="106" id="Picture 44" src="imgs/image049.jpg" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320447"></a><a name="_Ref105943405"><span lang="EN-US">Figure </span></a><span lang="EN-US">38</span><span lang="EN-US"> Subprogram Access Features</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(29)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure 38</span><span lang="EN-US"> illustrates the subprogram and
subprogram group access feature symbols. The arrow direction indicates whether
the feature is provided or required and aligns with the direction of the call. 
Subprogram access connections and subprogram group access connections use a
solid line.  </span></p>

<p class="MsoNormal"><b><span lang="EN-US">Modes and Mode Transitions</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(30)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure
39 illustrates the graphical representation for modes. Components and
connections involved in a mode are shown in the context of the enclosing
component implementation.  Individual modes are shown as hexagons.  The initial
mode is shown with a bullet and a transition to the appropriate mode.  Mode
transitions are shown as simple lined arrows.  The events triggering a mode
transition can be shown with dashed lines connecting the event port to the mode
transition, or by attaching the event name as a transition label (shown in Figure
39).  </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(31)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Tools
may show mode membership of connections and subcomponents in the following
way.  Components and connections involved in a mode, i.e., the modal
configuration of a component, are shown in the context of the enclosing
component implementation.  Mode1 is shown in one color (shown in black in Figure
39) to indicate it as the selected mode. The components, ports, and connections
that are part of the selected mode are highlighted in the same color.  Other
modes and inactive components, ports, and connections are shown in a different
color (shown in gray in Figure 39).   In other words, the selection of a mode
defines a subset view.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="218" height="194" src="imgs/image050.jpg" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320448"></a><a name="_Toc76279876"></a><a name="_Ref72339901"><span lang="EN-US">Figure </span></a><span lang="EN-US">39</span><span lang="EN-US"> Modes
and Mode Transitions</span></p>

<p class="MsoNormal"><b><span lang="EN-US">  Modeling of Flows</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(32)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure 40</span><span lang="EN-US"> shows the graphical symbols for
flow source, flow sink, and flow path specifications and their use in a
component type.  Flow path symbols are connected to two ports, while flow
source and flow sink symbols are connected to one port.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><img width="375" height="120" id="Picture 49" src="imgs/image051.png" /></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320449"></a><a name="_Ref95295438"><span lang="EN-US">Figure </span></a><span lang="EN-US">40</span><span lang="EN-US"> Flow Specifications</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(33)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Figure 41</span><span lang="EN-US"> illustrates how tools may
graphically visualize a flow implementation using the selection technique for
mode modeling.  A flow implementation can be shown in black by selecting the
flow of interest as a flow specification in the text box. Subcomponent flows
and connections that are not part of the flow are shown in gray.  An editor can
use this visualization both for displaying flows and for defining flows. 
End-to-end flows can be visualized in a similar manner.  The text box has a
compartment showing end-to-end flow names.  Selection of one results in showing
the flow in black while graying out the rest.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="477" height="164" src="imgs/image052.jpg" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320450"></a><a name="_Ref95295563"><span lang="EN-US">Figure </span></a><span lang="EN-US">41</span><span lang="EN-US"> Flow Implementation Selection</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Packages, Property Sets, and Annexes</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(34)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
graphical symbol for packages is a folder with the tab on the left.  The
graphical symbol for a property set is a folder with the tab on the right. The
graphical symbol for annex libraries is a folder with the tab on the left and
the annex name embedded in the annex-specific brackets from the textual AADL
syntax.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(35)<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">The
content of packages may be shown in a nested fashion.  Public and private
sections of packages may be shown as appropriately labeled compartments. Alternatively,
component classifiers in a package may be labeled using the UML convention of a
plus (“+”) for public and minus (“-“) for private classifiers.</span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="459" height="156" src="imgs/image053.jpg" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320451"><span lang="EN-US">Figure </span></a><span lang="EN-US">42</span><span lang="EN-US"> Packages, Property Sets, and Annex
Libraries</span></p>

<p class="appendix2"><a name="_Toc318320400"><span lang="EN-US">D.3<span style="font: 7pt &quot;Times New Roman&quot;;">     </span></span><span lang="EN-US">Implementation Suggestions</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This section suggests ways of graphically showing the system
structure and topology.  Because of the structure of the underlying formalisms,
certain visualizations or views capture information that is particularly useful
to the user.  The examples given in this section are recommendations not
requirements. A graphical toolset may include alternative views.</span></p>

<p class="MsoNormal"><b><span lang="EN-US">Package Library View</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">An AADL model represents a system as a set of component type and
implementation declarations.  These declarations may be organized into packages
and may have <i>extends</i> relationships.   This organizational structure can
be shown in a <i>library view </i>(see </span><span lang="EN-US">Figure 43</span><span lang="EN-US">).  This library view may show the
content of a package as component types and component implementations, and the <i>extends</i>
and <i>implements</i> relationship (see </span><span lang="EN-US">Figure 26</span><span lang="EN-US">).  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="441" height="199" src="imgs/image054.jpg" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320452"></a><a name="_Ref95296626"><span lang="EN-US">Figure </span></a><span lang="EN-US">43</span><span lang="EN-US"> A Component Library View</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The nesting of package names may be simply reflected in the package
name label, or the packages themselves may be shown as a hierarchy based in the
name nesting.     </span></p>

<p class="MsoNormal"><b><span lang="EN-US">System Instance Hierarchy</span></b></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Actual systems have an instance hierarchy.  This system instance
hierarchy is implicitly represented in the set of component types and component
implementations with one system implementation identified as the root of the
system instance.  The subcomponents of this root system implementation
represent the components making up the system, and the subcomponents contained
in the component implementations of these subcomponents recursively identify
the nested component instances. </span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The system instance hierarchy may be shown as a hierarchical tree or
as graphical structures.  In Figure 44, the system hierarchy is shown in tree
form with a solid line with a diamond at the container end showing the
containment relationship. In </span><span lang="EN-US">Figure 45</span><span lang="EN-US">, the system hierarchy is shown as a nesting of the graphical
symbols to reflect the containment.  Both representations are permissible.  </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="365" height="179" src="imgs/image055.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320453"></a><a name="_Toc76279877"></a><a name="_Ref72205112"><span lang="EN-US">Figure </span></a><span lang="EN-US">44</span><span lang="EN-US">
Tree-Structured Graphical Instance Hierarchy</span><span lang="EN-US"> </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="289" height="179" src="imgs/image056.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320454"></a><a name="_Ref90975316"><span lang="EN-US">Figure </span></a><span lang="EN-US">45</span><span lang="EN-US"> Nested Graphical Instance Hierarchy</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">In many cases navigational tree views for showing hierarchical
structures are combined with a second panel showing the content of the selected
item in the navigational tree.  This allows the full instance hierarchy to be
shown in the navigator and the currently selected element in a graphical layout
(see </span><span lang="EN-US">Figure 46</span><span lang="EN-US">). </span></p>

<p align="center" class="MsoNormal" style="text-align: center;"><span lang="EN-US"><img width="404" height="168" src="imgs/image057.png" /></span></p>

<p align="center" class="MsoCaption" style="text-align: center;"><a name="_Toc318320455"></a><a name="_Ref90975464"><span lang="EN-US">Figure </span></a><span lang="EN-US">46</span><span lang="EN-US"> Instance Navigation &amp; Graphical Viewer</span></p>

<span lang="EN-US" style="font-size: 10pt; font-family: &quot;Helvetica&quot;,&quot;sans-serif&quot;; color: black;"><br clear="all" style="page-break-before: always;" />
</span>

<p align="left" class="MsoNormal" style="margin-bottom: 0.0001pt; text-align: left;"><span lang="EN-US"> </span></p>

<p class="Appendix" style="margin-left: 0cm; text-indent: 0cm; page-break-before: auto;"><a name="_Toc169684143"></a><a name="_Toc167033793"></a><a name="_Toc168661910"></a><a name="_Toc86725716"></a><a name="_Toc86220753"></a><a name="_Toc86220281"></a><a name="_Toc86220159"></a><a name="_Toc86219908"></a><a name="_Toc86219803"></a><a name="_Toc79295040"></a><a name="_Ref75328707"></a><a name="_Ref64476344"></a><a name="_Ref27809074"></a><a name="_Toc8550427"></a><a name="_Toc535729931"></a><a name="_Toc532013648"></a><a name="_Toc520707634"></a><a name="_Toc318320401"></a><a name="_Ref197921773"></a><a name="_Toc169684145"></a><a name="_Toc167033795"></a><a name="_Toc168661912"></a><a name="_Toc86725719"></a><a name="_Toc86220756"></a><a name="_Toc86220284"></a><a name="_Toc86220160"></a><a name="_Toc86219911"></a><a name="_Toc86219806"></a><a name="_Toc79295043"></a><a name="_Ref75328708"></a><a name="_Ref57451833"></a><a name="_Ref57451826"><span lang="EN-US" style="">Appendix E <span style="font: 7pt &quot;Times New Roman&quot;;"> </span></span><span lang="EN-US">AADL </span></a><span lang="EN-US">Meta Model and XML Specification</span></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">This appendix
is available as a separate document.</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;"> </span></p>

<p class="Appendix" style="margin-left: 0cm; text-indent: 0cm; page-break-before: auto;"><a name="_Toc318320402"></a><a name="_Ref197921799"></a><a name="_Ref197921792"><span lang="EN-US" style="">Appendix F <span style="font: 7pt &quot;Times New Roman&quot;;"> </span></span><span lang="EN-US">Unified
Modeling Language (UML) Profile</span></a></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">The UML2
profile of AADL is defined as a subset profile of MARTE. It is included in the
OMG MARTE document.</span></p>

<p class="Appendix" style="margin-left: 0cm; text-indent: 0cm;"><a name="_Toc318320403"></a><a name="_Toc169684138"></a><a name="_Toc167033788"></a><a name="_Toc168661905"></a><a name="_Toc86725711"></a><a name="_Toc86220748"></a><a name="_Toc86220276"></a><a name="_Toc86220155"></a><a name="_Toc86219903"></a><a name="_Toc86219798"></a><a name="_Toc79295035"></a><a name="_Ref27809010"><span lang="EN-US" style="">Appendix G <span style="font: 7pt &quot;Times New Roman&quot;;">            
</span></span><span lang="EN-US">Profiles and Extensions</span></a><span lang="EN-US"> </span></p>

<p class="InformNorm"><span lang="EN-US">Informative</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Profiling of the AADL standard is supported through project-specific
changes to the predeclared </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">AADL_Project</span><span lang="EN-US"> property set and through project-specific constraints that are
checked by tools.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A project is allowed to add consistency rules to constrain the
architecture that can be processed. Such constraints must be documented,
including the motivation, rationale, implications.  An example constraint is
that a subclause, such as <b>subcomponents</b>, must be specified with <b>none</b>
to indicate that no elements exist. Another example constraint is that all
communication between processes must be through port connections. An AADL model
that is constrained through such consistency rules is still considered to be a
legal AADL model.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(3)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The reasons for such constraints are to restrict the system to be
modeled, e.g., High integrity systems, or   specific architectures such as
ARINC653, or to reflect inability to provide support for all possible execution
semantics in the runtime system.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(4)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A profile may also include extensions to AADL, such as additional
properties that are defined in a property set.  For example, support for the
ARINC 653 architecture may include partition-specific properties and health
monitoring specific properties.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(5)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">Profiles can be turned into a standardized set of guidelines, for
example, the effort to define guidelines for modeling ARINC653 architectures in
AADL.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(6)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">A <i>minimal</i> AADL core subset is defined to support the
following restrictions:</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(7)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">No modes, no user defined property sets, no runtime protection of
virtual address spaces, single processor, no virtual processor, no virtual bus,
queue depth 1, no remote subprogram calls, no sporadic, background, hybrid,
timed threads.</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;"> </span></p>

<p class="ANNEX" style="text-indent: -18pt;"><a name="_Toc169684150"></a><a name="_Toc167033800"></a><a name="_Toc168661917"></a><a name="_Toc86725724"></a><a name="_Toc86220761"></a><a name="_Toc86220289"></a><a name="_Toc86220162"></a><a name="_Toc86219916"></a><a name="_Toc86219811"></a><a name="_Toc79295048"></a><a name="_Ref75328722"></a><a name="_Ref75328715"></a><a name="_Toc318320404"></a><a name="_Ref194292696"><span lang="EN-US"><span style="font: 7pt &quot;Times New Roman&quot;;">                                                   
</span>Annex Document A<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Code Generation</span></a></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">This annex document
is available as a separate document.</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;"> </span></p>

<p class="ANNEX" style="text-indent: -18pt; page-break-before: auto;"><a name="_Toc318320405"></a><a name="_Ref194292714"><span lang="EN-US"><span style="font: 7pt &quot;Times New Roman&quot;;">                                                       
</span>Annex Document B<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Data Modeling</span></a></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">This annex
document is available as a separate document.</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;"> </span></p>

<p class="ANNEX" style="text-indent: -18pt; page-break-before: auto;"><a name="_Toc318320406"></a><a name="_Ref194293144"></a><a name="_Ref194293139"><span lang="EN-US"><span style="font: 7pt &quot;Times New Roman&quot;;">                                                           
</span>Annex Document C<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Error Model</span></a></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">This annex
document is available as a separate document.</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;"> </span></p>

<p class="ANNEX" style="text-indent: -18pt; page-break-before: auto;"><a name="_Toc318320407"></a><a name="_Ref194216256"><span lang="EN-US"><span style="font: 7pt &quot;Times New Roman&quot;;">                                                     
</span>Annex Document D<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Behavior Model</span></a></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">This annex
document is available as a separate document.</span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

<p class="ANNEX" style="text-indent: -18pt; page-break-before: auto;"><a name="_Toc318320408"><span lang="EN-US"><span style="font: 7pt &quot;Times New Roman&quot;;">                                                        
</span>Annex Document E<span style="font: 7pt &quot;Times New Roman&quot;;">     
</span></span><span lang="EN-US">Mini Annexes</span></a></p>

<p class="InformNorm"><span lang="EN-US">Normative</span></p>

<p class="EditingComment"><span lang="EN-US" style="color: windowtext;">This annex
document will contain small sublanguage annex extensions.  Candidates are: Data
set support; Equivalence and Signature Matching rules, Configuration constraint
support; Mode transition and dispatch trigger condition support.</span></p>

<p class="annex2"><a name="_Toc318320409"><span lang="EN-US">Annex E.1<span style="font: 7pt &quot;Times New Roman&quot;;">  </span></span><span lang="EN-US">Data
Sets</span></a></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(1)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">This annex is to provide support for defining sets of property
associations and allowing them to be associated with a model.  A data set is a
named collection of contained property associations that all have a common root
for their <b>applies to</b> paths.  Such named data sets can be defined as
elements of a </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DataSet</span><span lang="EN-US"> annex library and can be referenced in </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">DataSet</span><span lang="EN-US"> annex
subclauses.</span></p>

<p class="NumberedParagraph"><span lang="EN-US" style="font-family: &quot;Lucida Sans Typewriter&quot;;">(2)<span style="font: 7pt &quot;Times New Roman&quot;;">   </span></span><span lang="EN-US">The purpose of this annex is to provide the ability to annotate
elements of an AADL model with data that is expressed as property
associations.  For example, we can define a dataset that represents estimated
execution time of threads and subprograms, a second dataset that represents
benchmark execution time of threads and subprogram, and a third dataset that
represents measured execution time of actual code.  Different sets of
information can be kept in separate datasets, e.g., security related information
may be kept separate from timing information. Different datasets can be
associated with the same model, e.g., various combinations of timing-related
datasets and security-related datasets can be associated with the system
implementation that represents the root of a system.</span></p>

<p class="Note" style="margin-left: 28.8pt;"><span lang="EN-US" style="font-size: 10pt;">NOTE: Model-related data may already exist in a user-defined format. 
In that case the data does not have to be converted into an AADL property
association representation.  Instead the modeler can associate the name of a
file that contains such data through a user-defined property.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Syntax</span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">dataset_annex_library ::= </span></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">    defining_dataset_identifier <b>applies
to </b>unique_component_implementation_reference </span></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>properties</b></span></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">        {
contained_property_association </span></span><span lang="EN-US">}<sup>+</sup> </span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>end</b> <i>dataset</i>_identifier<b><i>
</i>;</b></span></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><b><span lang="EN-US"> </span></b></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">dataset_annex_subclause ::= </span></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">    <b>with </b>unique_dataset_reference
{ <b>, </b>unique_dataset_reference }</span></span><sup><span lang="EN-US">* </span></sup><b><span lang="EN-US">;</span></b></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US"> </span></span></p>

<p class="NumberedParagraph" style="margin-left: 0cm; text-indent: 0cm;"><span class="HTMLPreformattedChar1"><span lang="EN-US">unique_dataset_reference ::=
unique_package_name <b>::</b> <i>dataset_</i>identifier </span></span></p>

<p class="Note"><span lang="EN-US">NOTE: The </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">Unique_component_implementation_reference</span><span lang="EN-US"> and </span><span lang="EN-US" style="font-family: &quot;Courier New&quot;;">contained_property_association</span><span lang="EN-US"> syntax rules are those defined in the AADL core language standard.</span></p>

<p class="DescriptionHeading"><span lang="EN-US">Naming Rules</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N1)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The defining identifier of a dataset must be
unique within the same annex library declaration.  In other words, an AADL
package can contain only one data set annex library and each dataset annex
library has its own name space.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N2)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The dataset reference must name a dataset that
is defined in a dataset annex library. The dataset annex library is uniquely
identified by the AADL package it is contained in.</span></p>

<p class="Namingrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(N3)<span style="font: 7pt &quot;Times New Roman&quot;;">       
</span></span><span lang="EN-US">The root of the <b>applies to</b> path of the
contained property associations is the component implementation referenced in
the <b>applies to</b> statement of the dataset definition.</span></p>

<p class="DescriptionHeading" style="margin-left: 28.8pt;"><span lang="EN-US">Legality
Rules</span></p>

<p class="Legalityrule"><span lang="EN-US" style="font-family: &quot;Helvetica-Narrow&quot;,&quot;sans-serif&quot;;">(L1)<span style="font: 7pt &quot;Times New Roman&quot;;">        
</span></span><span lang="EN-US">The dataset annex subclause must be declared as
one of the annex subclauses of a component implementation extension of the
component implementation identified as the root in the <b>applies to </b>of the
dataset.</span></p>

<p class="MsoNormal"><span lang="EN-US"> </span></p>

</div>

<div><br clear="all" />

<hr width="33%" size="1" align="left" />

<div id="ftn1">

<p class="MsoFootnoteText"><a href="#_ftnref1" name="_ftn1" title=""><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt;"><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt; color: black;">[1]</span></span></span></span></a><span lang="EN-US"> This was the original name of the SAE AADL.</span></p>

</div>

<div id="ftn2">

<p class="MsoFootnoteText"><a href="#_ftnref2" name="_ftn2" title=""><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt;"><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt; color: black;">[2]</span></span></span></span></a><span lang="EN-US"> VHDL is the “Very-High-Speed-Integrated-Circuit Hardware
Description Language.  See IEEE  VHDL Analysis and Standardization Group for
details and status.</span></p>

</div>

<div id="ftn3">

<p class="MsoFootnoteText"><a href="#_ftnref3" name="_ftn3" title=""><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt;"><span class="MsoFootnoteReference"><span lang="EN-US" style="font-size: 8pt; color: black;">[3]</span></span></span></span></a><span lang="EN-US"> MatLab and SimuLink are commercial tools available from The
MathWorks.</span></p>

</div>

</div>




<div id="blackbird" style="display: none; " class="bbSmall bbTopRight"><div class="header"><div class="left"><div id="bbFilters" class="filters" title="click to filter by message type"><span class="debug" type="debug"></span><span class="info" type="info"></span><span class="warn" type="warn"></span><span class="error" type="error"></span><span class="profile" type="profile"></span></div></div><div class="right"><div id="bbControls" class="controls"><span id="bbSize" title="large" op="resize" class="large"></span><span class="clear" title="clear" op="clear"></span><span class="close" title="close" op="close"></span></div></div></div><div class="main"><div class="left"></div><div class="mainBody"><ol><li class="profile"><span class="icon"></span>serialize</li></ol></div><div class="right"></div></div><div class="footer"><div class="left"><label for="bbVis"><input type="checkbox" id="bbVis" />Visible on page load</label></div><div class="right"></div></div></div></body></html>